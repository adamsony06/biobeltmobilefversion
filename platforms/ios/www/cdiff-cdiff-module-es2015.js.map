{"version":3,"sources":["./src/app/cdiff/cdiff.page.html","./src/app/cdiff/cdiff-routing.module.ts","./src/app/cdiff/cdiff.module.ts","./src/app/cdiff/cdiff.page.scss","./src/app/cdiff/cdiff.page.ts"],"names":[],"mappings":"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","file":"cdiff-cdiff-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Contrôle diffusion CO2</ion-title>\\n    <ion-buttons slot=\\\"end\\\" *ngIf=\\\"!global.isBBAM\\\">\\n      <ion-button fill=\\\"clear\\\"> <ion-icon name=\\\"globe\\\" color=\\\"light\\\" (click)=\\\"onSynchroB1B2();\\\"></ion-icon>ADMIN</ion-button> \\n     </ion-buttons>\\n     <ion-buttons slot=\\\"end\\\" *ngIf=\\\"global.isBBAM\\\">\\n      <ion-button fill=\\\"clear\\\"> <ion-icon name=\\\"wifi\\\" color=\\\"light\\\"></ion-icon>{{global.ssid}}</ion-button> \\n     </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row style=\\\"text-align: center;\\\">\\n      <ion-col size=\\\"12\\\"><ion-button shape=\\\"round\\\" size=\\\"large\\\" [color]=\\\"colordif\\\" (click)=\\\"startstop();\\\">{{textdiff}}</ion-button></ion-col>\\n    </ion-row>\\n\\n  </ion-grid>\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title style=\\\"text-align: center;\\\">Paramètre</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n            Débit Max\\n          </ion-col>\\n          <ion-col>\\n            <input  type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" step=\\\"0.1\\\"\\n                    \\n                    (ngModelChange)=\\\"changeFluxMax();\\\"\\n                    [(ngModel)]=\\\"fluxmax\\\">\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>Intensité</ion-col>\\n          <ion-col> <input  type=\\\"number\\\" class=\\\"form-control form-control-sm\\\"\\n                    \\n            (ngModelChange)=\\\"changeInt();\\\"\\n            [(ngModel)]=\\\"intensity\\\"></ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col >Bouteille active</ion-col>\\n          <ion-col>\\n            <select class=\\\"custom-select custom-select-sm\\\"\\n                \\n            (ngModelChange)=\\\"changeResAct($event);\\\"\\n            [(ngModel)]=\\\"resActive\\\">\\n      <option value=\\\"0\\\">B0</option>\\n      <option value=\\\"1\\\">B1</option>\\n      <option value=\\\"2\\\">B2</option>\\n    </select>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n      \\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title style=\\\"text-align: center;\\\">Mesures</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"6\\\">\\n            <ion-label color=\\\"dark\\\">{{\\\"Intensité : \\\"+ intensity}}</ion-label>\\n          </ion-col>\\n          <ion-col size=\\\"6\\\">\\n            <ion-label color=\\\"dark\\\">{{\\\"Température : \\\"+temp.toFixed(2)+\\\" °C\\\"}}</ion-label>\\n        </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"6\\\"></ion-col>\\n          <ion-col size=\\\"3\\\"><ion-label color=\\\"dark\\\" style=\\\"font-weight :bolder\\\"> Réf</ion-label></ion-col>\\n          <ion-col size=\\\"3\\\"><ion-label color=\\\"dark\\\" style=\\\"font-weight :bolder\\\">Mesure</ion-label></ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"6\\\"><ion-label color=\\\"dark\\\">Débit (nl/min):</ion-label></ion-col>\\n          <ion-col size=\\\"3\\\"><ion-label color=\\\"dark\\\">{{debiRef.toFixed(3)}}</ion-label></ion-col>\\n          <ion-col size=\\\"3\\\" [ngClass]=\\\"{'bgsuccess':backgroundDeb,'bgdanger':!backgroundDeb, 'bgwarning':bgdebwarning}\\\"><ion-label color=\\\"dark\\\">{{debiMes.toFixed(3)}}</ion-label></ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"6\\\"><ion-label color=\\\"dark\\\">PE (Bars):</ion-label></ion-col>\\n          <ion-col size=\\\"3\\\"><ion-label color=\\\"dark\\\"></ion-label></ion-col>\\n          <ion-col size=\\\"3\\\"><ion-label color=\\\"dark\\\">{{peMes.toFixed(3)}}</ion-label></ion-col>\\n\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"6\\\"><ion-label color=\\\"dark\\\">PS (Bars):</ion-label></ion-col>\\n          <ion-col size=\\\"3\\\"></ion-col>\\n          <ion-col size=\\\"3\\\"><ion-label color=\\\"dark\\\">{{psMes.toFixed(3)}}</ion-label></ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"6\\\"><ion-label color=\\\"dark\\\">PS comp (Bars):</ion-label></ion-col>\\n          <ion-col size=\\\"3\\\"><ion-label color=\\\"dark\\\"></ion-label></ion-col>\\n          <ion-col size=\\\"3\\\"><ion-label color=\\\"dark\\\">{{psCompMes.toFixed(3)}}</ion-label></ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-content>\\n  </ion-card> \\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CdiffPage } from './cdiff.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CdiffPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CdiffPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CdiffPageRoutingModule } from './cdiff-routing.module';\n\nimport { CdiffPage } from './cdiff.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CdiffPageRoutingModule\n  ],\n  declarations: [CdiffPage]\n})\nexport class CdiffPageModule {}\n","module.exports = \".bgdanger {\\n  background-color: red;\\n}\\n\\n.bgsuccess {\\n  background-color: green;\\n}\\n\\n.bgwarning {\\n  background-color: yellow;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9oYXJtYW5kL0Rlc2t0b3AvYmlvYmVsdG1vYmlsZS9zcmMvYXBwL2NkaWZmL2NkaWZmLnBhZ2Uuc2NzcyIsInNyYy9hcHAvY2RpZmYvY2RpZmYucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kscUJBQUE7QUNDSjs7QURFQTtFQUNJLHVCQUFBO0FDQ0o7O0FEQ0E7RUFDSSx3QkFBQTtBQ0VKIiwiZmlsZSI6InNyYy9hcHAvY2RpZmYvY2RpZmYucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJnZGFuZ2VyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG59XG5cbi5iZ3N1Y2Nlc3Mge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGdyZWVuO1xufVxuLmJnd2FybmluZyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogeWVsbG93O1xufSIsIi5iZ2RhbmdlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJlZDtcbn1cblxuLmJnc3VjY2VzcyB7XG4gIGJhY2tncm91bmQtY29sb3I6IGdyZWVuO1xufVxuXG4uYmd3YXJuaW5nIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogeWVsbG93O1xufSJdfQ== */\"","import { Component, OnInit, NgZone, ChangeDetectorRef,OnDestroy } from '@angular/core';\nimport { GlobalService } from '../api/global.service';\nimport { Platform, LoadingController } from '@ionic/angular';\nimport { UPCModbus } from '../model/upcv3/upcmodbus';\nimport { Hotspot } from '@ionic-native/hotspot/ngx';\nimport { Network } from '@ionic-native/network/ngx';\nimport { UPCV3 } from '../model/upcv3/upcv3';\n\ndeclare var WifiWizard2: any;\n\n@Component({\n  selector: 'app-cdiff',\n  templateUrl: './cdiff.page.html',\n  styleUrls: ['./cdiff.page.scss'],\n})\nexport class CdiffPage implements OnInit {\n  textdiff = \"Start\";\n  colordif = \"primary\";\n  upc : UPCModbus;\n  fluxmax : number = 0;\n  intensity : number = 0;\n  resActive : number = 0;\n  temp : number = 0;\n  debiRef : number = 0;\n  peRef : number = 0;\n  psRef : number = 0;\n  debiMes : number = 0;\n  peMes : number = 0;\n  psMes : number = 0;\n  psComp : number = 0;\n  psCompMes : number = 0;\n  upc3s : UPCV3[];\n  \n  //diffusion à l'arrêt start reload front detectchange \n\n  constructor(private global :GlobalService,\n              private platform : Platform,\n              private loadingCTRL : LoadingController,\n              private ngZone : NgZone,\n              private hotspot : Hotspot,\n              private network : Network,\n              private cd : ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.upc3s = JSON.parse(localStorage.getItem(\"upc3\"));\n    this.platform.ready().then(async ()=>{\n      if (this.platform.is('ios')){\n        if (localStorage.getItem(\"BBAM\") != \"true\"){\n          WifiWizard2.iOSConnectNetwork(\"BBAM\",\"BioBeltService\").then(async(res)=>{\n            var loading = await this.loadingCTRL.create({\n              message : \"Connection à l'UPC en cours...\",\n              duration : 10000\n            })\n            loading.present();\n            this.global.isBBAM = true;\n            localStorage.setItem(\"BBAM\",\"\"+true);\n            this.upc = new UPCModbus(async state => {\n              this.ngZone.run(() => {\n                // Force refresh UI\n                \n                  \n                  //this.readDiffusionParameters();\n                \n              });\n              \n            });\n            await this.upc.client.connect();\n              setTimeout(async ()=>{\n                //this.ngZone.run(async()=>{\n                  await this.upc.client.readHoldingRegisters(40018,100).then(async res=>{\n                    //40018\n                    var fluxmax = [res[0],res[1]];\n                    this.fluxmax = this.upc.client.registerToFloat(fluxmax);\n                    \n                    //40065\n                    //this.intensity = this.upc.client.registerToUint32(res[47]);\n                    \n                    //40045\n                    var ssid = [];\n                    for(var i = 27;i<37;i++){\n                        ssid.push(res[i]);\n                    }\n                    this.global.ssid = this.upc.client.registerToString(ssid).replace(/[^a-zA-Z0-9]/g,'');\n                    await this.upc.client.getIntFromHoldingRegister(40150,1).then(async res=>{\n                      this.resActive = res;\n                      await this.upc.client.getIntFromHoldingRegister(40065,1).then(async res=>{\n                        this.intensity = res;\n                        this.debiRef = (this.fluxmax*this.intensity)/10;\n                        this.global.interval = setInterval(async ()=>{\n                          await this.upc.client.readHoldingRegisters(40416,100).then(res=>{\n    \n                            //40416\n                            //this.intensity = this.upc.client.registerToUint32(res[0]); \n                           //40435\n                           var iFlux = [res[19],res[20]]\n                           this.peMes = this.upc.client.registerToFloat(iFlux);\n      \n                           //40437\n                           var out = [res[21],res[22]]\n                           this.psMes = this.upc.client.registerToFloat(out); \n      \n                           //40439\n                           var f = [res[23],res[24]];\n                           this.debiMes = this.upc.client.registerToFloat(f);\n      \n                           //40451\n                           var tmp = [res[35],res[36]];\n                           this.temp = this.upc.client.registerToFloat(tmp);\n      \n                           //40463\n                           var outcomp = [res[47],res[48]];\n                           this.psCompMes = this.upc.client.registerToFloat(outcomp);\n                           this.global.ssid = \"BBAM\";\n      \n                           this.cd.detectChanges();\n                           loading.dismiss();\n                          });\n                        },2000)\n                        \n                      })\n                    })\n                    \n                    \n                    //40150\n                    /*this.resActive = this.upc.client.registerToUint32(res[132]);\n                    alert(this.resActive);*/\n                    \n                  })\n                  /*await this.upc.client.getFloatFromHoldingRegister(40451).then(res=>{\n                    this.temp = res;\n                  })\n                  await this.upc.client.getFloatFromHoldingRegister(40018).then(res=>{\n                    this.fluxmax = res;\n                    this.cd.detectChanges();\n                  })\n                  this.upc.client.getIntFromHoldingRegister(40065,1).then(res=>{\n                    this.intensity = res;\n                    this.cd.detectChanges();\n                  })\n                  this.upc.client.getStringFromHoldingRegister(40045,10).then(res=>{\n                    this.global.ssid = res;\n                  })\n                  await this.upc.client.getIntFromHoldingRegister(40150,1).then(res=>{\n                          \n                    this.resActive = res;\n                    \n                    this.cd.detectChanges();\n                  })*/\n                //}) si connecté lecture uniquement \n                //Mesure instantané mesure intensité 1 10 Activer diffusion fin B1 B2 voyant aucune diffusion \n                //Mini Maxi Reactualiser les données \n              },5000)\n          })\n        } else {\n          this.upc = new UPCModbus(async state => {\n            this.ngZone.run(() => {\n              // Force refresh UI\n              \n                \n                //this.readDiffusionParameters();\n              \n            });\n            \n          });\n          //await this.upc.client.connect();\n            setTimeout(async ()=>{\n              //this.ngZone.run(async()=>{\n                await this.upc.client.readHoldingRegisters(40018,100).then(async res=>{\n                  //40018\n                  var fluxmax = [res[0],res[1]];\n                  this.fluxmax = this.upc.client.registerToFloat(fluxmax);\n                  \n                  //40065\n                  //this.intensity = this.upc.client.registerToUint32(res[47]);\n                  \n                  //40045\n                  var ssid = [];\n                  for(var i = 27;i<37;i++){\n                      ssid.push(res[i]);\n                  }\n                  this.global.ssid = this.upc.client.registerToString(ssid).replace(/[^a-zA-Z0-9]/g,'');\n                  await this.upc.client.getIntFromHoldingRegister(40150,1).then(async res=>{\n                    this.resActive = res;\n                    await this.upc.client.getIntFromHoldingRegister(40065,1).then(async res=>{\n                      this.intensity = res;\n                      this.debiRef = (this.fluxmax*this.intensity)/10;\n                      this.global.interval = setInterval(async ()=>{\n                        await this.upc.client.readHoldingRegisters(40416,100).then(res=>{\n  \n                          //40416\n                          //this.intensity = this.upc.client.registerToUint32(res[0]); \n                         //40435\n                         var iFlux = [res[19],res[20]]\n                         this.peMes = this.upc.client.registerToFloat(iFlux);\n    \n                         //40437\n                         var out = [res[21],res[22]]\n                         this.psMes = this.upc.client.registerToFloat(out); \n    \n                         //40439\n                         var f = [res[23],res[24]];\n                         this.debiMes = this.upc.client.registerToFloat(f);\n    \n                         //40451\n                         var tmp = [res[35],res[36]];\n                         this.temp = this.upc.client.registerToFloat(tmp);\n    \n                         //40463\n                         var outcomp = [res[47],res[48]];\n                         this.psCompMes = this.upc.client.registerToFloat(outcomp);\n                         this.global.ssid = \"BBAM\";\n                         this.global.isBBAM = true;\n    \n                         this.cd.detectChanges();\n                         //loading.dismiss();\n                        });\n                      },2000)\n                      \n                    })\n                  })\n                  \n                  \n                  //40150\n                  /*this.resActive = this.upc.client.registerToUint32(res[132]);\n                  alert(this.resActive);*/\n                  \n                })\n                /*await this.upc.client.getFloatFromHoldingRegister(40451).then(res=>{\n                  this.temp = res;\n                })\n                await this.upc.client.getFloatFromHoldingRegister(40018).then(res=>{\n                  this.fluxmax = res;\n                  this.cd.detectChanges();\n                })\n                this.upc.client.getIntFromHoldingRegister(40065,1).then(res=>{\n                  this.intensity = res;\n                  this.cd.detectChanges();\n                })\n                this.upc.client.getStringFromHoldingRegister(40045,10).then(res=>{\n                  this.global.ssid = res;\n                })\n                await this.upc.client.getIntFromHoldingRegister(40150,1).then(res=>{\n                        \n                  this.resActive = res;\n                  \n                  this.cd.detectChanges();\n                })*/\n              //}) si connecté lecture uniquement \n              //Mesure instantané mesure intensité 1 10 Activer diffusion fin B1 B2 voyant aucune diffusion \n              //Mini Maxi Reactualiser les données \n            },2000)\n        }\n        \n      } else if(this.platform.is('android')) {\n        this.hotspot.connectToWifi(\"BBAM\",\"BioBeltService\").then(async res=>{\n            var loading = await this.loadingCTRL.create({\n              message : \"Connection à l'UPC en cours...\",\n              duration : 10000\n            })\n            loading.present();\n            this.global.isBBAM = true;\n            this.upc = new UPCModbus(async state => {\n              this.ngZone.run(() => {\n                // Force refresh UI\n                \n                  \n                  //this.readDiffusionParameters();\n                \n              });\n              \n            });\n            //await this.upc.client.connect();\n            setTimeout(async ()=>{\n              //this.ngZone.run(async()=>{\n                await this.upc.client.readHoldingRegisters(40018,100).then(async res=>{\n                  //40018\n                  var fluxmax = [res[0],res[1]];\n                  this.fluxmax = this.upc.client.registerToFloat(fluxmax);\n                  \n                  //40065\n                  //this.intensity = this.upc.client.registerToUint32(res[47]);\n                  \n                  //40045\n                  var ssid = [];\n                  for(var i = 27;i<37;i++){\n                      ssid.push(res[i]);\n                  }\n                  this.global.ssid = this.upc.client.registerToString(ssid).replace(/[^a-zA-Z0-9]/g,'');\n                  await this.upc.client.getIntFromHoldingRegister(40150,1).then(async res=>{\n                    this.resActive = res;\n                    await this.upc.client.getIntFromHoldingRegister(40065,1).then(async res=>{\n                      this.intensity = res;\n                      this.debiRef = (this.fluxmax*this.intensity)/10;\n                      this.global.interval = setInterval(async ()=>{\n                        await this.upc.client.readHoldingRegisters(40416,100).then(res=>{\n  \n                          //40416\n                          //this.intensity = this.upc.client.registerToUint32(res[0]); \n                         //40435\n                         var iFlux = [res[19],res[20]]\n                         this.peMes = this.upc.client.registerToFloat(iFlux);\n    \n                         //40437\n                         var out = [res[21],res[22]]\n                         this.psMes = this.upc.client.registerToFloat(out); \n    \n                         //40439\n                         var f = [res[23],res[24]];\n                         this.debiMes = this.upc.client.registerToFloat(f);\n    \n                         //40451\n                         var tmp = [res[35],res[36]];\n                         this.temp = this.upc.client.registerToFloat(tmp);\n    \n                         //40463\n                         var outcomp = [res[47],res[48]];\n                         this.psCompMes = this.upc.client.registerToFloat(outcomp);\n                         this.global.ssid = \"BBAM\";\n    \n                         this.cd.detectChanges();\n                         loading.dismiss();\n                        });\n                      },2000)\n                      \n                    })\n                  })\n                  \n                  \n                  //40150\n                  /*this.resActive = this.upc.client.registerToUint32(res[132]);\n                  alert(this.resActive);*/\n                  \n                })\n                /*await this.upc.client.getFloatFromHoldingRegister(40451).then(res=>{\n                  this.temp = res;\n                })\n                await this.upc.client.getFloatFromHoldingRegister(40018).then(res=>{\n                  this.fluxmax = res;\n                  this.cd.detectChanges();\n                })\n                this.upc.client.getIntFromHoldingRegister(40065,1).then(res=>{\n                  this.intensity = res;\n                  this.cd.detectChanges();\n                })\n                this.upc.client.getStringFromHoldingRegister(40045,10).then(res=>{\n                  this.global.ssid = res;\n                })\n                await this.upc.client.getIntFromHoldingRegister(40150,1).then(res=>{\n                        \n                  this.resActive = res;\n                  \n                  this.cd.detectChanges();\n                })*/\n              //}) si connecté lecture uniquement \n              //Mesure instantané mesure intensité 1 10 Activer diffusion fin B1 B2 voyant aucune diffusion \n              //Mini Maxi Reactualiser les données \n            },5000)\n        })\n      }\n    })\n  }\n  /*ionViewWillLeave() {\n\n    \n    clearInterval(this.interval);\n  }\n\n  ngOnDestroy(): void {\n\n    \n    clearInterval(this.interval);\n  }*/\n  startstop() {\n    if(this.colordif == \"primary\"){\n      this.onChangeDiff();\n    } else {\n      this.onDisableDiff();\n    }\n  }\n  onChangeDiff() {\n    this.upc.client.setIntInHoldingRegister(40011,1,2).then(res=>{\n      \n      this.textdiff = \"Stop\";\n      this.colordif = \"danger\";\n      \n      this.cd.detectChanges();\n    })\n  }\n  onDisableDiff() {\n    this.upc.client.setIntInHoldingRegister(40011,1,0).then(res=>{\n      this.textdiff = \"Start\";\n      this.colordif = \"primary\";\n      \n      this.cd.detectChanges();\n    })\n  }\n  changeInt() {\n      this.upc.client.setIntInHoldingRegister(40065,1,this.intensity).then(res=>{\n        this.debiRef = (this.fluxmax*this.intensity)/10;\n      })\n  }\n  changeFluxMax() {\n    this.upc.client.setFloatInHoldingRegister(40018,this.fluxmax).then(res=>{\n      this.debiRef = (this.fluxmax*this.intensity)/10;\n    })\n  }\n  changeResAct() {\n    this.resActive = this.resActive == 1 ? 2 : 1;\n    this.upc.client.setIntInHoldingRegister(40150,1,this.resActive).then(res=>{\n\n    })\n  }\n}\n"],"sourceRoot":""}