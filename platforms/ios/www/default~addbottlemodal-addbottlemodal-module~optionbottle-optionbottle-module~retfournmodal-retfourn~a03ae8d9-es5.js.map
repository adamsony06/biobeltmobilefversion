{"version":3,"sources":["./src/app/addbottlemodal/addbottlemodal.page.html","./src/app/addbottlemodal/addbottlemodal.page.scss","./src/app/addbottlemodal/addbottlemodal.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,gKAAgK,6IAA6I,eAAe,iQAAiQ,8MAA8M,aAAa,+WAA+W,0JAA0J,0DAA0D,uGAAuG,iJAAiJ,8HAA8H,6EAA6E,kLAAkL,cAAc,wDAAwD,IAAI,ijBAAijB,YAAY,+JAA+J,gKAAgK,6EAA6E,kLAAkL,cAAc,wDAAwD,IAAI,ijBAAijB,YAAY,+JAA+J,gOAAgO,SAAS,qlBAAqlB,cAAc,0BAA0B,GAAG,0iBAA0iB,0BAA0B,iBAAiB,sVAAsV,cAAc,0BAA0B,GAAG,wfAAwf,2HAA2H,MAAM,MAAM,MAAM,kFAAkF,+GAA+G,MAAM,MAAM,MAAM,8JAA8J,mIAAmI,oF;;;;;;;;;;;ACAn3N,iCAAiC,cAAc,iBAAiB,sBAAsB,kBAAkB,uBAAuB,qBAAqB,GAAG,6CAA6C,m2B;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvH;AACV;AACW;AACZ;AAC3B;AACG;AAED;AACY;AACD;AACE;AAQtD;IA2BE,4BAAoB,IAAqB,EAAS,KAAuB,EAAS,YAAkC,EAAS,OAAiB,EAAS,MAAe,EAAS,QAAkB,EAAS,OAAiB,EAAU,MAAe,EAAS,WAA+B,EAAS,MAAsB,EAAS,EAAsB;QAAtU,SAAI,GAAJ,IAAI,CAAiB;QAAS,UAAK,GAAL,KAAK,CAAkB;QAAS,iBAAY,GAAZ,YAAY,CAAsB;QAAS,YAAO,GAAP,OAAO,CAAU;QAAS,WAAM,GAAN,MAAM,CAAS;QAAS,aAAQ,GAAR,QAAQ,CAAU;QAAS,YAAO,GAAP,OAAO,CAAU;QAAU,WAAM,GAAN,MAAM,CAAS;QAAS,gBAAW,GAAX,WAAW,CAAoB;QAAS,WAAM,GAAN,MAAM,CAAgB;QAAS,OAAE,GAAF,EAAE,CAAoB;QA1B1V,YAAO,GAAG,EAAE,CAAC;QAGb,aAAQ,GAAG,EAAE,CAAC;QACd,gBAAW,GAAG,EAAE,CAAC;QAEjB,aAAQ,GAAG,EAAE,CAAC;QACd,gBAAW,GAAG,EAAE,CAAC;QAGjB,eAAU,GAAG,KAAK,CAAC;QACnB,gBAAW,GAAG,KAAK,CAAC;QACpB,OAAE,GAAE,EAAE,CAAC;QACP,aAAQ,GAAG,EAAE,CAAC;QACd,YAAO,GAAG,EAAE,CAAC;QACb,eAAU,GAAG,EAAE,CAAC;QAChB,OAAE,GAAG,EAAE,CAAC;QACR,aAAQ,GAAG,EAAE,CAAC;QACd,YAAO,GAAG,EAAE,CAAC;QACb,eAAU,GAAG,EAAE,CAAC;QAChB,MAAC,GAAG,CAAC,CAAC;QACN,MAAC,GAAG,CAAC,CAAC;QACN,SAAI,GAAG,EAAE,CAAC;QACV,WAAM,GAAG,KAAK,CAAC;QACf,oBAAe,GAAG,EAAE,CAAC;IAEyU,CAAC;IAE/V,qCAAQ,GAAR;QAAA,iBAyFC;QAxFC,sBAAsB;QACtB,IAAI,CAAC,oBAAoB,EAAE;QAC3B,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAC;YACrB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,QAAQ,GAAG,EAAC,IAAI,EAAG,aAAa,EAAC,CAAC;YACvC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;gBACzB,IAAG,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,EAAC;oBACzB,WAAW,CAAC,iBAAiB,CAAC,MAAM,EAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,aAAG;wBAC7D,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;wBACnB,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CACxB,UAAM,WAAW;;;;;6CACX,YAAW,IAAI,SAAS,GAAxB,wBAAwB;wCAE1B,IAAI,CAAC,GAAG,GAAG,IAAI,gEAAS,CAAC,eAAK;4CAC5B,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC;gDACd,mBAAmB;gDAGjB,iCAAiC;4CAErC,CAAC,CAAC,CAAC;wCACL,CAAC,CAAC,CAAC;wCACH,qBAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE;;wCAA/B,SAA+B,CAAC;wCAChC,UAAU,CAAC;;;;4DACT,qBAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,4BAA4B,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAG;4DACpE,KAAI,CAAC,QAAQ,GAAG;gEACd,IAAI,EAAG,GAAG;6DACX;4DACD,KAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;wDAC1B,CAAC,CAAC;;wDALF,SAKE;;;;6CACH,EAAC,IAAI,CAAC;;;;;6BAeV,CACF,CAAC;oBACJ,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;wBACV,KAAI,CAAC,QAAQ,GAAG,EAAC,IAAI,EAAG,iCAAiC,EAAC,CAAC;wBAC3D,KAAK,CAAC,uEAAuE,CAAC,CAAC;oBACjF,CAAC,CAAC;iBACH;YAEH,CAAC,CAAC;SACH;aAAM;YAEL,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,aAAG;gBAEhC,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;gBACjB,IAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAC;oBAC9B,KAAI,CAAC,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;oBACzC,KAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,KAAI,CAAC,KAAK,EAAC,KAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,aAAG;wBAC/D,KAAI,CAAC,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC;oBAE1C,CAAC,CAAC;iBACH;gBACD,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,aAAG;oBAChD,IAAG,GAAG,CAAC,IAAI,KAAK,qDAAI,CAAC,qBAAqB,EAAC;wBACvC,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC;qBAChC;gBACH,CAAC,CAAC;YACJ,CAAC,CAAC;YAEF,IAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;gBAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACjC,IAAI,CAAC,OAAO,GAAG,UAAU,GAAC,IAAI,CAAC,OAAO,GAAC,WAAW,CAAC;gBAEnD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACzB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC/B;iBACI,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;gBACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACjC,IAAI,CAAC,OAAO,GAAG,eAAe,GAAC,IAAI,CAAC,OAAO,GAAC,GAAG,CAAC;gBAChD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3B;SACF;IAEH,CAAC;IACD,sCAAS,GAAT,UAAU,MAAM;QACd,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IACD,wCAAW,GAAX;QAAA,iBA4BC;QA3BG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,aAAG;YACvB,IAAI,SAAS,GAAG,KAAK,CAAC;YACtB,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAI;gBACxB,IAAI,IAAI,IAAI,GAAG,CAAC,IAAI,EAAC;oBACnB,KAAK,CAAC,uCAAuC,CAAC,CAAC;oBAC/C,SAAS,GAAG,IAAI,CAAC;iBAClB;YACH,CAAC,CAAC;YACF,IAAG,CAAC,SAAS,EAAC;gBACZ,IAAG,GAAG,CAAC,IAAI,IAAI,EAAE,EAAC;oBAChB,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAC;wBACzB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,GAAC,GAAG,CAAC,IAAI,GAAC,WAAW,CAAC,CAAC;wBACvD,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;wBAC7B,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACzB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBAC/B;yBAAM;wBACL,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,GAAC,GAAG,CAAC,IAAI,GAAC,GAAG,CAAC,CAAC;wBACpD,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;wBAC7B,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBAC1B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBAC7B;iBACF;aACF;QAIH,CAAC,CAAC;IACN,CAAC;IAED,oCAAO,GAAP;QACE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IACvB,CAAC;IACD,0CAAa,GAAb;QACE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC;IAED,sCAAS,GAAT;QAAA,iBA+EC;QA9EC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAC;YAClB,IAAI,WAAW,GAAG,EAAE,CAAC;YACrB;;;;;;;;gBAQI;YACJ,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,cAAI;gBAC3B,KAAI,IAAI,CAAC,GAAE,CAAC,EAAC,CAAC,GAAC,KAAI,CAAC,UAAU,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;oBACtC,IAAG,IAAI,IAAI,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,EAAC;wBACtC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;qBAC3C;iBACJ;YACH,CAAC,CAAC;YACF,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;YACtB,IAAI,MAAM,GAAG;gBACX,UAAU,EAAG,WAAW;gBACxB,KAAK,EAAG,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACxB,cAAc;gBACd,QAAQ,EAAG,IAAI,CAAC,QAAQ;gBACxB,IAAI,EAAG,IAAI,CAAC,IAAI;gBAChB,KAAK,EAAG,CAAC;aACV;YAGD,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG;gBAC9D,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;YACvB,CAAC,CAAC;SAEH;aACI,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,EAAC;YACtB,IAAI,SAAS,GAAG;gBACd,QAAQ,EAAG,IAAI,CAAC,QAAQ;aACzB;YAED,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,SAAS,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG;gBAC/D,8BAA8B;gBAC9B,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;YACvB,CAAC,CAAC;SACH;aAAM,IAAG,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE;YACxC,kBAAkB;YAClB,IAAI,WAAW,GAAG,EAAE,CAAC;YACvB;;;;;;;;gBAQI;YACJ,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,cAAI;gBAC3B,KAAI,IAAI,CAAC,GAAE,CAAC,EAAC,CAAC,GAAC,KAAI,CAAC,UAAU,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;oBACtC,IAAG,IAAI,IAAI,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,EAAC;wBACtC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;qBAC3C;iBACJ;YACH,CAAC,CAAC;YACF,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;YACtB,IAAI,MAAM,GAAG;gBACX,UAAU,EAAG,WAAW;gBACxB,KAAK,EAAG,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACxB,cAAc;gBACd,QAAQ,EAAG,IAAI,CAAC,QAAQ;gBACxB,IAAI,EAAG,IAAI,CAAC,IAAI;gBAChB,KAAK,EAAG,CAAC;aACV;YAGD,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG;gBAC9D,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;YACvB,CAAC,CAAC;SACH;IAEH,CAAC;IACD,4CAAe,GAAf;QAAA,iBAiCC;QAhCC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,aAAG;YACvB,IAAI,SAAS,GAAG,KAAK,CAAC;YACtB,KAAI,CAAC,EAAE,CAAC,OAAO,CAAC,cAAI;gBAClB,IAAG,IAAI,IAAI,GAAG,CAAC,IAAI,EAAC;oBAClB,SAAS,GAAG,IAAI,CAAC;iBAClB;YACH,CAAC,CAAC;YACF,KAAI,CAAC,EAAE,CAAC,OAAO,CAAC,cAAI;gBAClB,IAAG,IAAI,IAAI,GAAG,CAAC,IAAI,EAAC;oBAClB,SAAS,GAAG,IAAI,CAAC;iBAClB;YACH,CAAC,CAAC;YACF,IAAG,CAAC,SAAS,EAAE;gBACb,IAAG,GAAG,CAAC,IAAI,IAAI,EAAE,EAAC;oBAChB,IAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;wBACzB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAC,GAAG,CAAC,IAAI,GAAC,WAAW,CAAC,CAAC;wBACpD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBAC1B,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBAC5B;yBACI;wBACH,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,GAAC,GAAG,CAAC,IAAI,GAAC,GAAG,CAAC,CAAC;wBACjD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACxB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBAC7B;oBACD,KAAI,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;iBACxB;aACF;iBAAM;gBACL,KAAK,CAAC,uCAAuC,CAAC,CAAC;aAChD;QAGH,CAAC,CAAC;IACJ,CAAC;IACD,4CAAe,GAAf;QAAA,iBAiCC;QAhCC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,aAAG;YACvB,IAAI,SAAS,GAAG,KAAK,CAAC;YACtB,KAAI,CAAC,EAAE,CAAC,OAAO,CAAC,cAAI;gBAClB,IAAG,IAAI,IAAI,GAAG,CAAC,IAAI,EAAC;oBAClB,SAAS,GAAG,IAAI,CAAC;iBAClB;YACH,CAAC,CAAC;YACF,KAAI,CAAC,EAAE,CAAC,OAAO,CAAC,cAAI;gBAClB,IAAG,IAAI,IAAI,GAAG,CAAC,IAAI,EAAC;oBAClB,SAAS,GAAG,IAAI,CAAC;iBAClB;YACH,CAAC,CAAC;YACF,IAAG,CAAC,SAAS,EAAE;gBACb,IAAG,GAAG,CAAC,IAAI,IAAI,EAAE,EAAC;oBAChB,IAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;wBACzB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAC,GAAG,CAAC,IAAI,GAAC,WAAW,CAAC,CAAC;wBACpD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBAC1B,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBAC5B;yBACI;wBACH,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,GAAC,GAAG,CAAC,IAAI,GAAC,GAAG,CAAC,CAAC;wBACjD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACxB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBAC7B;oBACD,KAAI,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;iBACxB;aACF;iBAAM;gBACL,KAAK,CAAC,uCAAuC,CAAC,CAAC;aAChD;QAGH,CAAC,CAAC;IACJ,CAAC;IACD,iDAAoB,GAApB;QAAA,iBAsBC;QArBC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,UAAM,GAAG;;;;;wBAClC,IAAI,CAAC,GAAG,GAAG,IAAI,gEAAS,CAAC,eAAK;4BAC5B,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC;gCACd,mBAAmB;gCAGjB,iCAAiC;4BAErC,CAAC,CAAC,CAAC;wBACL,CAAC,CAAC,CAAC;wBAEH,qBAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE;;wBAA/B,SAA+B,CAAC;wBAEhC,UAAU,CAAC;4BACT,KAAI,CAAC,GAAG,CAAC,MAAM,CAAC,4BAA4B,CAAC,KAAK,EAAC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAG;gCAC7D,yBAAyB;gCACzB,4BAA4B;gCAC5B,KAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;4BAC1B,CAAC,CAAC;wBACJ,CAAC,EAAC,IAAI,CAAC;;;;aACR,CAAC;IACJ,CAAC;IACD,2CAAc,GAAd;QAAA,iBAsBC;QArBC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,0BAA0B,CAAC,IAAI,CAAC,UAAU,EAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAC1F,aAAG;YACD,wBAAwB;YACxB,KAAI,CAAC,UAAU,IAAI,EAAE,CAAC;YACtB,KAAI,CAAC,CAAC,EAAE,CAAC;YACT,KAAK,CAAC,mCAAmC,GAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QACjE,CAAC,CACF,CAAC,KAAK,CAAC,eAAK;YACX,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,0BAA0B,CAAC,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAC3F,aAAG;YACD,wBAAwB;YACxB,KAAI,CAAC,WAAW,IAAI,EAAE,CAAC;YACvB,KAAI,CAAC,CAAC,EAAE,CAAC;YACT,KAAK,CAAC,mCAAmC,GAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QACjE,CAAC,CACF,CAAC,KAAK,CAAC,eAAK;YACX,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;;gBAtU0B,gFAAc;gBAAiB,8DAAe;gBAAwB,6EAAmB;gBAAmB,sDAAO;gBAAkB,sDAAM;gBAAmB,uDAAQ;gBAAmB,iEAAO;gBAAmB,oDAAM;gBAAuB,gEAAiB;gBAAkB,kEAAa;gBAAc,+DAAiB;;IA3B/U,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,kKAAyC;;SAE1C,CAAC;+EA4B2B,gFAAc,EAAiB,8DAAe,EAAwB,6EAAmB,EAAmB,sDAAO,EAAkB,sDAAM,EAAmB,uDAAQ,EAAmB,iEAAO,EAAmB,oDAAM,EAAuB,gEAAiB,EAAkB,kEAAa,EAAc,+DAAiB;OA3B/U,kBAAkB,CAoW9B;IAAD,yBAAC;CAAA;AApW8B","file":"default~addbottlemodal-addbottlemodal-module~optionbottle-optionbottle-module~retfournmodal-retfourn~a03ae8d9-es5.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-button fill=\\\"clear\\\" (click)=\\\"onClose();\\\">\\r\\n        <ion-icon name=\\\"close\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title *ngIf=\\\"barcode != ''\\\">{{stockRet.name}}</ion-title>\\r\\n    <ion-title *ngIf=\\\"barcode == ''\\\">Ajout de bouteille au Rack</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\" *ngIf=\\\"!global.isBBAM\\\">\\r\\n      <ion-button fill=\\\"clear\\\"> <ion-icon name=\\\"globe\\\" color=\\\"light\\\" (click)=\\\"onSynchroB1B2();\\\"></ion-icon>ADMIN</ion-button> \\r\\n     </ion-buttons>\\r\\n     <ion-buttons slot=\\\"end\\\" *ngIf=\\\"global.isBBAM\\\">\\r\\n      <ion-button fill=\\\"clear\\\"> <ion-icon name=\\\"wifi\\\" color=\\\"light\\\"></ion-icon>{{global.ssid}}</ion-button> \\r\\n     </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\r\\n    <ion-refresher-content></ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <ion-grid *ngIf=\\\"mode == 1000\\\">\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"6\\\" style=\\\"border-right: solid 3px green;\\\">\\r\\n        <!--<ion-select placeholder=\\\"Type de bouteilles\\\">\\r\\n          <ion-select-option *ngFor=\\\"let bottle of listBottles\\\">\\r\\n            {{bottle.brand+\\\" \\\"+bottle.designation.toFixed(2)+\\\" kg\\\"}}\\r\\n          </ion-select-option>\\r\\n        </ion-select>-->\\r\\n      <h1 style=\\\"text-align: center;\\\">\\r\\n        B1\\r\\n      </h1>\\r\\n      \\r\\n      </ion-col>\\r\\n      \\r\\n      <ion-col size=\\\"6\\\">\\r\\n        <h1 style=\\\"text-align: center;\\\">\\r\\n          B2\\r\\n        </h1>  \\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"6\\\" style=\\\"border-right: solid 3px green;\\\">\\r\\n        <ion-list>\\r\\n          <ion-item (click)=\\\"onScanBarCodeB1();\\\">\\r\\n            <ion-icon color=\\\"primary\\\" name=\\\"add-circle\\\"></ion-icon>  Ajouter une Bouteille à B1\\r\\n          </ion-item>\\r\\n          <div *ngFor=\\\"let b1 of B1String;let i = index;\\\">\\r\\n          <ion-item>\\r\\n            <ion-label>{{b1}}</ion-label>\\r\\n            <ion-select [(ngModel)]=\\\"B1Desig[i]\\\" placeholder=\\\"Designation (en kg)\\\" *ngIf=\\\"!B1IsMesser[i]\\\">\\r\\n              <ion-select-option value=\\\"10\\\">10 kg</ion-select-option>\\r\\n              <ion-select-option value=\\\"20\\\">20 kg</ion-select-option>\\r\\n              <ion-select-option value=\\\"22.6796\\\">22,68 kg</ion-select-option>\\r\\n              <ion-select-option value=\\\"34\\\">34 kg</ion-select-option>\\r\\n            </ion-select>\\r\\n            \\r\\n            \\r\\n            <!--<ion-badge color=\\\"primary\\\" slot=\\\"end\\\">{{'x'+b1.qty}}</ion-badge>-->\\r\\n          </ion-item>\\r\\n        </div>\\r\\n        \\r\\n        </ion-list>\\r\\n        <!--<ion-button color=\\\"danger\\\" (click)=\\\"deleteB1();\\\" size=\\\"block\\\">\\r\\n          Tout Effacer\\r\\n        </ion-button>-->\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"6\\\" style=\\\"border-right: solid 3px green;\\\">\\r\\n        <ion-list>\\r\\n          <ion-item (click)=\\\"onScanBarCodeB2();\\\">\\r\\n            <ion-icon color=\\\"primary\\\" name=\\\"add-circle\\\"></ion-icon>  Ajouter une Bouteille à B2\\r\\n          </ion-item>\\r\\n          <div *ngFor=\\\"let b2 of B2String;let i = index;\\\">\\r\\n          <ion-item>\\r\\n            <ion-label>{{b2}}</ion-label>\\r\\n            <ion-select [(ngModel)]=\\\"B2Desig[i]\\\" placeholder=\\\"Designation (en kg)\\\" *ngIf=\\\"!B2IsMesser[i]\\\">\\r\\n              <ion-select-option value=\\\"10\\\">10 kg</ion-select-option>\\r\\n              <ion-select-option value=\\\"20\\\">20 kg</ion-select-option>\\r\\n              <ion-select-option value=\\\"22.6796\\\">22,68 kg</ion-select-option>\\r\\n              <ion-select-option value=\\\"34\\\">34 kg</ion-select-option>\\r\\n            </ion-select>\\r\\n            \\r\\n            \\r\\n            <!--<ion-badge color=\\\"primary\\\" slot=\\\"end\\\">{{'x'+b1.qty}}</ion-badge>-->\\r\\n          </ion-item>\\r\\n        </div>\\r\\n        \\r\\n        </ion-list>\\r\\n        <!--<ion-button color=\\\"danger\\\" (click)=\\\"deleteB1();\\\" size=\\\"block\\\">\\r\\n          Tout Effacer\\r\\n        </ion-button>-->\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n  <ion-list>\\r\\n    <ion-item *ngIf=\\\"mode != 1000 && barcode != ''\\\">\\r\\n      <ion-label>{{barcode}}</ion-label>\\r\\n      <div *ngIf=\\\"designation.length > 0\\\">\\r\\n      <ion-select [(ngModel)]=\\\"designation[0]\\\" placeholder=\\\"Designation (en kg)\\\" *ngIf=\\\"!isMesser[0]\\\">\\r\\n        <ion-select-option value=\\\"10\\\">10 kg</ion-select-option>\\r\\n        <ion-select-option value=\\\"20\\\">20 kg</ion-select-option>\\r\\n        <ion-select-option value=\\\"22.6796\\\">22,68 kg</ion-select-option>\\r\\n        <ion-select-option value=\\\"34\\\">34 kg</ion-select-option>\\r\\n      </ion-select>\\r\\n    </div>\\r\\n    </ion-item>\\r\\n    <div *ngIf=\\\"barcode != ''\\\">\\r\\n    <ion-item *ngFor=\\\"let b of bottleadded;let i = index;\\\">\\r\\n      <ion-label>{{b}}</ion-label>\\r\\n      <ion-select [(ngModel)]=\\\"designation[i+1]\\\" placeholder=\\\"Designation (en kg)\\\" *ngIf=\\\"!isMesser[i+1]\\\">\\r\\n        <ion-select-option value=\\\"10\\\">10 kg</ion-select-option>\\r\\n        <ion-select-option value=\\\"20\\\">20 kg</ion-select-option>\\r\\n        <ion-select-option value=\\\"22.6796\\\">22,68 kg</ion-select-option>\\r\\n        <ion-select-option value=\\\"34\\\">34 kg</ion-select-option>\\r\\n      </ion-select>\\r\\n    </ion-item>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"barcode == ''\\\">\\r\\n    <ion-item *ngFor=\\\"let rb of listbottlesRack;\\\">\\r\\n      <ion-label>{{rb.bottleString}}</ion-label>\\r\\n      <ion-badge color=\\\"success\\\" *ngIf=\\\"rb.state === 'FULL'\\\">Plein</ion-badge>\\r\\n      <ion-badge color=\\\"secondary\\\" *ngIf=\\\"rb.state === 'IN_USE'\\\">Entamée</ion-badge>\\r\\n      <ion-badge color=\\\"danger\\\" *ngIf=\\\"rb.state === 'EMPTY'\\\">Vide</ion-badge>\\r\\n    </ion-item>\\r\\n    <ion-item *ngFor=\\\"let b of bottleadded;let i = index;\\\">\\r\\n      <ion-label>{{b}}</ion-label>\\r\\n      <ion-select [(ngModel)]=\\\"designation[i]\\\" placeholder=\\\"Designation (en kg)\\\" *ngIf=\\\"!isMesser[i]\\\">\\r\\n        <ion-select-option value=\\\"10\\\">10 kg</ion-select-option>\\r\\n        <ion-select-option value=\\\"20\\\">20 kg</ion-select-option>\\r\\n        <ion-select-option value=\\\"22.6796\\\">22,68 kg</ion-select-option>\\r\\n        <ion-select-option value=\\\"34\\\">34 kg</ion-select-option>\\r\\n      </ion-select>\\r\\n    </ion-item>\\r\\n  </div>\\r\\n    <ion-item (click)=\\\"onAddBottle();\\\" *ngIf=\\\"mode === 1 || mode === 2\\\">\\r\\n      <ion-icon name=\\\"add-circle\\\" color=\\\"primary\\\"></ion-icon>\\r\\n      &nbsp;&nbsp;&nbsp;&nbsp;Ajouter une bouteille\\r\\n    </ion-item>\\r\\n    <ion-item (click)=\\\"onAddBottle();\\\" *ngIf=\\\"mode === 0\\\">\\r\\n      <ion-icon name=\\\"remove-circle\\\" color=\\\"danger\\\"></ion-icon>\\r\\n      &nbsp;&nbsp;&nbsp;&nbsp;Enlever une bouteille\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer>\\r\\n  <ion-button *ngIf=\\\"mode != 1000\\\" (click)=\\\"onSynchro();\\\" expand=\\\"block\\\" > Synchroniser avec le Serveur</ion-button>\\r\\n  <ion-button *ngIf=\\\"mode == 1000\\\" (click)=\\\"onSynchroCeint();\\\" expand=\\\"block\\\" > Synchroniser avec l'UPC</ion-button>\\r\\n\\r\\n</ion-footer>\\r\\n\"","module.exports = \".verticalLine {\\n  width: 1%;\\n  height: 50px;\\n  background: green;\\n  margin-top: 0;\\n  position: relative;\\n  margin-left: 10%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9oYXJtYW5kL0Rlc2t0b3AvYmlvYmVsdG1vYmlsZS9zcmMvYXBwL2FkZGJvdHRsZW1vZGFsL2FkZGJvdHRsZW1vZGFsLnBhZ2Uuc2NzcyIsInNyYy9hcHAvYWRkYm90dGxlbW9kYWwvYWRkYm90dGxlbW9kYWwucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksU0FBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9hZGRib3R0bGVtb2RhbC9hZGRib3R0bGVtb2RhbC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudmVydGljYWxMaW5lIHtcclxuICAgIHdpZHRoOjElO1xyXG4gICAgaGVpZ2h0OjUwcHg7XHJcbiAgICBiYWNrZ3JvdW5kOmdyZWVuO1xyXG4gICAgbWFyZ2luLXRvcDogMDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMCU7XHJcbiAgfVxyXG5cclxuIiwiLnZlcnRpY2FsTGluZSB7XG4gIHdpZHRoOiAxJTtcbiAgaGVpZ2h0OiA1MHB4O1xuICBiYWNrZ3JvdW5kOiBncmVlbjtcbiAgbWFyZ2luLXRvcDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW4tbGVmdDogMTAlO1xufSJdfQ== */\"","import { Component, OnInit, NgZone, ChangeDetectorRef } from '@angular/core';\r\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\r\nimport { ModalController, Platform, LoadingController } from '@ionic/angular';\r\nimport { Upcv3serviceService } from '../api/upcv3service.service';\r\nimport {Storage} from '@ionic/storage';\r\nimport { Code } from '../api/ApiResponse';\r\nimport { BottleType } from '../model/bottleType';\r\nimport { Router } from '@angular/router';\r\nimport { UPCModbus } from '../model/upcv3/upcmodbus';\r\nimport { Network } from '@ionic-native/network/ngx';\r\nimport { GlobalService } from '../api/global.service';\r\ndeclare var WifiWizard2: any;\r\n\r\n@Component({\r\n  selector: 'app-addbottlemodal',\r\n  templateUrl: './addbottlemodal.page.html',\r\n  styleUrls: ['./addbottlemodal.page.scss'],\r\n})\r\nexport class AddbottlemodalPage implements OnInit {\r\n  barcode = \"\";\r\n  token;\r\n  bottleType : BottleType[];\r\n  barcodes = [];\r\n  bottleadded = [];\r\n  stockRet;\r\n  isMesser = [];\r\n  designation = [];\r\n  mode;\r\n  upc : UPCModbus;\r\n  addressage = 41119;\r\n  addressage2 = 41169;\r\n  B1= [];\r\n  B1String = [];\r\n  B1Desig = [];\r\n  B1IsMesser = [];\r\n  B2 = [];\r\n  B2String = [];\r\n  B2Desig = [];\r\n  B2IsMesser = [];\r\n  i = 0;\r\n  y = 0;\r\n  rack = \"\";\r\n  isBBAM = false;\r\n  listbottlesRack = [];\r\n\r\n  constructor(private scan : BarcodeScanner,private modal : ModalController,private upcv3Service : Upcv3serviceService,private storage : Storage,private router : Router,private platform :Platform,private network : Network, private ngZone : NgZone,private loadingCTRL : LoadingController,private global : GlobalService,private cd : ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    //alert(this.barcode);\r\n    this.getUpcStateConnexion()\r\n    if (this.mode === 1000){\r\n      this.isMesser = [];\r\n      this.stockRet = {name : \"En cours...\"};\r\n      this.platform.ready().then(()=>{\r\n        if(this.platform.is('ios')){\r\n          WifiWizard2.iOSConnectNetwork(\"BBAM\",\"BioBeltService\").then(res=>{\r\n            this.isBBAM = true;\r\n            this.platform.ready().then(\r\n              async readySource => {\r\n                if (readySource == 'cordova') {\r\n                  \r\n                  this.upc = new UPCModbus(state => {\r\n                    this.ngZone.run(() => {\r\n                      // Force refresh UI\r\n                      \r\n                        \r\n                        //this.readDiffusionParameters();\r\n                      \r\n                    });\r\n                  });\r\n                  await this.upc.client.connect();\r\n                  setTimeout(async ()=>{\r\n                    await this.upc.client.getStringFromHoldingRegister(40001, 10).then(res=>{\r\n                      this.stockRet = {\r\n                        name : res \r\n                      }\r\n                      this.cd.detectChanges();\r\n                    })\r\n                  },2000)\r\n                  /*this.network.onConnect().subscribe(() => {\r\n                    \r\n                    if (this.network.type === this.network.Connection.WIFI) {\r\n                      this.upc.reconnect();\r\n                      this.upc.client.getStringFromHoldingRegister(40001, 10).then(res=>{\r\n                        this.stockRet = {\r\n                          name : res \r\n                        }\r\n                      })\r\n                      \r\n                      \r\n                    }\r\n                  });*/\r\n                }\r\n              }\r\n            );\r\n          }).catch(err=>{\r\n            this.stockRet = {name : \"Erreur lors de la connexion UPC\"};\r\n            alert(\"La connexion a echoué veuillez vous approcher de l'UPC et réessayer !\");\r\n          })\r\n        }\r\n        \r\n      })\r\n    } else {\r\n      \r\n      this.storage.get(\"token\").then(val=>{\r\n\r\n        this.token = val;\r\n        if(localStorage.getItem(\"rack\")){\r\n          this.rack = localStorage.getItem(\"rack\");\r\n          this.upcv3Service.getBottleFromRack(this.token,this.rack).subscribe(res=>{\r\n                  this.listbottlesRack = res.result;\r\n                  \r\n          })\r\n        }\r\n        this.upcv3Service.getAllBottles(val).subscribe(res=>{\r\n          if(res.code === Code.BOTTLE_TYPE_RECOVERED){\r\n              this.bottleType = res.result;\r\n          }\r\n        })\r\n      })\r\n      \r\n      if(/^\\d+$/.test(this.barcode)){\r\n        this.barcodes.push(this.barcode);\r\n        this.barcode = \"Messer (\"+this.barcode+\") 37.5 kg\";\r\n        \r\n        this.isMesser.push(true);\r\n        this.designation.push(\"37.5\");\r\n      }\r\n      else if (/^[a-z0-9]+$/i.test(this.barcode)){\r\n        this.barcodes.push(this.barcode);\r\n        this.barcode = \"Air Liquide (\"+this.barcode+\")\";\r\n        this.designation.push(\"34\");\r\n        this.isMesser.push(false);\r\n      }\r\n    }\r\n    \r\n  }\r\n  doRefresh($event) {\r\n    this.ngOnInit();\r\n    $event.target.complete();\r\n  }\r\n  onAddBottle() {\r\n      this.scan.scan().then(res=>{\r\n        var isScanned = false;\r\n        this.barcodes.forEach(item=>{\r\n          if (item == res.text){\r\n            alert(\"Vous avez déjà scanné cette bouteille\");\r\n            isScanned = true;\r\n          }\r\n        })\r\n        if(!isScanned){\r\n          if(res.text != ''){\r\n            if (/^\\d+$/.test(res.text)){\r\n              this.bottleadded.push(\"Messer (\"+res.text+\") 37.5 kg\");\r\n              this.barcodes.push(res.text);\r\n              this.isMesser.push(true);\r\n              this.designation.push(\"37.5\");\r\n            } else {\r\n              this.bottleadded.push(\"Air Liquide (\"+res.text+\")\");\r\n              this.barcodes.push(res.text);\r\n              this.isMesser.push(false);\r\n              this.designation.push(\"34\");\r\n            }\r\n          }\r\n        }\r\n        \r\n        \r\n        \r\n      })\r\n  }\r\n  \r\n  onClose() {\r\n    this.modal.dismiss();\r\n  }\r\n  onSynchroB1B2() {\r\n    this.global.onSynchroB1B2(this.token);\r\n  }\r\n\r\n  onSynchro() {\r\n    if (this.mode === 1){\r\n      var bottleTypes = [];\r\n      /*this.bottleType.forEach(item=>{\r\n        for(var i = 0;i<this.designation.length;i++){\r\n          \r\n          if (item.designation == this.designation[i]){\r\n            bottleTypes.push(item.id);\r\n          }\r\n        }\r\n        \r\n      })*/\r\n      this.designation.forEach(item=>{\r\n        for(var i =0;i<this.bottleType.length;i++){\r\n            if(item == this.bottleType[i].designation){\r\n                bottleTypes.push(this.bottleType[i].id);\r\n            }\r\n        }\r\n      })\r\n      var date = new Date();\r\n      var bottle = {\r\n        bottleType : bottleTypes,\r\n        stock : this.stockRet.id,\r\n        //date : date,\r\n        barcodes : this.barcodes,\r\n        rack : this.rack,\r\n        empty : 0\r\n      }\r\n      \r\n      \r\n      this.upcv3Service.addToStockMob(bottle,this.token).subscribe(res=>{\r\n        this.modal.dismiss();\r\n      })\r\n      \r\n    }\r\n    else if (this.mode == 0){\r\n      var bottleDel = {\r\n        barcodes : this.barcodes\r\n      }\r\n\r\n      this.upcv3Service.returnFourn(bottleDel,this.token).subscribe(res=>{\r\n        //alert (JSON.stringify(res));\r\n        this.modal.dismiss();\r\n      })\r\n    } else if(this.mode == 2 || this.mode == 3) {\r\n        //add empty bottle\r\n        var bottleTypes = [];\r\n      /*this.bottleType.forEach(item=>{\r\n        for(var i = 0;i<this.designation.length;i++){\r\n          \r\n          if (item.designation == this.designation[i]){\r\n            bottleTypes.push(item.id);\r\n          }\r\n        }\r\n        \r\n      })*/\r\n      this.designation.forEach(item=>{\r\n        for(var i =0;i<this.bottleType.length;i++){\r\n            if(item == this.bottleType[i].designation){\r\n                bottleTypes.push(this.bottleType[i].id);\r\n            }\r\n        }\r\n      })\r\n      var date = new Date();\r\n      var bottle = {\r\n        bottleType : bottleTypes,\r\n        stock : this.stockRet.id,\r\n        //date : date,\r\n        barcodes : this.barcodes,\r\n        rack : this.rack,\r\n        empty : 1\r\n      }\r\n      \r\n      \r\n      this.upcv3Service.addToStockMob(bottle,this.token).subscribe(res=>{\r\n        this.modal.dismiss();\r\n      })\r\n    }\r\n    \r\n  }\r\n  onScanBarCodeB2() {\r\n    this.scan.scan().then(res=>{\r\n      var isScanned = false;\r\n      this.B1.forEach(item=>{\r\n        if(item == res.text){\r\n          isScanned = true;\r\n        }\r\n      })\r\n      this.B2.forEach(item=>{\r\n        if(item == res.text){\r\n          isScanned = true;\r\n        }\r\n      })\r\n      if(!isScanned) {\r\n        if(res.text != \"\"){\r\n          if(/^\\d+$/.test(res.text)) {\r\n            this.B2String.push(\"Messer (\"+res.text+\") 37.5 kg\");\r\n            this.B2Desig.push(\"37.5\");\r\n            this.B2IsMesser.push(true);\r\n          }\r\n          else {\r\n            this.B2String.push(\"Air Liquide (\"+res.text+\")\");\r\n            this.B2Desig.push(\"34\");\r\n            this.B2IsMesser.push(false);\r\n          }\r\n          this.B2.push(res.text);\r\n        }\r\n      } else {\r\n        alert(\"Vous avez déjà scanner la bouteille !\");\r\n      }\r\n      \r\n      \r\n    })\r\n  }\r\n  onScanBarCodeB1() {\r\n    this.scan.scan().then(res=>{\r\n      var isScanned = false;\r\n      this.B1.forEach(item=>{\r\n        if(item == res.text){\r\n          isScanned = true;\r\n        }\r\n      })\r\n      this.B2.forEach(item=>{\r\n        if(item == res.text){\r\n          isScanned = true;\r\n        }\r\n      })\r\n      if(!isScanned) {\r\n        if(res.text != \"\"){\r\n          if(/^\\d+$/.test(res.text)) {\r\n            this.B1String.push(\"Messer (\"+res.text+\") 37.5 kg\");\r\n            this.B1Desig.push(\"37.5\");\r\n            this.B1IsMesser.push(true);\r\n          }\r\n          else {\r\n            this.B1String.push(\"Air Liquide (\"+res.text+\")\");\r\n            this.B1Desig.push(\"34\");\r\n            this.B1IsMesser.push(false);\r\n          }\r\n          this.B1.push(res.text);\r\n        }\r\n      } else {\r\n        alert(\"Vous avez déjà scanner la bouteille !\");\r\n      }\r\n      \r\n      \r\n    })\r\n  }\r\n  getUpcStateConnexion() {\r\n    this.platform.ready().then(async res=>{\r\n      this.upc = new UPCModbus(state => {\r\n        this.ngZone.run(() => {\r\n          // Force refresh UI\r\n          \r\n            \r\n            //this.readDiffusionParameters();\r\n          \r\n        });\r\n      });\r\n\r\n      await this.upc.client.connect();\r\n\r\n      setTimeout(()=>{\r\n        this.upc.client.getStringFromHoldingRegister(40045,10).then(res=>{\r\n          //this.global.ssid = res;\r\n          //this.global.isBBAM = true;\r\n          this.cd.detectChanges();\r\n        })\r\n      },2000)\r\n    })\r\n  }\r\n  onSynchroCeint() {\r\n    this.upc.client.setStringInHoldingRegister(this.addressage,this.B1[this.i].substr(0,8)).then(\r\n      res=>{\r\n        //this.booleanB1 = true;\r\n        this.addressage += 10;\r\n        this.i++;\r\n        alert(\"Ecriture sur l'upc en B1, état : \"+JSON.stringify(res));\r\n      }    \r\n    ).catch(error=>{\r\n      alert(JSON.stringify(error));\r\n    });\r\n\r\n    this.upc.client.setStringInHoldingRegister(this.addressage2,this.B2[this.y].substr(0,8)).then(\r\n      res=>{\r\n        //this.booleanB2 = true;\r\n        this.addressage2 += 10;\r\n        this.y++;\r\n        alert(\"Ecriture sur l'upc en B2, état : \"+JSON.stringify(res));\r\n      }    \r\n    ).catch(error=>{\r\n      alert(JSON.stringify(error));\r\n    });\r\n  }\r\n  \r\n\r\n}\r\n\r\n"],"sourceRoot":""}