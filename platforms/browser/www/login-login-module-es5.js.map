{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["module.exports = \"<ion-content class=\\\"bg-light\\\" *ngIf=\\\"isLog\\\">\\n  <ion-row justify-content-center align-items-center>\\n    <ion-col col-12 col-sm-10 col-md-6 col-lg-5 col-xl-4>\\n\\n      <ion-card>\\n\\n        <!-- Image -->\\n        <img src=\\\"assets/bg_logo.png\\\"/>  \\n\\n        <!-- Content -->\\n        <ion-card-content>\\n\\n          <!-- Title -->\\n          <ion-card-title>Se connecter</ion-card-title>\\n\\n          <!-- Login form -->\\n          <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login()\\\" autocomplete=\\\"off\\\">\\n\\n            <ion-list inset>\\n\\n              <ion-item>\\n                <ion-input placeholder=\\\"Email\\\" name=\\\"username\\\" type=\\\"email\\\" required [(ngModel)]=\\\"username\\\" #email></ion-input>\\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-input placeholder=\\\"Mot de passe\\\" name=\\\"password\\\" type=\\\"password\\\" required [(ngModel)]=\\\"password\\\"></ion-input>\\n              </ion-item>\\n\\n            </ion-list>\\n\\n            <ion-button class=\\\"submit-btn\\\" color=\\\"primary\\\" full type=\\\"submit\\\" [disabled]=\\\"!loginForm.form.valid\\\" margin-top>Se connecter</ion-button>\\n\\n          </form>\\n        </ion-card-content>\\n\\n      </ion-card>\\n\\n    </ion-col>\\n  </ion-row>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {Upcv3serviceService} from '../api/upcv3service.service';\nimport { ToastController, NavController, LoadingController } from '@ionic/angular';\nimport {User} from '../model/user';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  @ViewChild('email', {static: false}) email: any;\n  private username: string;\n  private password: string;\n  private isLog = false;\n\n  constructor(\n    private upc3serv:Upcv3serviceService,\n    public navCtrl: NavController,\n    public toastCtrl: ToastController,\n    public loadingCtrl: LoadingController,\n    private storage : Storage\n\n  ) { }\n  async ngOnInit() {\n    setTimeout(() => {\n      this.email.setFocus();\n    }, 500);\n    await this.storage.get('user').then(val => this.username = val);\n    await this.storage.get('pass').then(val => this.password = val);\n    await this.storage.get('remember').then(async res=>{\n      if (res === 1){\n        const loading = await this.loadingCtrl.create({\n          message: 'Connexion en cours...'\n        });\n        loading.present();\n        let user = new User();\n        user.username = this.username;\n        user.password = this.password;\n        this.upc3serv.login(user).subscribe(async res=>{\n          loading.dismiss();\n          if(res.result){\n            localStorage.setItem(\"token\",res.result);\n            this.navCtrl.navigateRoot('home');\n          }\n          else {\n            // Check code\n            switch (res.code) {\n              case 'TOKEN_WRONG_IDENTIFIERS':\n                let toast = await this.toastCtrl.create({\n                  message: 'Identifiants incorrects !',\n                  duration: 3000,\n                  position: 'top'\n                });\n                toast.present();\n                break;\n            }\n          }\n        },\n        async err => {\n          // Hide loading\n          loading.dismiss();\n\n          let toast = await this.toastCtrl.create({\n            message: 'Impossible de se connecter Ã  internet !',\n            duration: 3000,\n            position: 'top'\n          });\n          toast.present()\n        })\n      }\n      else {\n        this.isLog = true;\n      }\n    });\n  }\n  \n  \n  async login() {\n    // Show loading\n    const loading = await this.loadingCtrl.create({\n      message: 'Connexion en cours...'\n    });\n    loading.present();\n   \n    // Request\n    let user :User = new User();\n    user.username = this.username;\n    user.password = this.password;\n    this.upc3serv.login(user).subscribe(\n        async data => {\n          // Hide loading\n          loading.dismiss();\n\n          // Check state\n          if (data.result) {\n            this.storage.set('token',data.result);\n            localStorage.setItem(\"token\",data.result);\n            this.storage.set('user',user.username);\n            this.storage.set('pass',user.password);\n            this.storage.set('remember',1);\n            this.navCtrl.navigateRoot('home'); \n          \n          } else {\n            // Check code\n            switch (data.code) {\n              case 'TOKEN_WRONG_IDENTIFIERS':\n                let toast = await this.toastCtrl.create({\n                  message: 'Identifiants incorrects !',\n                  duration: 3000,\n                  position: 'top'\n                });\n                toast.present();\n                break;\n            }\n          }\n        },\n        async err => {\n          // Hide loading\n          loading.dismiss();\n\n          let toast = await this.toastCtrl.create({\n            message: 'Impossible de se connecter Ã  internet !',\n            duration: 3000,\n            position: 'top'\n          });\n          toast.present()\n        }\n    );\n  }\n\n}\n"],"sourceRoot":""}