{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module-es2015.js","sourcesContent":["module.exports = \"<ion-content class=\\\"bg-light\\\" *ngIf=\\\"needToLog\\\">\\r\\n  <ion-row justify-content-center align-items-center>\\r\\n    <ion-col col-12 col-sm-10 col-md-6 col-lg-5 col-xl-4>\\r\\n\\r\\n      <ion-card>\\r\\n\\r\\n        <!-- Image -->\\r\\n        <img src=\\\"assets/bg_logo.png\\\"/>  \\r\\n\\r\\n        <!-- Content -->\\r\\n        <ion-card-content>\\r\\n\\r\\n          <!-- Title -->\\r\\n          <ion-card-title>Se connecter</ion-card-title>\\r\\n\\r\\n          <!-- Login form -->\\r\\n          <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login()\\\" autocomplete=\\\"off\\\">\\r\\n\\r\\n            <ion-list inset>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-input placeholder=\\\"Email\\\" name=\\\"username\\\" type=\\\"email\\\" required [(ngModel)]=\\\"username\\\" #email></ion-input>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-input placeholder=\\\"Mot de passe\\\" name=\\\"password\\\" type=\\\"password\\\" required [(ngModel)]=\\\"password\\\"></ion-input>\\r\\n              </ion-item>\\r\\n\\r\\n            </ion-list>\\r\\n\\r\\n            <ion-button class=\\\"submit-btn\\\" color=\\\"primary\\\" full type=\\\"submit\\\" [disabled]=\\\"!loginForm.form.valid\\\" margin-top>Se connecter</ion-button>\\r\\n            <!--<ion-button class=\\\"submit-btn\\\" color=\\\"primary\\\" full margin-top (click)=\\\"onBBAM();\\\">Hors Connexion</ion-button>-->\\r\\n          </form>\\r\\n        </ion-card-content>\\r\\n\\r\\n      </ion-card>\\r\\n\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoginPageRoutingModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {Upcv3serviceService} from '../api/upcv3service.service';\r\nimport { ToastController, NavController, LoadingController, Platform } from '@ionic/angular';\r\nimport {User} from '../model/user';\r\nimport { Storage } from '@ionic/storage';\r\nimport {Hotspot} from '@ionic-native/hotspot/ngx';\r\nimport { Network } from '@ionic-native/network/ngx';\r\n\r\ndeclare var WifiWizard2: any;\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n  @ViewChild('email', {static: false}) email: any;\r\n  private username: string;\r\n  private password: string;\r\n  private needToLog = undefined;\r\n\r\n  constructor(\r\n    private upc3serv:Upcv3serviceService,\r\n    public navCtrl: NavController,\r\n    public toastCtrl: ToastController,\r\n    public loadingCtrl: LoadingController,\r\n    private storage : Storage,\r\n    private platform : Platform,\r\n    private hotspot : Hotspot,private network : Network\r\n\r\n  ) { }\r\n  async ngOnInit() {\r\n    this.storage.set(\"reconnect\", true)\r\n    localStorage.setItem(\"BBAM\",null);\r\n   \r\n    await this.storage.get('remember').then(async res=>{\r\n      if (res === 1){  \r\n        this.needToLog = false;           \r\n        this.navCtrl.navigateRoot('home');\r\n      }\r\n      else {\r\n        this.needToLog = true;\r\n      }\r\n    })    \r\n  }\r\n  \r\n  \r\n  async login() {\r\n    // Show loading\r\n    const loading = await this.loadingCtrl.create({\r\n      message: 'Connexion en cours...'\r\n    });\r\n    loading.present();\r\n   \r\n    // Request\r\n    let user :User = new User();\r\n    user.username = this.username;\r\n    user.password = this.password;\r\n    this.upc3serv.login(user).subscribe(\r\n        async data => {\r\n          // Hide loading\r\n          loading.dismiss();\r\n\r\n          // Check state\r\n          if (data.result) {\r\n            \r\n            this.storage.set('token',data.result);\r\n            localStorage.setItem(\"token\",data.result);\r\n            this.storage.set('user',user.username);\r\n            this.storage.set('pass',user.password);\r\n            this.storage.set('remember',1);            \r\n            this.navCtrl.navigateRoot('home'); \r\n          \r\n          } else {\r\n            // Check code\r\n            switch (data.code) {\r\n              case 'TOKEN_WRONG_IDENTIFIERS':\r\n                let toast = await this.toastCtrl.create({\r\n                  message: 'Identifiants incorrects !',\r\n                  duration: 3000,\r\n                  position: 'top'\r\n                });\r\n                toast.present();\r\n                break;\r\n            }\r\n          }\r\n        },\r\n        async err => {\r\n          alert(JSON.stringify(err))\r\n          // Hide loading          \r\n          loading.dismiss();\r\n\r\n          let toast = await this.toastCtrl.create({\r\n            message: 'Impossible de se connecter Ã  internet !',\r\n            duration: 3000,\r\n            position: 'bottom'\r\n          });\r\n          toast.present()\r\n        }\r\n    );\r\n  }\r\n}\r\n\r\n"],"sourceRoot":""}