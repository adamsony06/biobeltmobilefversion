{"version":3,"sources":["./node_modules/angular2-uuid/index.js","./src/app/canvas/canvas.page.html","./src/app/canvas/canvas.page.scss","./src/app/canvas/canvas.page.ts","./src/app/model/project/belt.ts","./src/app/model/project/branch.ts","./src/app/model/project/cad.ts","./src/app/model/project/calculations.ts","./src/app/model/project/electricalBranch.ts","./src/app/model/project/electricalNode.ts","./src/app/model/project/electricalOutlet.ts","./src/app/model/project/node.ts","./src/app/model/project/project.ts","./src/app/model/project/protectedArea.ts","./src/app/model/project/transformer.ts","./src/app/model/project/version.ts"],"names":[],"mappings":"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","file":"default~canvas-canvas-module~instalpieges-instalpieges-module-es2015.js","sourcesContent":["\"use strict\";\nvar UUID = (function () {\n    function UUID() {\n        // no-op\n    }\n    UUID.UUID = function () {\n        if (typeof (window) !== \"undefined\" && typeof (window.crypto) !== \"undefined\" && typeof (window.crypto.getRandomValues) !== \"undefined\") {\n            // If we have a cryptographically secure PRNG, use that\n            // http://stackoverflow.com/questions/6906916/collisions-when-generating-uuids-in-javascript\n            var buf = new Uint16Array(8);\n            window.crypto.getRandomValues(buf);\n            return (this.pad4(buf[0]) + this.pad4(buf[1]) + \"-\" + this.pad4(buf[2]) + \"-\" + this.pad4(buf[3]) + \"-\" + this.pad4(buf[4]) + \"-\" + this.pad4(buf[5]) + this.pad4(buf[6]) + this.pad4(buf[7]));\n        }\n        else {\n            // Otherwise, just use Math.random\n            // https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n            // https://stackoverflow.com/questions/11605068/why-does-jshint-argue-against-bitwise-operators-how-should-i-express-this-code\n            return this.random4() + this.random4() + \"-\" + this.random4() + \"-\" + this.random4() + \"-\" +\n                this.random4() + \"-\" + this.random4() + this.random4() + this.random4();\n        }\n    };\n    UUID.pad4 = function (num) {\n        var ret = num.toString(16);\n        while (ret.length < 4) {\n            ret = \"0\" + ret;\n        }\n        return ret;\n    };\n    UUID.random4 = function () {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    };\n    return UUID;\n}());\nexports.UUID = UUID;\n//# sourceMappingURL=index.js.map","module.exports = \"<div style=\\\"text-align: center;\\\"><ion-button color=\\\"danger\\\" size=\\\"small\\\" (click)=\\\"clear();\\\">Tout effacer</ion-button></div>\\r\\n<canvas #backgroundImageCanvas id=\\\"background-image-canvas\\\" (mousedown)=\\\"startDrawing($event);\\\" \\r\\n (mousemove)=\\\"moved($event);\\\" (mouseup)=\\\"endDrawing();\\\" (touchstart)=\\\"startDrawing($event);\\\" (touchmove)=\\\"moved($event);\\\"></canvas>\\r\\n\\r\\n \\r\\n <!--<canvas #protectedAreasCanvas id=\\\"protected-areas-canvas\\\"></canvas>\\r\\n\\r\\n<canvas #beltsCanvas id=\\\"belts-canvas\\\"></canvas>\\r\\n\\r\\n<canvas #electricCanvas id=\\\"electric-canvas\\\"></canvas>\\r\\n\\r\\n<canvas #drawingCanvas id=\\\"drawing-canvas\\\"\\r\\n        (mousedown)=\\\"onMouseDown($event)\\\"\\r\\n        (mousemove)=\\\"onMouseMove($event)\\\"\\r\\n        (contextmenu)=\\\"onContextMenu($event)\\\">\\r\\n</canvas> -->\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhbnZhcy9jYW52YXMucGFnZS5zY3NzIn0= */\"","import { Component, ViewChild, ElementRef, OnInit, HostListener, Input , AfterViewInit } from '@angular/core';\r\nimport { NodeType, Node } from '../model/project/node';\r\nimport { TrapsColor } from '../model/project/belt';\r\nimport { CAD, Tool, Mode } from '../model/project/cad';\r\nimport { Upcv3serviceService } from '../api/upcv3service.service';\r\nimport {GlobalService} from '../api/global.service';\r\nimport {Storage} from '@ionic/storage';\r\nimport {Platform} from '@ionic/angular';\r\nimport { Project } from '../model/project/project';\r\nimport {Version} from '../model/project/version';\r\n\r\n@Component({\r\n  selector: 'cad-canvas',\r\n  styleUrls: [ './canvas.page.scss' ],\r\n  templateUrl: './canvas.page.html'\r\n})\r\nexport class CADCanvasComponent implements OnInit {\r\n  // NF\r\n  @Input('cad') cad: CAD;\r\n\r\n  // Background Image\r\n  @ViewChild('backgroundImageCanvas',{static:false}) backgroundImageCanvas: any;\r\n  backgroundImage;\r\n  token:string;\r\n  project:Project;\r\n  version:Version;\r\n  canvasElt:any;\r\n  saveX: number;\r\n  saveY: number;\r\n  drawing = false;\r\n  lineWidth = 5;\r\n  selectedColor = '#9e2956';\r\n  colors = [ '#9e2956', '#c2281d', '#de722f', '#edbf4c', '#5db37e', '#459cde', '#4250ad', '#802fa3' ];\r\n \r\n  // Custom Image\r\n  customImage;\r\n\r\n  // Belts\r\n  @ViewChild('beltsCanvas',{static:false}) beltsCanvas: ElementRef;\r\n  controlImage;\r\n  controlImageSheltered;\r\n  hexagonalTrap1Image;\r\n  hexagonalTrap2Image;\r\n  hexagonalTrap3Image;\r\n  rectangularTrap1Image;\r\n\r\n  // Electric\r\n  @ViewChild('electricCanvas',{static:false}) electricCanvas: ElementRef;\r\n\r\n  // Drawing\r\n  @ViewChild('drawingCanvas',{static:false}) drawingCanvas: ElementRef;\r\n  private selectedDrawingPointIndex;\r\n\r\n  // Protected areas\r\n  @ViewChild('protectedAreasCanvas',{static:false}) protectedAreasCanvas: ElementRef;\r\n  private protectedAreasPatternCanvas;\r\n\r\n  private moveStartPosition = { x: 0, y: 0 };\r\n\r\n  constructor(\r\n    private upcv3service: Upcv3serviceService,\r\n    private global : GlobalService,\r\n    private storage : Storage,\r\n    private platform: Platform\r\n  ) {}\r\n  ngAfterViewInit(){\r\n    this.canvasElt = this.backgroundImageCanvas.nativeElement;\r\n    this.canvasElt.width = this.platform.width();\r\n    this.canvasElt.height = this.platform.height()/2;\r\n  }  \r\n  async ngOnInit() {\r\n    // Init canvas\r\n    \r\n    await this.storage.get('token').then(async val =>{\r\n      this.token = val;\r\n      await this.upcv3service.getProject(this.token).subscribe(res=>{\r\n        res.result.forEach(item=>{\r\n          if(item.client=== this.global.upc3.upcNameId){\r\n            this.project = item;\r\n            \r\n          }\r\n        })\r\n      });\r\n      await setTimeout(()=>{\r\n         this.upcv3service.getVersion(this.project.id,this.token).subscribe(res=>{\r\n          this.version = res.result;\r\n          alert(JSON.stringify(res.result));\r\n          this.cad = new CAD(this.project,this.version);\r\n        })\r\n      },500)\r\n      \r\n    });\r\n    await setTimeout(()=>{\r\n      this.onDraw()\r\n    },5000);\r\n    \r\n  }\r\n  startDrawing(ev) {\r\n    this.drawing = true;\r\n    var canvasPosition = this.canvasElt.getBoundingClientRect();\r\n \r\n    this.saveX = ev.pageX - canvasPosition.x;\r\n    this.saveY = ev.pageY - canvasPosition.y;\r\n  }\r\n \r\n  endDrawing() {\r\n    this.drawing = false;\r\n  }\r\n \r\n  selectColor(color) {\r\n    this.selectedColor = color;\r\n  }\r\n  onDraw(){\r\n    var width = 700,\r\n        height = 700;\r\n\r\n    // General\r\n    this.cad.translatePosition.x = width / 2;\r\n    this.cad.translatePosition.y = height / 2;\r\n    \r\n    // Background Image\r\n    this.backgroundImageCanvas.nativeElement.width = width;\r\n    this.backgroundImageCanvas.nativeElement.height = height;\r\n    this.backgroundImage = new Image();\r\n    this.backgroundImage.crossOrigin = \"anonymous\";\r\n    this.backgroundImage.src = `https://maps.googleapis.com/maps/api/staticmap?center=${ this.cad.project.lat },${ this.cad.project.lng }&zoom=${ this.cad.project.zoom }&size=${ this.cad.googleMapsParams.width }x${ this.cad.googleMapsParams.height }&scale=${ this.cad.googleMapsParams.scale }&maptype=${ this.cad.version.mapType }&style=feature:all|element:labels|visibility:off&key=AIzaSyDNhsUG6VjyDQ_R_gZ2cT2ktTBbsy6M_uQ`;\r\n    this.backgroundImage.onload = function() { this.drawBackgroundImage(); }.bind(this);\r\n\r\n    // Custom Image\r\n    if (this.cad.project.customPicture) {\r\n      // Download\r\n      this.upcv3service.downloadCustomPicture(this.cad.project.id,this.token).subscribe(\r\n        res => {\r\n          this.customImage = new Image();\r\n          this.customImage.crossOrigin = \"anonymous\";\r\n          this.customImage.src = URL.createObjectURL(new Blob([res]));\r\n          this.customImage.onload = function() { this.drawBackgroundImage(); }.bind(this);\r\n        }\r\n      )\r\n    }\r\n\r\n    // Belts\r\n    /*this.beltsCanvas.nativeElement.width = width;\r\n    this.beltsCanvas.nativeElement.height = height;\r\n    this.controlImage = new Image(this.cad.version.iconsSize, this.cad.version.iconsSize);\r\n    this.controlImage.crossOrigin = 'anonymous';\r\n    this.controlImage.src = 'assets/img/markers/regie.png';\r\n    this.controlImage.onload = function() { this.drawBelts(); }.bind(this);\r\n    this.controlImageSheltered = new Image(this.cad.version.iconsSize, this.cad.version.iconsSize);\r\n    this.controlImageSheltered.crossOrigin = 'anonymous';\r\n    this.controlImageSheltered.src = 'assets/img/markers/regie_abris.png';\r\n    this.controlImageSheltered.onload = function() { this.drawBelts(); }.bind(this);\r\n    // Hexagonal Traps\r\n    this.hexagonalTrap1Image = new Image(this.cad.version.iconsSize, this.cad.version.iconsSize);\r\n    this.hexagonalTrap1Image.crossOrigin = 'anonymous';\r\n    this.hexagonalTrap1Image.src = 'assets/img/markers/trap_hexa_1_1.png';\r\n    this.hexagonalTrap1Image.onload = function() { this.drawBelts(); }.bind(this);\r\n    this.hexagonalTrap2Image = new Image(this.cad.version.iconsSize, this.cad.version.iconsSize);\r\n    this.hexagonalTrap2Image.crossOrigin = 'anonymous';\r\n    this.hexagonalTrap2Image.src = 'assets/img/markers/trap_hexa_2.png';\r\n    this.hexagonalTrap2Image.onload = function() { this.drawBelts(); }.bind(this);\r\n    this.hexagonalTrap3Image = new Image(this.cad.version.iconsSize, this.cad.version.iconsSize);\r\n    this.hexagonalTrap3Image.crossOrigin = 'anonymous';\r\n    this.hexagonalTrap3Image.src = 'assets/img/markers/trap_hexa_3.png';\r\n    this.hexagonalTrap3Image.onload = function() { this.drawBelts(); }.bind(this);\r\n    // Rectangular Traps\r\n    this.rectangularTrap1Image = new Image(this.cad.version.iconsSize, this.cad.version.iconsSize);\r\n    this.rectangularTrap1Image.crossOrigin = 'anonymous';\r\n    this.rectangularTrap1Image.src = 'assets/img/markers/trap_rect_1.png';\r\n    this.rectangularTrap1Image.onload = function() { this.drawBelts(); }.bind(this);\r\n\r\n    // Drawing\r\n    this.drawingCanvas.nativeElement.width = width;\r\n    this.drawingCanvas.nativeElement.height = height;\r\n\r\n    // Protected areas\r\n    this.protectedAreasCanvas.nativeElement.width = width;\r\n    this.protectedAreasCanvas.nativeElement.height = height;\r\n    this.protectedAreasPatternCanvas = document.createElement('canvas');\r\n    this.protectedAreasPatternCanvas.style.width = '100%';\r\n    this.protectedAreasPatternCanvas.style.height = '100%';\r\n    this.drawProtectedAreas();\r\n\r\n    // Electric\r\n    this.electricCanvas.nativeElement.width = width;\r\n    this.electricCanvas.nativeElement.height = height;\r\n    this.drawElectric();*/\r\n  }\r\n  clear(){\r\n    \r\n    this.drawBackgroundImage();\r\n  }\r\n  // Resize Event\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(e) {\r\n    if (!this.cad.render) {\r\n      this.backgroundImageCanvas.nativeElement.height =\r\n        this.beltsCanvas.nativeElement.height =\r\n          this.drawingCanvas.nativeElement.height =\r\n            this.protectedAreasCanvas.nativeElement.height =\r\n              this.electricCanvas.nativeElement.height =\r\n                document.getElementById('CAD').offsetHeight;\r\n      \r\n      this.backgroundImageCanvas.nativeElement.width =\r\n        this.beltsCanvas.nativeElement.width =\r\n          this.drawingCanvas.nativeElement.width =\r\n            this.protectedAreasCanvas.nativeElement.width =\r\n              this.electricCanvas.nativeElement.width =\r\n                document.getElementById('CAD').offsetWidth;\r\n    }\r\n\r\n    this.drawBackgroundImage();\r\n    this.drawBelts();\r\n    this.drawElectric();\r\n    this.drawProtectedAreas();\r\n  }\r\n\r\n  moved(ev) {\r\n    if (!this.drawing) return;\r\n   \r\n    var canvasPosition = this.canvasElt.getBoundingClientRect();\r\n    let ctx = this.canvasElt.getContext('2d');\r\n   \r\n    let currentX = ev.touches[0].pageX - canvasPosition.x;\r\n    let currentY = ev.touches[0].pageY - canvasPosition.y;\r\n   \r\n    ctx.lineJoin = 'round';\r\n    ctx.strokeStyle = this.selectedColor;\r\n    ctx.lineWidth = this.lineWidth;\r\n   \r\n    ctx.beginPath();\r\n    //ctx.arc(this.saveX,this.saveY,50,0,2*Math.PI);\r\n    ctx.moveTo(this.saveX, this.saveY);\r\n    ctx.lineTo(currentX, currentY);\r\n    ctx.closePath();\r\n   \r\n    ctx.stroke();\r\n   \r\n    this.saveX = currentX;\r\n    this.saveY = currentY;\r\n  }\r\n  // Mouse events */\r\n  onMouseDown(e) {\r\n    // When selecting pixels ratio\r\n    if (this.cad.tool == Tool.SELECT_PIXELS_RATIO) {\r\n      // Get point\r\n      var clickPos = this.getClickPosition(e),\r\n          x = clickPos.x,\r\n          y = clickPos.y,\r\n          minDistance = null;\r\n\r\n      // Start\r\n      if (!this.cad.startPixelsRatio) this.cad.startPixelsRatio = { x: x, y: y };\r\n\r\n      // End\r\n      else if (!this.cad.endPixelsRatio) this.cad.endPixelsRatio = { x: x, y: y };\r\n\r\n      this.drawDrawing();\r\n      return;\r\n    }\r\n\r\n    // When selecting parent node\r\n    if (this.cad.tool == Tool.SELECT_PARENT_NODE) {\r\n      // Get node\r\n      var selectedNode,\r\n          clickPos = this.getClickPosition(e),\r\n          x = clickPos.x,\r\n          y = clickPos.y,\r\n          minDistance = null;\r\n\r\n      // Find & select the nearest\r\n      this.cad.version.belts.forEach(belt => {\r\n        belt.branches.forEach(branch => {\r\n          branch.nodes.forEach(node => {\r\n            // Get actual position\r\n            var nodePosition = this.cad.getPosition(node.lat, node.lng),\r\n                nodePos = this.cad.rotate(0, 0, nodePosition.x, nodePosition.y, -this.cad.version.rotation),\r\n                distance = this.cad.distance(x, y, nodePos.x, nodePos.y);\r\n\r\n            if (minDistance == null || minDistance > distance) {\r\n              minDistance = distance;\r\n              if (minDistance <= this.cad.version.iconsSize / 2) selectedNode = node.id;\r\n            }\r\n          })\r\n        })\r\n      });\r\n\r\n      if (selectedNode) this.cad.setSelectedBranchParentNode(selectedNode);\r\n      return;\r\n    }\r\n\r\n    // Disable contextMenu\r\n    if (e.which == 1 && this.cad.showContextMenu) this.cad.showContextMenu = false;\r\n\r\n    // When drawing\r\n    if (this.cad.tool == Tool.DRAW) {\r\n      // 1. Check if point under pointer\r\n      this.selectedDrawingPointIndex = null;\r\n      var clickPos = this.getClickPosition(e), x = clickPos.x, y = clickPos.y, minDistance = null;\r\n      this.cad.drawPolyPath.forEach((path, index) => {\r\n        var pathPos = this.cad.rotate(0, 0, path.x, path.y, -this.cad.version.rotation),\r\n            distance = this.cad.distance(x, y, pathPos.x, pathPos.y);\r\n\r\n        if (minDistance == null || minDistance > distance) {\r\n          minDistance = distance;\r\n          if (minDistance <= this.cad.version.iconsSize / 2) this.selectedDrawingPointIndex = index;\r\n        }\r\n      });\r\n\r\n      // 2. Add point if no point selected\r\n      if (this.selectedDrawingPointIndex == null) {\r\n        var correctedPos = this.cad.rotate(0, 0, clickPos.x, clickPos.y, this.cad.version.rotation);\r\n        this.cad.drawPolyPath.push({x: correctedPos.x, y: correctedPos.y});\r\n        this.drawDrawing();\r\n      }\r\n      return;\r\n    }\r\n\r\n    // When editing protectedArea\r\n    if (this.cad.selectedProtectedArea) {\r\n      // Selection\r\n      this.cad.selectedProtectedAreaPointIndex = null;\r\n      var clickPos = this.getClickPosition(e), x = clickPos.x, y = clickPos.y, minDistance = null;\r\n\r\n      // Find & select the nearest\r\n      this.cad.selectedProtectedArea.points.forEach((point, index) => {\r\n        var pointPosition = this.cad.getPosition(point[0], point[1]),\r\n            pointPos = this.cad.rotate(0, 0, pointPosition.x, pointPosition.y, -this.cad.version.rotation),\r\n            distance = this.cad.distance(x, y, pointPos.x, pointPos.y);\r\n\r\n        if (minDistance == null || minDistance > distance) {\r\n          minDistance = distance;\r\n          if (minDistance <= this.cad.version.iconsSize / 2) this.cad.selectedProtectedAreaPointIndex = index;\r\n        }\r\n      });\r\n      this.drawProtectedAreas();\r\n    }\r\n    \r\n    // Default\r\n    else {\r\n      // Selection\r\n      // Get node\r\n      var selectedNode, selectedElectricalOutlet, selectedTransformer,\r\n          clickPos = this.getClickPosition(e),\r\n          x = clickPos.x,\r\n          y = clickPos.y,\r\n          minDistance = null;\r\n\r\n      // Disable moving\r\n      this.cad.tool = null;\r\n\r\n      // Find & select the nearest\r\n      this.cad.version.belts.forEach(belt => {\r\n        // CO2\r\n        belt.branches.forEach(branch => {\r\n          branch.nodes.forEach(node => {\r\n            // Get actual position\r\n            var nodePosition = this.cad.getPosition(node.lat, node.lng),\r\n                nodePos = this.cad.rotate(0, 0, nodePosition.x, nodePosition.y, -this.cad.version.rotation),\r\n                distance = this.cad.distance(x, y, nodePos.x, nodePos.y);\r\n\r\n            if (minDistance == null || minDistance > distance) {\r\n              minDistance = distance;\r\n              if (minDistance <= this.cad.version.iconsSize / 2) selectedNode = node.id;\r\n            }\r\n          });\r\n        });\r\n        \r\n        // ELECTRIC\r\n        minDistance = null;\r\n        belt.electricalOutlets.forEach(electricalOutlet => {\r\n          // Get actual position\r\n          var electricalOutletPosition = this.cad.getPosition(electricalOutlet.lat, electricalOutlet.lng),\r\n              electricalOutletPositionPos = this.cad.rotate(0, 0, electricalOutletPosition.x, electricalOutletPosition.y, -this.cad.version.rotation),\r\n              distance = this.cad.distance(x, y, electricalOutletPositionPos.x, electricalOutletPositionPos.y);\r\n            \r\n          if (minDistance == null || minDistance > distance) {\r\n            minDistance = distance;\r\n              \r\n            if (minDistance <= this.cad.version.iconsSize / 2) selectedElectricalOutlet = electricalOutlet.id;\r\n          }\r\n            \r\n          if (this.cad.mode == Mode.ELECTRIC) {\r\n            electricalOutlet.transformers.forEach(transformer => {\r\n              var transformerPosition = {\r\n                    x: electricalOutletPosition.x + (this.cad.version.iconsSize * 2 / 2) * Math.cos((transformer.angle) * Math.PI / 180),\r\n                    y: electricalOutletPosition.y + (this.cad.version.iconsSize * 2 / 2) * Math.sin((transformer.angle) * Math.PI / 180)\r\n                  },\r\n                  transformerPos = this.cad.rotate(0, 0, transformerPosition.x, transformerPosition.y, -this.cad.version.rotation);\r\n                  distance = this.cad.distance(x, y, transformerPos.x, transformerPos.y);\r\n                  \r\n              if (minDistance == null || minDistance > distance) {\r\n                minDistance = distance;\r\n                \r\n                if (minDistance <= this.cad.version.iconsSize / 2) selectedTransformer = transformer.id;\r\n              }\r\n            })\r\n          }\r\n        })\r\n      });\r\n\r\n      // Select\r\n      if (selectedNode != null) this.cad.selectNode(selectedNode, e.ctrlKey);\r\n      else if (selectedElectricalOutlet != null) this.cad.selectElectricalOutlet(selectedElectricalOutlet);\r\n      else if (selectedTransformer != null) this.cad.selectTransformer(selectedTransformer);\r\n      else if (!e.ctrlKey) this.cad.unSelectBelt();\r\n\r\n      this.moveStartPosition = { x: e.clientX, y: e.clientY };\r\n    }\r\n\r\n    // Move map if no nodes selected\r\n    if (this.cad.selectedNodes.length == 0 && !this.cad.selectedElectricalOutlet) {\r\n      this.cad.startDragOffset.x = e.clientX - this.cad.translatePosition.x;\r\n      this.cad.startDragOffset.y = e.clientY - this.cad.translatePosition.y;\r\n    }\r\n  }\r\n\r\n  onMouseMove(e) {\r\n    var clickPos = this.getClickPosition(e),\r\n        correctedPos = this.cad.rotate(0, 0, clickPos.x, clickPos.y, this.cad.version.rotation);\r\n\r\n    // When selecting pixels ratio\r\n    if (this.cad.tool == Tool.SELECT_PIXELS_RATIO) return;\r\n\r\n    // When selecting parent node\r\n    if (this.cad.tool == Tool.SELECT_PARENT_NODE) return;\r\n\r\n    // When drawing\r\n    if (this.cad.tool == Tool.DRAW) {\r\n      // 1. Translate point if selected\r\n      if (e.which == 1 && this.selectedDrawingPointIndex != null) {\r\n        this.cad.drawPolyPath[this.selectedDrawingPointIndex].x = correctedPos.x;\r\n        this.cad.drawPolyPath[this.selectedDrawingPointIndex].y = correctedPos.y;\r\n        this.drawDrawing();\r\n      }\r\n\r\n      // 2. Default nothing\r\n      return;\r\n    }\r\n\r\n    // Move element if selected\r\n    if (e.which == 1 && (this.cad.selectedNodes.length == 1 || this.cad.selectedElectricalOutlet)) {\r\n\r\n      // Move only if distance from start > 1px\r\n      if (this.cad.distance(this.moveStartPosition.x, this.moveStartPosition.y, e.clientX, e.clientY) > 1) {\r\n        var position = this.cad.getCoordinates(correctedPos.x, correctedPos.y);\r\n          \r\n        // CO2\r\n        if (this.cad.selectedNodes.length == 1) {\r\n          var branchIndex = this.cad.version.getBranchIndex(this.cad.selectedBranch.id),\r\n              nodeIndex = this.cad.version.getNodeIndex(this.cad.selectedNodes[0].id);\r\n          \r\n          // Refresh distance\r\n          if (nodeIndex > 0) {\r\n            var distance = this.cad.getDistance({\r\n              lat: position.lat,\r\n              lng: position.lng\r\n            }, {\r\n              lat: this.cad.selectedBranch.nodes[nodeIndex - 1].lat,\r\n              lng: this.cad.selectedBranch.nodes[nodeIndex - 1].lng\r\n            });\r\n            this.cad.selectedNodes[0].prevDistance = distance;\r\n          } else if (branchIndex > 0 && nodeIndex == 0) {\r\n            // Get parent node\r\n            if (this.cad.selectedBranch.parentBranch != null && this.cad.selectedBranch.parentNode != null) {\r\n              var parentBranch = this.cad.selectedBelt.branches.find(b => b.id == this.cad.selectedBranch.parentBranch),\r\n                  parentNode = parentBranch.nodes.find(n => n.id == this.cad.selectedBranch.parentNode);\r\n\r\n              if (parentNode) {\r\n                distance = this.cad.getDistance(\r\n                  { lat: position.lat, lng: position.lng },\r\n                  { lat: parentNode.lat, lng: parentNode.lng }\r\n                );\r\n                this.cad.selectedNodes[0].prevDistance = distance;\r\n              }\r\n            }\r\n          }\r\n          \r\n          // Edit node throw Belt to impact child nodes\r\n          this.cad.version.setNodePosition(this.cad.selectedNodes[0].id, position.lat, position.lng);\r\n          this.drawBelts();\r\n          this.drawElectric();\r\n        }\r\n        \r\n        // Electric\r\n        else if (this.cad.selectedElectricalOutlet != null) {\r\n          this.cad.version.setElectricalOutletPosition(this.cad.selectedElectricalOutlet.id, position.lat, position.lng);\r\n          this.drawElectric();\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    // Move protectedArea point if selected\r\n    if (e.which == 1 && this.cad.selectedProtectedAreaPointIndex != null) {\r\n      var position = this.cad.getCoordinates(correctedPos.x, correctedPos.y);\r\n      this.cad.selectedProtectedArea.points[this.cad.selectedProtectedAreaPointIndex][0] = position.lat;\r\n      this.cad.selectedProtectedArea.points[this.cad.selectedProtectedAreaPointIndex][1] = position.lng;\r\n      this.drawProtectedAreas();\r\n    }\r\n\r\n    // Move map if no element selected\r\n    if (e.which == 1 && this.cad.selectedNodes.length == 0 && !this.cad.selectedElectricalOutlet && this.cad.selectedProtectedAreaPointIndex == null) {\r\n      // Translate\r\n      this.cad.translatePosition.x = e.clientX - this.cad.startDragOffset.x;\r\n      this.cad.translatePosition.y = e.clientY - this.cad.startDragOffset.y;\r\n      this.rotationZoomChanged();\r\n    }\r\n  }\r\n\r\n  onContextMenu(e) {\r\n    e.preventDefault();\r\n    // Check if node, transformer or electricalOutlet, protectedAreaPoint selected\r\n    if (\r\n      this.cad.selectedNodes.length == 1 ||\r\n      this.cad.selectedTransformer ||\r\n      this.cad.selectedElectricalOutlet ||\r\n      this.cad.selectedProtectedAreaPointIndex != null\r\n    ) {\r\n      var rect = this.beltsCanvas.nativeElement.getBoundingClientRect();\r\n      this.cad.contextMenuLeft = e.clientX - rect.left;\r\n      this.cad.contextMenuTop = e.clientY - rect.top;\r\n      this.cad.showContextMenu = true;\r\n    }\r\n  }\r\n\r\n\r\n  /* Events */\r\n  @HostListener('document:CADMapTypeChanged')\r\n  mapTypeChanged() {\r\n    this.backgroundImage.src = `https://maps.googleapis.com/maps/api/staticmap?center=${ this.cad.project.lat },${ this.cad.project.lng }&zoom=${ this.cad.project.zoom }&size=${ this.cad.googleMapsParams.width }x${ this.cad.googleMapsParams.height }&scale=${ this.cad.googleMapsParams.scale }&maptype=${ this.cad.version.mapType }&style=feature:all|element:labels|visibility:off&key=AIzaSyDNhsUG6VjyDQ_R_gZ2cT2ktTBbsy6M_uQ`;\r\n    this.drawBackgroundImage();\r\n  }\r\n\r\n  @HostListener('document:CADSelectionChanged')\r\n  @HostListener('document:CADModeChanged')\r\n  selectionChanged() {\r\n    this.drawBelts();\r\n    this.drawProtectedAreas();\r\n    this.drawElectric();\r\n  }\r\n\r\n  @HostListener('document:CADRotationChanged')\r\n  @HostListener('document:CADZoomChanged')\r\n  rotationZoomChanged() {\r\n    this.drawBackgroundImage();\r\n    this.drawBelts();\r\n    this.drawProtectedAreas();\r\n    this.drawElectric();\r\n  }\r\n\r\n  @HostListener('document:CADIconsSizeChanged')\r\n  iconsSizeChanged() {\r\n    // Edit markers\r\n    this.controlImage.width = this.controlImage.height =\r\n    this.controlImageSheltered.width = this.controlImageSheltered.height =\r\n    this.hexagonalTrap1Image.width = this.hexagonalTrap1Image.height =\r\n    this.hexagonalTrap2Image.width = this.hexagonalTrap2Image.height =\r\n    this.hexagonalTrap3Image.width = this.hexagonalTrap3Image.height =\r\n    this.rectangularTrap1Image.width = this.rectangularTrap1Image.height = this.cad.version.iconsSize;\r\n    this.drawBelts();\r\n  }\r\n\r\n  @HostListener('document:CADOpacityChanged')\r\n  opacityChanged() {\r\n    this.drawBackgroundImage();\r\n  }\r\n\r\n  @HostListener('document:CADBeltChanged')\r\n  beltChanged() {\r\n    this.drawBelts();\r\n    this.drawElectric();\r\n  }\r\n\r\n  @HostListener('document:CADProtectedAreaChanged')\r\n  protectedAreaChanged() {\r\n    this.drawProtectedAreas();\r\n  }\r\n\r\n  @HostListener('document:CADDrawChanged')\r\n  @HostListener('document:CADToolChanged')\r\n  drawChanged() {\r\n    this.drawDrawing();\r\n  }\r\n\r\n\r\n  /* Draw */\r\n  drawBackgroundImage() {\r\n    var context = this.backgroundImageCanvas.nativeElement.getContext('2d');\r\n    context.clearRect(0, 0, this.backgroundImageCanvas.nativeElement.width, this.backgroundImageCanvas.nativeElement.height);\r\n    context.save();\r\n    \r\n    // Quality\r\n    context.webkitImageSmoothingEnabled = false;\r\n    context.mozImageSmoothingEnabled    = false;\r\n    context.imageSmoothingEnabled       = false;\r\n\r\n    context.translate(this.cad.translatePosition.x, this.cad.translatePosition.y);\r\n    context.rotate(this.cad.version.rotation * Math.PI / 180);\r\n    context.scale(this.cad.version.zoom, this.cad.version.zoom);\r\n    if (this.cad.render) context.scale(this.cad.renderFactor, this.cad.renderFactor);\r\n\r\n    // Check if custom\r\n    if (this.cad.project.customPicture) {\r\n      if (this.customImage && this.customImage.complete && this.customImage.naturalWidth > 0)\r\n        context.drawImage(this.customImage, - this.customImage.width / 2, - this.customImage.height / 2);\r\n    } else {\r\n      // Draw image\r\n      if (this.backgroundImage.complete && this.backgroundImage.naturalWidth > 0)\r\n        context.drawImage(this.backgroundImage, - this.backgroundImage.width / 2, - this.backgroundImage.height / 2);\r\n    }\r\n\r\n    context.restore();\r\n\r\n    // Set opacity\r\n    if (this.cad.version.mapType == 'satellite') {\r\n      context.save();\r\n\r\n      context.rect(0, 0, this.backgroundImageCanvas.nativeElement.width, this.backgroundImageCanvas.nativeElement.height);\r\n      context.fillStyle = `rgba(200, 200, 200, ${ this.cad.version.mapOpacity / 100 })`;\r\n      context.fill();\r\n\r\n      context.restore();\r\n    }\r\n  }\r\n\r\n  drawBelts() {\r\n    var context = this.beltsCanvas.nativeElement.getContext('2d');\r\n    context.clearRect(0, 0, this.beltsCanvas.nativeElement.width, this.beltsCanvas.nativeElement.height);\r\n    context.save();\r\n\r\n    // Quality\r\n    context.webkitImageSmoothingEnabled = false;\r\n    context.mozImageSmoothingEnabled = false;\r\n    context.imageSmoothingEnabled = false;\r\n    \r\n    context.translate(this.cad.translatePosition.x, this.cad.translatePosition.y);\r\n    context.rotate(this.cad.version.rotation * Math.PI / 180);\r\n    context.scale(this.cad.version.zoom, this.cad.version.zoom);\r\n    if (this.cad.render) context.scale(this.cad.renderFactor, this.cad.renderFactor);\r\n        \r\n    // Draw lines first\r\n    this.cad.version.belts.forEach(belt => {\r\n      belt.branches.filter(b => b.nodes.length > 0).forEach(branch => {\r\n        // Color\r\n        var color = branch.color;\r\n        if (this.cad.mode == Mode.ELECTRIC) color = '#303030';\r\n        \r\n        // Draw inter-branch lines\r\n        if (branch.parentBranch != null && branch.parentNode != null) {\r\n          // Get branch and node\r\n          var parentNode = this.cad.version.getNode(branch.parentNode),\r\n              parentNodePosition = parentNode != null ? this.cad.getPosition(parentNode.lat, parentNode.lng) : null;\r\n              \r\n          // Get first node of currentBranch\r\n          var firstNode = branch.nodes[0];\r\n          var firstNodePosition = this.cad.getPosition(firstNode.lat, firstNode.lng);\r\n\r\n          // Check\r\n          if (parentNode != null && firstNode != null) {\r\n            if (firstNode.prevLinkBuried) {\r\n              this.drawDotLine(firstNodePosition.x, firstNodePosition.y, parentNodePosition.x, parentNodePosition.y, color, branch.width);\r\n            } else {\r\n              this.drawLine(firstNodePosition.x, firstNodePosition.y, parentNodePosition.x, parentNodePosition.y, color, branch.width);\r\n            }\r\n          }\r\n        }\r\n        \r\n        branch.nodes.forEach((node, index) => {\r\n          if (index > 0) {\r\n            // Nodes position\r\n            var previousNodePosition = this.cad.getPosition(branch.nodes[index - 1].lat, branch.nodes[index - 1].lng);\r\n            var nodePosition = this.cad.getPosition(node.lat, node.lng);\r\n\r\n            // Draw line\r\n            if (node.prevLinkBuried) {\r\n              this.drawDotLine(nodePosition.x, nodePosition.y, previousNodePosition.x, previousNodePosition.y, color, branch.width);\r\n            } else {\r\n              this.drawLine(nodePosition.x, nodePosition.y, previousNodePosition.x, previousNodePosition.y, color, branch.width);\r\n            }\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    // Then draw markers & number\r\n    this.cad.version.belts.forEach((belt, index) => {\r\n      var suffixIndex = [{ suffix: '', index: 1 }];\r\n      belt.branches.forEach(branch => {\r\n        // Color\r\n        var color = branch.numbersColor;\r\n        if (this.cad.mode == Mode.ELECTRIC) color = '#303030';\r\n        \r\n        if (suffixIndex.findIndex(s => s.suffix === branch.suffix) == -1) suffixIndex.push({ suffix: branch.suffix, index: 1 });\r\n        \r\n        branch.nodes.forEach(node => {\r\n          // Get position From LatLng\r\n          var nodePosition = this.cad.getPosition(node.lat, node.lng);\r\n          \r\n          // Icon & Number\r\n          switch (node.nodeType) {\r\n            \r\n            case NodeType.CONTROL:\r\n            // Draw icon\r\n            var filter = 'none';\r\n            // Find in selected nodes list\r\n            if (this.cad.selectedNodes.find(n => n.id === node.id) != null) {\r\n              filter = 'drop-shadow(0 0 8px yellow)';\r\n            }\r\n            \r\n            if (belt.controlSheltered) {\r\n              if (this.controlImageSheltered.complete) this.drawMarker(this.controlImageSheltered, nodePosition.x, nodePosition.y, -this.cad.version.rotation, filter);\r\n            } else {\r\n              if (this.controlImage.complete) this.drawMarker(this.controlImage, nodePosition.x, nodePosition.y, -this.cad.version.rotation, filter);\r\n            }\r\n            break;\r\n            \r\n            case NodeType.HEXAGONAL_TRAP:\r\n            case NodeType.RECTANGULAR_TRAP:\r\n            // Draw number if current belt\r\n            if (this.cad.selectedBelt == null || this.cad.selectedBelt.id == belt.id) {\r\n              var number = '';\r\n              if (this.cad.version.belts.length > 1 && this.cad.selectedBelt == null) {\r\n                number = `${index + 1}-${suffixIndex.find(s => s.suffix === branch.suffix).index + branch.suffix}`;\r\n              } else {\r\n                number = suffixIndex.find(s => s.suffix === branch.suffix).index + branch.suffix;\r\n              }\r\n              \r\n              var distanceFromOrigin = this.cad.distance(0, 0, nodePosition.x, nodePosition.y) / 100;\r\n              this.drawNodeNumber(\r\n                number,\r\n                color,\r\n                nodePosition.x + distanceFromOrigin * Math.cos(-this.cad.version.rotation * Math.PI / 180),\r\n                nodePosition.y + distanceFromOrigin * Math.sin(-this.cad.version.rotation * Math.PI / 180),\r\n                node.textDistance,\r\n                node.textAngle\r\n              );\r\n            }\r\n            \r\n            suffixIndex.find(s => s.suffix === branch.suffix).index++;\r\n            \r\n            // Draw icon\r\n            var filter = 'none';\r\n            if (this.cad.selectedNodes.find(n => n.id === node.id) != null) {\r\n              filter = 'drop-shadow(0 0 8px yellow)';\r\n            }\r\n            \r\n            if (node.nodeType == NodeType.HEXAGONAL_TRAP) {\r\n              switch (belt.trapsColor) {\r\n                \r\n                case TrapsColor.WOOD:\r\n                // Wood\r\n                if (this.hexagonalTrap1Image.complete) this.drawMarker(this.hexagonalTrap1Image, nodePosition.x, nodePosition.y, -this.cad.version.rotation, filter);\r\n                break;\r\n                \r\n                case TrapsColor.BROWN:\r\n                // Black Brown\r\n                if (this.hexagonalTrap2Image.complete) this.drawMarker(this.hexagonalTrap2Image, nodePosition.x, nodePosition.y, -this.cad.version.rotation, filter);\r\n                break;\r\n                \r\n                case TrapsColor.GREEN:\r\n                // English Green\r\n                if (this.hexagonalTrap3Image.complete) this.drawMarker(this.hexagonalTrap3Image, nodePosition.x, nodePosition.y, -this.cad.version.rotation, filter);\r\n                break;\r\n              \r\n              }\r\n            } else {\r\n              // All rectangular traps are in natural color\r\n              if (this.rectangularTrap1Image.complete) this.drawMarker(this.rectangularTrap1Image, nodePosition.x, nodePosition.y, -this.cad.version.rotation, filter);\r\n            }\r\n            break;\r\n            \r\n            case NodeType.INTERMEDIATE:\r\n            // Draw point\r\n            var lineColor = color;\r\n            \r\n            if (this.cad.selectedNodes.find(n => n.id === node.id) != null) {\r\n              lineColor = 'yellow';\r\n            }\r\n            this.drawCircle(context, nodePosition.x, nodePosition.y, branch.width / 2 - 1, color, lineColor);\r\n            break;\r\n              \r\n          }\r\n        });\r\n      });\r\n    });\r\n      \r\n    context.restore();\r\n  }\r\n\r\n  drawLine(x1, y1, x2, y2, lineColor, lineWidth) {\r\n    var context = this.beltsCanvas.nativeElement.getContext('2d');\r\n    context.save();\r\n    \r\n    context.beginPath();\r\n    context.moveTo(x1, y1);\r\n    context.lineTo(x2, y2);\r\n    context.strokeStyle = lineColor;\r\n    context.lineWidth = lineWidth;\r\n    context.stroke();\r\n    \r\n    context.restore();\r\n  }\r\n\r\n  drawDotLine(x1, y1, x2, y2, lineColor, lineWidth) {\r\n    var context = this.beltsCanvas.nativeElement.getContext('2d');\r\n    context.save();\r\n\r\n    // Split line\r\n    var points = this.cad.splitLine({ x: x1, y: y1 }, { x: x2, y: y2 }, this.cad.distance(x1, y1, x2, y2) / 10);\r\n\r\n    points.forEach(point => {\r\n      context.beginPath();\r\n      context.arc(point.x, point.y, lineWidth / 2, 0, 2 * Math.PI, false);\r\n      context.fillStyle = lineColor;\r\n      context.fill();\r\n      context.lineWidth = 1;\r\n      context.strokeStyle = lineColor;\r\n      context.stroke();\r\n    });\r\n\r\n    context.restore();\r\n  }\r\n\r\n  drawMarker(image, x, y, angle, filter) {\r\n    var context = this.beltsCanvas.nativeElement.getContext('2d');\r\n    context.save();\r\n    context.translate(x, y);\r\n    context.rotate(angle * Math.PI / 180);\r\n    context.filter = filter;\r\n    \r\n    context.drawImage(image, -image.width / 2 , -image.height / 2, image.width, image.height);\r\n    \r\n    context.restore();\r\n  }\r\n\r\n  drawCircle(context, x, y, radius, fillColor, borderColor) {\r\n    context.save();\r\n    \r\n    context.beginPath();\r\n    context.arc(x, y, Math.abs(radius), 0, 2 * Math.PI, false);\r\n    context.fillStyle = fillColor;\r\n    context.fill();\r\n    context.lineWidth = 1;\r\n    context.strokeStyle = borderColor;\r\n    context.stroke();\r\n    \r\n    context.restore();\r\n  }\r\n\r\n  drawNodeNumber(number, backgroundColor, x, y, textDistance, textAngle) {\r\n    var context = this.beltsCanvas.nativeElement.getContext('2d');\r\n    context.save();\r\n    \r\n    context.translate(x, y);\r\n\r\n    // Translate\r\n    var position = this.cad.rotate(0, 0, 0, textDistance + this.cad.version.iconsSize, -textAngle + 45);\r\n    x = position.x;\r\n    y = position.y;\r\n\r\n    context.translate(x, y);\r\n    context.rotate(-this.cad.version.rotation * Math.PI / 180);\r\n\r\n    var fontsize = Math.floor(this.cad.version.iconsSize / 2),\r\n        fontface = 'verdana',\r\n        lineHeight = fontsize * 1.286,\r\n        text = number,\r\n        padding = fontsize * 0.5,\r\n        minWidth = Math.floor(this.cad.version.iconsSize / 1.5);\r\n\r\n    context.font = fontsize + 'px ' + fontface;\r\n    var textWidth = context.measureText(text).width;\r\n\r\n    context.textAlign = 'left';\r\n    context.textBaseline = 'top';\r\n\r\n    context.fillStyle = backgroundColor;\r\n    if (textWidth < minWidth) context.fillRect(- minWidth / 2 - (padding * 2) / 2, - lineHeight / 2 - padding / 2, minWidth + (padding * 2), lineHeight + padding);\r\n    else context.fillRect(- textWidth / 2 - (padding * 2) / 2, - lineHeight / 2 - padding / 2, textWidth + (padding * 2), lineHeight + padding);\r\n\r\n    context.fillStyle = '#FFF';\r\n    if (textWidth < minWidth) context.fillText(text, - textWidth / 2, - lineHeight / 2);\r\n    else context.fillText(text, - textWidth / 2, - lineHeight / 2);\r\n    \r\n    context.restore();\r\n  }\r\n\r\n  drawDrawing() {\r\n    var context = this.drawingCanvas.nativeElement.getContext('2d');\r\n    context.clearRect(0, 0, this.drawingCanvas.nativeElement.width, this.drawingCanvas.nativeElement.height);\r\n    context.save();\r\n\r\n    context.translate(this.cad.translatePosition.x, this.cad.translatePosition.y);\r\n    context.rotate(this.cad.version.rotation * Math.PI / 180);\r\n    context.scale(this.cad.version.zoom, this.cad.version.zoom);\r\n\r\n    context.strokeStyle = 'rgba(255, 0, 0, 1)';\r\n\r\n    // Select pixels ratio\r\n    if (this.cad.tool == Tool.SELECT_PIXELS_RATIO) {\r\n      if (this.cad.startPixelsRatio && this.cad.endPixelsRatio) {\r\n        context.save();\r\n        context.moveTo(this.cad.startPixelsRatio.x, this.cad.startPixelsRatio.y);\r\n        context.lineTo(this.cad.endPixelsRatio.x, this.cad.endPixelsRatio.y);\r\n        context.stroke();\r\n        context.restore();\r\n      }\r\n\r\n      // Add points\r\n      if (this.cad.startPixelsRatio) this.drawCircle(context, this.cad.startPixelsRatio.x, this.cad.startPixelsRatio.y, 3, 'rgba(255, 0, 0, 1)', 'rgba(255, 0, 0, 1)');\r\n      if (this.cad.endPixelsRatio) this.drawCircle(context, this.cad.endPixelsRatio.x, this.cad.endPixelsRatio.y, 3, 'rgba(255, 0, 0, 1)', 'rgba(255, 0, 0, 1)');\r\n    }\r\n\r\n    // Draw drawing polygone path\r\n    else if (this.cad.drawPolyPath.length > 0) {\r\n      context.save();\r\n      this.cad.drawPolyPath.forEach((path, index) => {\r\n        if (index == 0 && this.cad.selectedNodes.length == 1) {\r\n          var parentNodePosition = this.cad.getPosition(this.cad.selectedNodes[0].lat, this.cad.selectedNodes[0].lng);\r\n          context.moveTo(parentNodePosition.x, parentNodePosition.y);\r\n          context.lineTo(path.x, path.y);\r\n        } else if (index == 0) context.moveTo(path.x, path.y);\r\n        else context.lineTo(path.x, path.y);\r\n      });\r\n      context.stroke();\r\n      context.restore();\r\n\r\n      // Add points\r\n      this.cad.drawPolyPath.forEach(path => {\r\n        this.drawCircle(context, path.x, path.y, 3, 'rgba(255, 0, 0, 1)', 'rgba(255, 0, 0, 1)');\r\n      });\r\n    }\r\n\r\n    context.restore();\r\n  }\r\n  \r\n  drawProtectedAreas() {\r\n    var context = this.protectedAreasCanvas.nativeElement.getContext('2d');\r\n    context.clearRect(0, 0, this.protectedAreasCanvas.nativeElement.width, this.protectedAreasCanvas.nativeElement.height);\r\n    context.save();\r\n\r\n    context.translate(this.cad.translatePosition.x, this.cad.translatePosition.y);\r\n    context.rotate(this.cad.version.rotation * Math.PI / 180);\r\n    context.scale(this.cad.version.zoom, this.cad.version.zoom);\r\n    if (this.cad.render) context.scale(this.cad.renderFactor, this.cad.renderFactor);\r\n    \r\n    // Draw protected area\r\n    this.cad.version.belts.forEach(belt => {\r\n      belt.protectedAreas.forEach(protectedArea => {\r\n        context.save();\r\n        context.beginPath();\r\n        \r\n        // Add points\r\n        protectedArea.points.forEach((point, index) => {\r\n          var pointPosition = this.cad.getPosition(point[0], point[1]);\r\n          if (index == 0) context.moveTo(pointPosition.x, pointPosition.y);\r\n          else context.lineTo(pointPosition.x, pointPosition.y);\r\n        });\r\n        \r\n        context.closePath();\r\n        if (this.cad.selectedProtectedArea != null && this.cad.selectedProtectedArea.id === protectedArea.id) context.strokeStyle = 'yellow';\r\n        context.fillStyle = context.createPattern(this.getPattern(protectedArea.width, protectedArea.color), 'repeat');\r\n        if (this.cad.selectedProtectedArea != null && this.cad.selectedProtectedArea.id === protectedArea.id) context.stroke();\r\n        context.rotate(-this.cad.version.rotation / 57.25);\r\n        context.fill();\r\n        context.restore();\r\n\r\n        // If selected add points\r\n        if (this.cad.selectedProtectedArea && this.cad.selectedProtectedArea.id === protectedArea.id) {\r\n          protectedArea.points.forEach(point => {\r\n            var pointPosition = this.cad.getPosition(point[0], point[1]);\r\n            this.drawCircle(context, pointPosition.x, pointPosition.y, 3, 'yellow', 'yellow');\r\n          });\r\n        }\r\n      });\r\n    });\r\n    \r\n    context.restore();\r\n  }\r\n\r\n  getPattern(width, color) {\r\n    var height = width / 2,\r\n        lineWidth1 = 4 * width / 200,\r\n        lineWidth2 = 2 * width / 200;\r\n\r\n    this.protectedAreasPatternCanvas.width = width;\r\n    this.protectedAreasPatternCanvas.height = height;\r\n\r\n    var x0 = width + (width / 2), x1 = - (width / 2),\r\n        y0 = - (height / 2), y1 = height + (height / 2),\r\n\r\n        offset = height / 8.14,\r\n        offset2 = height + height / 1.14,\r\n        offset3 = height + height;\r\n\r\n    var context = this.protectedAreasPatternCanvas.getContext('2d');\r\n    context.save();\r\n\r\n    context.translate(width / 2, height / 2);\r\n    context.strokeStyle = color;\r\n\r\n    context.lineWidth = lineWidth1;\r\n    context.beginPath();\r\n    context.translate(0.5,0.5);\r\n    context.moveTo(x0 - offset2 - width / 2, y0 - height / 2);\r\n    context.lineTo(x1 - offset2 - width / 2, y1 - height / 2);\r\n    context.stroke();\r\n    context.moveTo(x0 + offset2 - width / 2, y0 - height / 2);\r\n    context.lineTo(x1 + offset2 - width / 2, y1 - height / 2);\r\n    context.stroke();\r\n    context.moveTo(x0 - offset - width / 2, y0 - height / 2);\r\n    context.lineTo(x1 - offset - width / 2, y1 - height / 2);\r\n    context.stroke();\r\n    context.moveTo(x0 + offset - width / 2, y0 - height / 2);\r\n    context.lineTo(x1 + offset - width / 2, y1 - height / 2);\r\n    context.stroke();\r\n\r\n    context.lineWidth = lineWidth2;\r\n    context.moveTo(x0 - width / 2, y0 - height / 2);\r\n    context.lineTo(x1 - width / 2, y1 - height / 2);\r\n    context.stroke();\r\n\r\n    context.moveTo(x0 - offset3 - width / 2, y0 - height / 2);\r\n    context.lineTo(x1 - offset3 - width / 2, y1 - height / 2);\r\n    context.stroke();\r\n    context.moveTo(x0 + offset3 - width / 2, y0 - height / 2);\r\n    context.lineTo(x1 + offset3 - width / 2, y1 - height / 2);\r\n    context.stroke();\r\n\r\n    context.restore();\r\n\r\n    return this.protectedAreasPatternCanvas;\r\n  }\r\n\r\n  drawElectric() {\r\n    var context = this.electricCanvas.nativeElement.getContext('2d');\r\n    context.clearRect(0, 0, this.electricCanvas.nativeElement.width, this.electricCanvas.nativeElement.height);\r\n    context.save();\r\n\r\n    // Quality\r\n    context.webkitImageSmoothingEnabled = false;\r\n    context.mozImageSmoothingEnabled = false;\r\n    context.imageSmoothingEnabled = false;\r\n\r\n    context.translate(this.cad.translatePosition.x, this.cad.translatePosition.y);\r\n    context.rotate(this.cad.version.rotation * Math.PI / 180);\r\n    context.scale(this.cad.version.zoom, this.cad.version.zoom);\r\n    if (this.cad.render) context.scale(this.cad.renderFactor, this.cad.renderFactor);\r\n      \r\n    // Electrical part\r\n    this.cad.version.belts.forEach(belt => {\r\n      belt.electricalOutlets.forEach((electricalOutlet, electricalOutletIndex) => {\r\n        // Get position From LatLng\r\n        var electricalOutletPosition = this.cad.getPosition(electricalOutlet.lat, electricalOutlet.lng);\r\n        electricalOutlet.transformers.forEach((transformer, transformerIndex) => {\r\n          // Draw branches\r\n          if (this.cad.mode == Mode.ELECTRIC) {\r\n            transformer.electricalBranches.forEach((electricalBranch, electricalBranchIndex) => {\r\n              electricalBranch.electricalNodes.forEach((electricalNode, nodeIndex) => {\r\n                // Get node & position\r\n                var node = this.cad.version.getNode(electricalNode.nodeId),\r\n                    nodePosition = node != null ? this.cad.getPosition(node.lat, node.lng) : null;\r\n              \r\n                if (electricalBranchIndex == 0 && nodeIndex == 0) {\r\n                  // Draw line between transformer and first node\r\n                  var correctedElectricalOutletPosition = {\r\n                    x: electricalOutletPosition.x + (this.cad.version.iconsSize * 2 / 2) * Math.cos((transformer.angle) * Math.PI / 180),\r\n                    y: electricalOutletPosition.y + (this.cad.version.iconsSize * 2 / 2) * Math.sin((transformer.angle) * Math.PI / 180)\r\n                  };\r\n                  if (nodePosition != null) this.drawElectricalLine(correctedElectricalOutletPosition.x, correctedElectricalOutletPosition.y, nodePosition.x, nodePosition.y, '#F00', 1, []);\r\n                } else {\r\n                  // Get previous node\r\n                  var previousNode;\r\n                  if (electricalBranchIndex > 0 && nodeIndex == 0) previousNode = this.cad.version.getNode(electricalBranch.parentElectricalNode);\r\n                  else previousNode = this.cad.version.getNode(electricalBranch.electricalNodes[nodeIndex - 1].nodeId);\r\n                  \r\n                  // Draw line between node and previous node\r\n                  var previousNodePosition = previousNode != null ? this.cad.getPosition(previousNode.lat, previousNode.lng) : null;\r\n                  if (previousNodePosition != null) this.drawElectricalLine(previousNodePosition.x, previousNodePosition.y, nodePosition.x, nodePosition.y, '#F00', 1, []);\r\n                }\r\n              })\r\n            })\r\n          }\r\n          \r\n          // Draw transformer\r\n          if (this.cad.mode == Mode.ELECTRIC) this.drawTransformer(transformerIndex + 1, electricalOutletPosition.x, electricalOutletPosition.y, transformer.angle, this.cad.selectedTransformer != null && this.cad.selectedTransformer.id == transformer.id);\r\n        });\r\n        \r\n        // Draw electrical outlet\r\n        if (this.cad.selectedElectricalOutlet != null && this.cad.selectedTransformer == null && this.cad.selectedElectricalOutlet.id === electricalOutlet.id) {\r\n          this.drawElectricOutlet(electricalOutletIndex + 1, electricalOutletPosition.x, electricalOutletPosition.y, '#F00', 'yellow');\r\n        } else {\r\n          this.drawElectricOutlet(electricalOutletIndex + 1, electricalOutletPosition.x, electricalOutletPosition.y, '#F00', '#F00');\r\n        }\r\n      })\r\n    });\r\n    \r\n    context.restore();\r\n  }\r\n\r\n  drawElectricOutlet(number, x, y, fillColor, borderColor) {\r\n    var context = this.electricCanvas.nativeElement.getContext('2d');\r\n    context.save();\r\n    context.translate(x, y);\r\n    context.rotate(-this.cad.version.rotation * Math.PI / 180);\r\n    \r\n    var height = this.cad.version.iconsSize / 2,\r\n        text = number,\r\n        width = 0;\r\n    context.font = `${height * 1.25}px Arial`;\r\n    width = context.measureText(text).width;\r\n      \r\n    // Draw circle\r\n    context.beginPath();\r\n    context.arc(0, 0, width, 0, 2 * Math.PI, false);\r\n    context.fillStyle = fillColor;\r\n    context.fill();\r\n    context.lineWidth = 1;\r\n    context.strokeStyle = borderColor;\r\n    context.stroke();\r\n    \r\n    // Draw text\r\n    context.fillStyle = '#FFF';\r\n    context.fillText(text, 0 - width / 2, 0 + width / 1.5);\r\n    \r\n    context.restore();\r\n  }\r\n\r\n  drawTransformer(number, x, y, angle, selected) {\r\n    var context = this.electricCanvas.nativeElement.getContext('2d');\r\n    context.save();\r\n\r\n    context.translate(x, y);\r\n\r\n    // Translate\r\n    var textDistance = this.cad.version.iconsSize * 2;\r\n\r\n    x = 0 + (textDistance / 2) * Math.cos(angle * Math.PI / 180),\r\n    y = 0 + (textDistance / 2) * Math.sin(angle * Math.PI / 180);\r\n\r\n    context.translate(x, y);\r\n    context.rotate(- this.cad.version.rotation * Math.PI / 180);\r\n\r\n    var fontsize = Math.round(this.cad.version.iconsSize / 2),\r\n        fontface = 'verdana',\r\n        lineHeight = fontsize * 1.286,\r\n        text = number,\r\n        padding = fontsize * 0.5,\r\n        backgroundColor = '#F09414',\r\n        borderColor = selected ? 'yellow' : backgroundColor,\r\n        border = 2;\r\n\r\n    context.font = fontsize + 'px ' + fontface;\r\n    var textWidth = context.measureText(text).width;\r\n\r\n    context.textAlign = 'left';\r\n    context.textBaseline = 'top';\r\n\r\n    context.fillStyle = borderColor;\r\n    context.fillRect(- textWidth / 2 - padding / 2, - lineHeight / 2 - (padding * 1.5) / 2, textWidth + padding, lineHeight + (padding * 1.5));\r\n    \r\n    context.fillStyle = backgroundColor;\r\n    context.fillRect(- textWidth / 2 - padding / 2 + border / 2, - lineHeight / 2 - (padding * 1.5) / 2 + border / 2, textWidth + padding - border, lineHeight + (padding * 1.5) - border);\r\n\r\n    context.fillStyle = '#FFF';\r\n    context.fillText(text, - textWidth / 2, - lineHeight / 2);\r\n    \r\n    context.restore();\r\n  }\r\n  \r\n  drawElectricalLine(x1, y1, x2, y2, lineColor, lineWidth, lineDash) {\r\n    var context = this.electricCanvas.nativeElement.getContext('2d');  \r\n    context.save();\r\n      \r\n    context.beginPath();\r\n    context.setLineDash(lineDash);\r\n    context.moveTo(x1, y1);\r\n    context.lineTo(x2, y2);\r\n    context.strokeStyle = lineColor;\r\n    context.lineWidth = lineWidth;\r\n    context.stroke();\r\n    \r\n    context.restore();\r\n  }\r\n\r\n\r\n  /* Other functions */\r\n  getClickPosition(e) {\r\n    var rect = this.backgroundImageCanvas.nativeElement.getBoundingClientRect();\r\n    \r\n    return {\r\n      x: ((e.clientX - rect.left) - this.cad.translatePosition.x) / this.cad.version.zoom,\r\n      y: ((e.clientY - rect.top)- this.cad.translatePosition.y) / this.cad.version.zoom\r\n    }\r\n  }\r\n}","import { Branch } from \"./branch\";\r\nimport { ProtectedArea } from \"./protectedArea\";\r\nimport { ElectricalOutlet } from \"./electricalOutlet\";\r\n\r\nexport class Belt {\r\n  id:           string = '';\r\n  name:         string = '';\r\n  trapsNumber:  number = 0;\r\n\r\n  pressureCalculated: number = 0;\r\n\tpressureInt1:       number = 0;\r\n\tpressureInt2:       number = 0;\r\n\tpressureInt3:       number = 0;\r\n\tpressureInt4:       number = 0;\r\n\tpressureInt5:       number = 0;\r\n\tpressureInt6:       number = 0;\r\n\tpressureInt7:       number = 0;\r\n\tpressureInt8:       number = 0;\r\n\tpressureInt9:       number = 0;\r\n\tflowTheoretical:    number = 0;\r\n  flowCumulated:      number = 0;\r\n  \r\n  controlSheltered:   boolean = false;\r\n\ttrapsColor:         TrapsColor = TrapsColor.WOOD;\r\n\tbottleType:         BottleType = BottleType.B10;\r\n\tbottleNumberB1:     number = 0;\r\n\tbottleNumberB2:     number = 0;\r\n\tco2KgPrice:         number = 0;\r\n  co2MonthRentPrice:  number = 0;\r\n  \r\n  electricalOutlets:  ElectricalOutlet[]  = [];\r\n  branches:           Branch[]            = [];\r\n  protectedAreas:     ProtectedArea[]     = [];\r\n\r\n  constructor(id: string = '', name: string = '') {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n\r\n  static loadFromJSON(json): Belt {\r\n    var belt = Object.assign(new Belt, json);\r\n\r\n    if (json.branches) {\r\n      belt.branches = [];\r\n      json.branches.forEach(jsonBranch => { belt.branches.push(Branch.loadFromJSON(jsonBranch)) });\r\n    }\r\n\r\n    if (json.electricalOutlets) {\r\n      belt.electricalOutlets = [];\r\n      json.electricalOutlets.forEach(jsonElectricalOutlet => { belt.electricalOutlets.push(ElectricalOutlet.loadFromJSON(jsonElectricalOutlet)) });\r\n    }\r\n\r\n    if (json.protectedAreas) {\r\n      belt.protectedAreas = [];\r\n      json.protectedAreas.forEach(jsonProtectedArea => { belt.protectedAreas.push(ProtectedArea.loadFromJSON(jsonProtectedArea)) });\r\n    }\r\n\r\n    return belt;\r\n  }\r\n\r\n  resetCalculationValues() {\r\n\t\tthis.flowCumulated = 0;\r\n    this.flowTheoretical = 0;\r\n    this.pressureCalculated = 0;\r\n    this.pressureInt1 = 0;\r\n    this.pressureInt2 = 0;\r\n    this.pressureInt3 = 0;\r\n    this.pressureInt4 = 0;\r\n    this.pressureInt5 = 0;\r\n    this.pressureInt6 = 0;\r\n    this.pressureInt7 = 0;\r\n    this.pressureInt8 = 0;\r\n    this.pressureInt9 = 0;\r\n\t}\r\n}\r\n\r\nexport enum TrapsColor {\r\n  WOOD = 'WOOD',\r\n  GREEN = 'GREEN',\r\n  BROWN = 'BROWN'\r\n}\r\n\r\nexport enum BottleType {\r\n  B10 = 'B10',\r\n  B20 = 'B20',\r\n  B34 = 'B34',\r\n  B37 = 'B37',\r\n  B50LB = 'B50LB',\r\n  R100 = 'R100',\r\n  R180 = 'R180'\r\n}","import { Node } from './node';\r\n\r\nexport class Branch {\r\n  id: string = '';\r\n  width: number = 3;\r\n\tcolor: string = '#0A4A14';\r\n\tnumbersColor: string = '#0A4A14';\r\n\tsuffix: string = '';\r\n\ttubeDiameter: number = 6;\r\n  \r\n  parentBranch: string;\r\n  parentNode: string;\r\n  \r\n  nodes: Node[] = [];\r\n  \r\n  // Calculations only\r\n  flowCumulated: number = 0;\r\n\ttrapsNumber: number = 0;\r\n\tnodesNumber: number = 0;\r\n\r\n  static loadFromJSON(json): Branch {\r\n\t\tvar branch = Object.assign(new Branch, json);\r\n\t\t\r\n\t\tif (json.nodes) {\r\n\t\t\tbranch.nodes = [];\r\n\t\t\tjson.nodes.forEach(jsonNode => { branch.nodes.push(Node.loadFromJSON(jsonNode)) });\r\n\t\t}\r\n\t\t\r\n    return branch;\r\n  }\r\n}","import { Project } from \"./project\";\r\nimport { Version } from \"./version\";\r\nimport { Belt, TrapsColor, BottleType } from \"./belt\";\r\nimport { Branch } from \"./branch\";\r\nimport { Node, NodeType } from \"./node\";\r\nimport { ElectricalOutlet } from \"./electricalOutlet\";\r\nimport { Transformer } from \"./transformer\";\r\nimport { ProtectedArea } from \"./protectedArea\";\r\nimport { UUID } from \"angular2-uuid\";\r\nimport { Calculations } from \"./calculations\";\r\n\r\nexport class CAD {\r\n  project: Project;\r\n  version: Version;\r\n\r\n  tool: Tool;\r\n  mode: Mode = Mode.ALL;\r\n\r\n  googleMapsParams: any = { width: 640, height: 640, scale: 2 };\r\n\r\n  // Context menu\r\n  contextMenuLeft: number = 0;\r\n  contextMenuTop: number = 0;\r\n  showContextMenu: boolean = false;\r\n\r\n  // Diffusions\r\n  showDiffusionParameters: boolean = false;\r\n\r\n  // Image\r\n  dowloadImage: boolean = false;\r\n\r\n  // Selection\r\n  selectedBelt: Belt;\r\n  selectedBranch: Branch;\r\n  selectedNodes: Node[] = [];\r\n  selectedElectricalOutlet: ElectricalOutlet;\r\n  selectedTransformer: Transformer;\r\n  selectedProtectedArea: ProtectedArea;\r\n  selectedProtectedAreaPointIndex: number;\r\n\r\n  // Branch edition tool\r\n  drawDistance: number = 5.5;\r\n  drawPolyPath: any[] = [];\r\n\r\n  // Canvas\r\n  render: boolean = false;\r\n  renderFactor: number = 3;\r\n  translatePosition: any = { x: 0, y: 0 };\r\n  startDragOffset: any = { x: 0, y: 0 };\r\n\r\n  // Select pixels ratio\r\n  startPixelsRatio;\r\n  endPixelsRatio;\r\n  metersPixelsRatio = 5;\r\n\r\n  constructor(project: Project, version: Version) {\r\n    this.project = project;\r\n    this.version = version;\r\n  }\r\n\r\n  /* Selection */\r\n  selectBelt(id: string) {\r\n    var belt = this.version.getBelt(id);\r\n\r\n    if (belt) {\r\n      // CO2\r\n      this.selectedBelt = belt;\r\n      this.selectedBranch = null;\r\n      this.selectedNodes = [];\r\n          \r\n      // Electric\r\n      this.selectedElectricalOutlet = null;\r\n      this.selectedTransformer = null;\r\n    }\r\n\r\n    document.dispatchEvent(new Event('CADSelectionChanged'));\r\n  }\r\n  unSelectBelt() {\r\n    // CO2\r\n    this.selectedNodes = [];\r\n    this.selectedBranch = null;\r\n    this.selectedBelt = null;\r\n    \r\n    // Electric\r\n    this.selectedElectricalOutlet = null;\r\n    this.selectedTransformer = null;\r\n    \r\n    // Protected area\r\n    this.selectedProtectedArea = null;\r\n\r\n    document.dispatchEvent(new Event('CADSelectionChanged'));\r\n  }\r\n  selectBranch(id: string) {\r\n    var branch = this.version.getBranch(id),\r\n        belt = this.version.getBeltFromBranch(id);\r\n\r\n    if (branch && belt) {\r\n      this.selectedBelt = belt;\r\n      this.selectedBranch = branch;\r\n      this.selectedNodes = [];\r\n    }\r\n\r\n    document.dispatchEvent(new Event('CADSelectionChanged'));\r\n  }\r\n  unSelectBranch() {\r\n    this.selectedNodes = [];\r\n    this.selectedBranch = null;\r\n    document.dispatchEvent(new Event('CADSelectionChanged'));\r\n  }\r\n  selectNode(id: string, ctrl: boolean) {\r\n    var node = this.version.getNode(id);\r\n\r\n    if (node) {\r\n      if (ctrl) {\r\n        // Check if node already selected\r\n        if (!this.selectedBelt) {\r\n          this.selectNode(id, false);\r\n          return;\r\n        }\r\n\r\n        // Check belt\r\n        var branch = this.version.getBranchFromNode(id),\r\n            belt = this.version.getBeltFromBranch(branch.id);\r\n        \r\n        if (this.selectedBelt.id === belt.id) {\r\n          if (this.selectedNodes.findIndex(n => n.id === id) == -1)\r\n            this.selectedNodes.push(node);\r\n          else\r\n            this.selectedNodes.splice(this.selectedNodes.findIndex(n => n.id === id), 1);\r\n        } else {\r\n          this.selectedNodes = [];\r\n          this.selectNode(id, false);\r\n        }\r\n      } else {\r\n        var branch = this.version.getBranchFromNode(id),\r\n            belt = this.version.getBeltFromBranch(branch.id);\r\n        this.selectedBelt = belt;\r\n        this.selectedBranch = branch;\r\n        this.selectedNodes = [];\r\n        this.selectedNodes.push(node);\r\n      }\r\n    }\r\n\r\n    // Check electricalOutlet\r\n    if (this.selectedElectricalOutlet && this.version.getBeltFromElectricalOutlet(this.selectedElectricalOutlet.id) !== this.selectedBelt) {\r\n      this.unSelectElectricalOutlet();\r\n    }\r\n\r\n    document.dispatchEvent(new Event('CADSelectionChanged'));\r\n  }\r\n  unSelectNode() {\r\n    this.selectedNodes = [];\r\n    document.dispatchEvent(new Event('CADSelectionChanged'));\r\n  }\r\n  selectElectricalOutlet(id: string) {\r\n    var electricalOutlet = this.version.getElectricalOutlet(id),\r\n        belt = this.version.getBeltFromElectricalOutlet(id);\r\n    \r\n    if (electricalOutlet && belt) {\r\n      this.selectedBelt = belt;\r\n      this.selectedElectricalOutlet = electricalOutlet;\r\n      this.selectedTransformer = null;\r\n      this.selectedProtectedArea = null;\r\n    }\r\n\r\n    document.dispatchEvent(new Event('CADSelectionChanged'));\r\n  }\r\n  unSelectElectricalOutlet() {\r\n    this.selectedElectricalOutlet = null;\r\n    this.selectedTransformer = null;\r\n    document.dispatchEvent(new Event('CADSelectionChanged'));\r\n  }\r\n  selectTransformer(id: string) {\r\n    var transformer = this.version.getTransformer(id),\r\n        electricalOutlet = this.version.getElectricalOutletFromTransformer(id),\r\n        belt = this.version.getBeltFromElectricalOutlet(electricalOutlet.id);\r\n\r\n    if (transformer && electricalOutlet && belt) {\r\n      this.selectedBelt = belt;\r\n      this.selectedElectricalOutlet = electricalOutlet;\r\n      this.selectedTransformer = transformer;\r\n      this.selectedProtectedArea = null;\r\n    }\r\n\r\n    document.dispatchEvent(new Event('CADSelectionChanged'));\r\n  }\r\n  unSelectTransformer() {\r\n    this.selectedTransformer = null;\r\n    document.dispatchEvent(new Event('CADSelectionChanged'));\r\n  }\r\n  selectProtectedArea(id: string) {\r\n    var protectedArea = this.version.getProtectedArea(id),\r\n        belt = this.version.getBeltFromProtectedArea(id);\r\n\r\n    if (protectedArea && belt) {\r\n      this.selectedBelt = belt;\r\n      this.selectedBranch = null;\r\n      this.selectedNodes = [];\r\n      this.selectedElectricalOutlet = null;\r\n      this.selectedTransformer = null;\r\n\r\n      this.selectedProtectedArea = protectedArea;\r\n    }\r\n\r\n    document.dispatchEvent(new Event('CADSelectionChanged'));\r\n  }\r\n  unSelectProtectedArea() {\r\n    this.selectedProtectedArea = null;\r\n    this.selectedProtectedAreaPointIndex = null;\r\n    document.dispatchEvent(new Event('CADSelectionChanged'));\r\n  }\r\n\r\n  /* Zoom & Rotation */\r\n  setZoom(zoom: number) {\r\n    this.version.zoom = zoom;\r\n    document.dispatchEvent(new Event('CADZoomChanged'));\r\n  }\r\n  setRotation(rotation: number) {\r\n    this.version.rotation = Math.round(rotation);\r\n    document.dispatchEvent(new Event('CADRotationChanged'));\r\n  }\r\n\r\n  /* MapType, Tool & Mode */\r\n  setMapType(mapType: string) {\r\n    this.version.mapType = mapType;\r\n    document.dispatchEvent(new Event('CADMapTypeChanged'));\r\n  }\r\n  setTool(tool: Tool) {\r\n    this.tool = tool;\r\n    document.dispatchEvent(new Event('CADToolChanged'));\r\n  }\r\n  setMode(mode: string) {\r\n    this.mode = <Mode>Mode[mode];\r\n    document.dispatchEvent(new Event('CADModeChanged'));\r\n  }\r\n\r\n  /* Opacity & Icons Size */\r\n  setOpacity(opacity) {\r\n    if (!isNaN(parseInt(opacity))) {\r\n      this.version.mapOpacity = parseInt(opacity);\r\n      document.dispatchEvent(new Event('CADOpacityChanged'));\r\n    }\r\n  }\r\n  setIconsSize(iconsSize) {\r\n    if (!isNaN(parseInt(iconsSize))) {\r\n      this.version.iconsSize = parseInt(iconsSize);\r\n      document.dispatchEvent(new Event('CADIconsSizeChanged'));\r\n    }\r\n  }\r\n\r\n  /* Validate & Abort */\r\n  validate() {\r\n\r\n    // Draw\r\n    if (this.tool == Tool.DRAW) {\r\n      // 1. Split lines to get all points possibilities\r\n      var points = [];\r\n      if (this.drawPolyPath.length > 0 && this.selectedNodes.length == 1 && this.version.getNodeNumberOfChild(this.selectedNodes[0].id) < 2) {\r\n        var selectedNodePosition = this.getPosition(this.selectedNodes[0].lat, this.selectedNodes[0].lng);\r\n        this.splitLine(\r\n          selectedNodePosition,\r\n          this.drawPolyPath[0],\r\n          this.distance(selectedNodePosition.x, selectedNodePosition.y, this.drawPolyPath[0].x, this.drawPolyPath[0].y)\r\n        ).forEach(point => { points.push(point) });\r\n      }\r\n      this.drawPolyPath.forEach((path, index) => {\r\n        if (index + 1 < this.drawPolyPath.length) {\r\n          var nextPath = this.drawPolyPath[index + 1];\r\n          this.splitLine(path, this.drawPolyPath[index + 1], this.distance(path.x, path.y, nextPath.x, nextPath.y)).forEach(point => { points.push(point) });\r\n        }\r\n      });\r\n\r\n      // Convert path to branch\r\n      // 2. Belt has no branches\r\n      if (this.selectedBelt.branches.length == 0) {\r\n        // 2.1 Create a new branch\r\n        var branch = new Branch();\r\n        branch.id = UUID.UUID();\r\n        this.selectedBelt.branches.push(branch);\r\n\r\n        // 2.2 Determine traps positions\r\n        var distance = this.drawDistance,\r\n            prevTrap: Node;\r\n        for (var i = 0; i < points.length; i++) {\r\n            var position = this.getCoordinates(points[i].x, points[i].y),\r\n                prevTrapDistance = 0;\r\n\r\n            // Get distance beetwen previous trap\r\n            if (prevTrap) prevTrapDistance = this.getDistance({ lat: prevTrap.lat, lng: prevTrap.lng }, position);\r\n\r\n            // Increment distance beetween this & previous\r\n            if (i > 0) distance += this.getDistance(position, this.getCoordinates(points[i - 1].x, points[i - 1].y));\r\n\r\n            if ((!prevTrap && distance >= this.drawDistance) || prevTrapDistance >= this.drawDistance) {\r\n              // Add\r\n              var node = new Node();\r\n              node.id = UUID.UUID();\r\n              node.nodeType = prevTrap ? NodeType.HEXAGONAL_TRAP : NodeType.CONTROL;\r\n              node.prevDistance = i == 0 ? 0 : distance;\r\n              node.lat = position.lat;\r\n              node.lng = position.lng;\r\n              branch.nodes.push(node);\r\n\r\n              // Angle calculation\r\n              if (i > 0) node.textAngle = this.angleCalculation({ x: points[i].x, y: points[i].y }, { x: points[i - 1].x, y: points[i - 1].y });\r\n\r\n              prevTrap = node;\r\n              distance = 0;\r\n            }\r\n        }\r\n\r\n        // 2.3 Check if branch has nodes\r\n        if (branch.nodes.length == 0) this.version.delBranch(branch.id);\r\n      }\r\n\r\n\r\n      // 3. Selected node & node children < 2\r\n      if (this.selectedNodes.length == 1 && this.version.getNodeNumberOfChild(this.selectedNodes[0].id) < 2) {\r\n        // Get node index\r\n        var nodeIndex = this.version.getNodeIndex(this.selectedNodes[0].id),\r\n            nodesLength = this.selectedBranch.nodes.length;\r\n\r\n        // 3.1 Last node of his branch\r\n        if (nodeIndex == nodesLength - 1) {\r\n          // 3.1.1 Distance between selected node & first point of the path\r\n          var distance = this.getDistance({\r\n            lat: this.selectedNodes[0].lat,\r\n            lng: this.selectedNodes[0].lng\r\n          }, this.getCoordinates(points[0].x, points[0].y)),\r\n          prevTrap: Node;\r\n\r\n          // 3.1.2 Add nodes\r\n          for (var i = 0; i < points.length; i++) {\r\n            var position = this.getCoordinates(points[i].x, points[i].y),\r\n                prevTrapDistance = 0;\r\n\r\n            // Get distance beetwen previous trap\r\n            if (prevTrap) prevTrapDistance = this.getDistance({ lat: prevTrap.lat, lng: prevTrap.lng }, position);\r\n            \r\n            // Increment distance between this & previous\r\n            if (i > 0) distance += this.getDistance(position, this.getCoordinates(points[i - 1].x, points[i - 1].y));\r\n\r\n            if ((!prevTrap && distance >= this.drawDistance) || prevTrapDistance >= this.drawDistance) {\r\n              // Get distance between last node\r\n              if (i == 0) {\r\n                var lastNode = this.selectedBranch.nodes[this.selectedBranch.nodes.length - 1],\r\n                    prevNodeDistance = this.getDistance(position, {lat: lastNode.lat, lng: lastNode.lng});\r\n                    \r\n                // Add\r\n                var node = new Node();\r\n                node.id = UUID.UUID();\r\n                node.prevDistance = prevNodeDistance;\r\n                node.lat = position.lat;\r\n                node.lng = position.lng;\r\n\r\n                // Angle calculation\r\n                if (i > 0) node.textAngle = this.angleCalculation({ x: points[i].x, y: points[i].y }, { x: points[i - 1].x, y: points[i - 1].y });\r\n\r\n                this.selectedBranch.nodes.push(node);\r\n              } else {\r\n                // Add\r\n                var node = new Node();\r\n                node.id = UUID.UUID();\r\n                node.prevDistance = distance;\r\n                node.lat = position.lat;\r\n                node.lng = position.lng;\r\n\r\n                // Angle calculation\r\n                if (i > 0) node.textAngle = this.angleCalculation({ x: points[i].x, y: points[i].y }, { x: points[i - 1].x, y: points[i - 1].y });\r\n\r\n                this.selectedBranch.nodes.push(node);\r\n              }\r\n              prevTrap = node;\r\n              distance = 0;\r\n            }\r\n          }\r\n        }\r\n\r\n        // 3.2 Not last node of his branch\r\n        else {\r\n          // Create a new branch\r\n          var branch = new Branch();\r\n          branch.id = UUID.UUID();\r\n          this.selectedBelt.branches.push(branch);\r\n\r\n          // Set parentBranch & parentNode\r\n          branch.parentBranch = this.selectedBranch.id;\r\n          branch.parentNode = this.selectedNodes[0].id;\r\n          \r\n          // Distance between selected node & first point of the path\r\n          var distance = this.getDistance({ lat: this.selectedNodes[0].lat, lng: this.selectedNodes[0].lng }, this.getCoordinates(points[0].x, points[0].y)),\r\n              prevTrap: Node;\r\n          \r\n          // Add nodes\r\n          for (var i = 0; i < points.length; i++) {\r\n            var position = this.getCoordinates(points[i].x, points[i].y),\r\n                prevTrapDistance = 0;\r\n\r\n            // Get distance beetwen previous trap\r\n            if (prevTrap) prevTrapDistance = this.getDistance({ lat: prevTrap.lat, lng: prevTrap.lng }, position);\r\n            \r\n            // Increment distance betwen this & previous\r\n            if (i > 0) distance += this.getDistance(position, this.getCoordinates(points[i - 1].x, points[i - 1].y));\r\n            \r\n            if ((!prevTrap && distance >= this.drawDistance) || prevTrapDistance >= this.drawDistance) {\r\n              // Get distance between last node\r\n              if (i == 0) {\r\n                var prevNodeDistance = this.getDistance(position, { lat: this.selectedNodes[0].lat, lng: this.selectedNodes[0].lng });\r\n                \r\n                // Add\r\n                var node = new Node();\r\n                node.id = UUID.UUID();\r\n                node.prevDistance = prevNodeDistance;\r\n                node.lat = position.lat;\r\n                node.lng = position.lng;\r\n\r\n                // Angle calculation\r\n                if (i > 0) node.textAngle = this.angleCalculation({ x: points[i].x, y: points[i].y }, { x: points[i - 1].x, y: points[i - 1].y });\r\n\r\n                branch.nodes.push(node);\r\n              } else {\r\n                // Add\r\n                var node = new Node();\r\n                node.id = UUID.UUID();\r\n                node.prevDistance = distance;\r\n                node.lat = position.lat;\r\n                node.lng = position.lng;\r\n\r\n                // Angle calculation\r\n                if (i > 0) node.textAngle = this.angleCalculation({ x: points[i].x, y: points[i].y }, { x: points[i - 1].x, y: points[i - 1].y });\r\n\r\n                branch.nodes.push(node);\r\n              }\r\n              prevTrap = node;\r\n              distance = 0;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      this.drawPolyPath = [];\r\n      this.setTool(null);\r\n      this.unSelectNode();\r\n      document.dispatchEvent(new Event('CADDrawChanged'));\r\n    }\r\n\r\n    // Select pixels ratio\r\n    else if (this.tool == Tool.SELECT_PIXELS_RATIO) {\r\n      if (this.startPixelsRatio && this.endPixelsRatio && !isNaN(this.metersPixelsRatio)) {\r\n        this.project.customPictureRatio = this.distance(\r\n          this.startPixelsRatio.x, this.startPixelsRatio.y,\r\n          this.endPixelsRatio.x, this.endPixelsRatio.y\r\n        ) / this.metersPixelsRatio;\r\n        this.setTool(null);\r\n      }\r\n    }\r\n\r\n  }\r\n  abort() {\r\n    this.drawPolyPath = [];\r\n    this.setTool(null);\r\n    document.dispatchEvent(new Event('CADDrawChanged'));\r\n  }\r\n  trapsRecalculations() {\r\n    // 1. Get branch\r\n    var branch = this.version.getBranchFromNode(this.selectedNodes[0].id);\r\n\r\n\r\n    // 2. Get firstNode & lastNode\r\n    var firstNode: Node, lastNode: Node;\r\n    if (this.version.getNodeIndex(this.selectedNodes[0].id) < this.version.getNodeIndex(this.selectedNodes[1].id)) firstNode = this.selectedNodes[0], lastNode = this.selectedNodes[1];\r\n    else firstNode = this.selectedNodes[1], lastNode = this.selectedNodes[0];\r\n\r\n\r\n    // 3. Get firstNodeIndex & lastNodeIndex\r\n    var firstNodeIndex = this.version.getNodeIndex(firstNode.id),\r\n        lastNodeIndex = this.version.getNodeIndex(lastNode.id);\r\n\r\n\r\n    // 4. Convert branch to path\r\n    var path: any[] = [];\r\n    path.push(this.getPosition(firstNode.lat, firstNode.lng));\r\n    for (var i = firstNodeIndex + 1; i < lastNodeIndex; i++) {\r\n      // TODO: Check if angle between prev, this & next != 180 before add to path\r\n      path.push(this.getPosition(branch.nodes[i].lat, branch.nodes[i].lng));\r\n    }\r\n    path.push(this.getPosition(lastNode.lat, lastNode.lng));\r\n\r\n    // 5. Delete all nodes\r\n    this.version.delNodeFromElectricalBranch(firstNode.id);\r\n    branch.nodes.splice(firstNodeIndex + 1, lastNodeIndex - firstNodeIndex);\r\n\r\n\r\n    // 5. Split lines to get all points possibilities\r\n    var points = [];\r\n    path.forEach((p, index) => {\r\n      if (index + 1 < path.length) {\r\n        var nextPath = path[index + 1];\r\n        this.splitLine(p, path[index + 1], this.distance(p.x, p.y, nextPath.x, nextPath.y)).forEach(point => { points.push(point) });\r\n      }\r\n    });\r\n\r\n\r\n    // 6. Add nodes\r\n    var distance = 0, prevTrap: Node = firstNode;\r\n    for (var i = 0; i < points.length; i++) {\r\n      var position = this.getCoordinates(points[i].x, points[i].y),\r\n          prevTrapDistance = 0;\r\n\r\n      // Get distance beetwen previous trap\r\n      prevTrapDistance = this.getDistance({ lat: prevTrap.lat, lng: prevTrap.lng }, position);\r\n      \r\n      // Increment distance between this & previous\r\n      if (i > 0) distance += this.getDistance(position, this.getCoordinates(points[i - 1].x, points[i - 1].y));\r\n\r\n      if (prevTrapDistance >= this.drawDistance) {\r\n        // Add\r\n        var node = new Node();\r\n        node.id = UUID.UUID();\r\n        node.prevDistance = distance;\r\n        node.lat = position.lat;\r\n        node.lng = position.lng;\r\n\r\n        // Angle calculation\r\n        if (i > 0) node.textAngle = this.angleCalculation({ x: points[i].x, y: points[i].y }, { x: points[i - 1].x, y: points[i - 1].y });\r\n\r\n        branch.nodes.splice(this.version.getNodeIndex(prevTrap.id) + 1, 0, node);\r\n        prevTrap = node;\r\n        distance = 0;\r\n      }\r\n    }\r\n\r\n    this.unSelectNode();\r\n    document.dispatchEvent(new Event('CADBeltChanged'));\r\n  }\r\n  selectParentNode() {\r\n    this.setTool(Tool.SELECT_PARENT_NODE);\r\n  }\r\n\r\n\r\n  /* Setters */\r\n  setSelectedBeltTrapsColor(trapsColor: TrapsColor) {\r\n    this.selectedBelt.trapsColor = trapsColor;\r\n    document.dispatchEvent(new Event('CADBeltChanged'));\r\n  }\r\n  setSelectedBeltName(name: string) {\r\n    this.selectedBelt.name = name;\r\n  }\r\n  setSelectedBeltBottleType(bottleType: BottleType) {\r\n    this.selectedBelt.bottleType = bottleType;\r\n\r\n    // Set prices default values\r\n    if (bottleType == BottleType.R100 || bottleType == BottleType.R180) {\r\n      this.selectedBelt.co2KgPrice = 4.04;\r\n      this.selectedBelt.co2MonthRentPrice = 60;\r\n    } else {\r\n      this.selectedBelt.co2KgPrice = 5.43;\r\n      this.selectedBelt.co2MonthRentPrice = 4;\r\n    }\r\n  }\r\n  setSelectedBeltCo2KgPrice(co2KgPrice: number) {\r\n    if (!isNaN(co2KgPrice) && co2KgPrice > -1) {\r\n      this.selectedBelt.co2KgPrice = co2KgPrice;\r\n    }\r\n  }\r\n  setSelectedBeltCo2MonthRentPrice(co2MonthRentPrice: number) {\r\n    if (!isNaN(co2MonthRentPrice) && co2MonthRentPrice > -1) {\r\n      this.selectedBelt.co2MonthRentPrice = co2MonthRentPrice;\r\n    }\r\n  }\r\n  setSelectedBeltControlSheltered(controlSheltered: boolean) {\r\n    this.selectedBelt.controlSheltered = controlSheltered;\r\n    document.dispatchEvent(new Event('CADBeltChanged'));\r\n  }\r\n  setSelectedBranchWidth(width: number) {\r\n    if (!isNaN(width) && width > -1) {\r\n      this.selectedBranch.width = width;\r\n      document.dispatchEvent(new Event('CADBeltChanged'));\r\n    }\r\n  }\r\n  setSelectedBranchColor(color: string) {\r\n    this.selectedBranch.color = color;\r\n    document.dispatchEvent(new Event('CADBeltChanged'));\r\n  }\r\n  setSelectedBranchNumbersColor(numbersColor: string) {\r\n    this.selectedBranch.numbersColor = numbersColor;\r\n    document.dispatchEvent(new Event('CADBeltChanged'));\r\n  }\r\n  setSelectedBranchSuffix(suffix: string) {\r\n    this.selectedBranch.suffix = suffix;\r\n    document.dispatchEvent(new Event('CADBeltChanged'));\r\n  }\r\n  setSelectedBranchTubeDiameter(tubeDiameter: number) {\r\n    if (!isNaN(tubeDiameter) && tubeDiameter > -1) {\r\n      this.selectedBranch.tubeDiameter = parseInt(tubeDiameter.toString());\r\n      document.dispatchEvent(new Event('CADBeltChanged'));\r\n    }\r\n  }\r\n  setSelectedBranchParentNode(id: string) {\r\n    // Get node\r\n    var node = this.version.getNode(id),\r\n        nodeBranch = this.version.getBranchFromNode(id);\r\n\r\n    // Check if node & nodeBranch exists\r\n    if (!node || !nodeBranch) return;\r\n\r\n    // Check if belt is the one selected\r\n    var belt = this.version.getBeltFromBranch(nodeBranch.id);\r\n    if (!belt || belt.id !== this.selectedBelt.id) return;\r\n\r\n    // Check if nodeBranch isn't the selectedBranch\r\n    if (nodeBranch.id === this.selectedBranch.id) return;\r\n\r\n    // Check node number of child\r\n    if (this.version.getNodeNumberOfChild(id) == 2) return;\r\n\r\n    // Set node as parentNode\r\n    this.selectedBranch.parentBranch = nodeBranch.id;\r\n    this.selectedBranch.parentNode = node.id;\r\n\r\n    // Update distance\r\n    this.selectedNodes[0].prevDistance = this.getDistance(\r\n      { lat: this.selectedNodes[0].lat, lng: this.selectedNodes[0].lng },\r\n      { lat: node.lat, lng: node.lng }\r\n    );\r\n    \r\n    this.selectNode(node.id, true);\r\n    this.setTool(null);\r\n    document.dispatchEvent(new Event('CADBeltChanged'));\r\n  }\r\n  setSelectedNodeTextAngle(textAngle: number) {\r\n    if (!isNaN(textAngle) && textAngle > -1) {\r\n      this.selectedNodes[0].textAngle = textAngle;\r\n      document.dispatchEvent(new Event('CADBeltChanged'));\r\n    }\r\n  }\r\n  setSelectedNodeTextDistance(textDistance: number) {\r\n    if (!isNaN(textDistance) && textDistance > -1) {\r\n      this.selectedNodes[0].textDistance = parseFloat(textDistance.toString());\r\n      document.dispatchEvent(new Event('CADBeltChanged'));\r\n    }\r\n  }\r\n  setSelectedNodeType(nodeType: NodeType) {\r\n    this.selectedNodes[0].nodeType = nodeType;\r\n    document.dispatchEvent(new Event('CADBeltChanged'));\r\n  }\r\n  setSelectedNodePrevLinkBuried(prevLinkBuried: boolean) {\r\n    this.selectedNodes[0].prevLinkBuried = prevLinkBuried;\r\n    document.dispatchEvent(new Event('CADBeltChanged'));\r\n  }\r\n  setSelectedNodesTextAngle(textAngle: number) {\r\n    if (!isNaN(textAngle) && textAngle > -1) {\r\n      this.selectedNodes.forEach(node => { node.textAngle = textAngle });\r\n      document.dispatchEvent(new Event('CADBeltChanged'));\r\n    }\r\n  }\r\n  setSelectedNodesTextDistance(textDistance: number) {\r\n    if (!isNaN(textDistance) && textDistance > -1) {\r\n      this.selectedNodes.forEach(node => { node.textDistance = parseFloat(textDistance.toString()) });\r\n      document.dispatchEvent(new Event('CADBeltChanged'));\r\n    }\r\n  }\r\n  setSelectedNodesNodeType(nodeType: NodeType) {\r\n    this.selectedNodes.forEach(node => {\r\n      if (node.nodeType != NodeType.CONTROL)\r\n        node.nodeType = nodeType;\r\n    });\r\n    document.dispatchEvent(new Event('CADBeltChanged'));\r\n  }\r\n  setSelectedTransformerAngle(angle: number) {\r\n    if (!isNaN(angle) && angle > -1) {\r\n      this.selectedTransformer.angle = angle;\r\n      document.dispatchEvent(new Event('CADBeltChanged'));\r\n    }\r\n  }\r\n  setSelectedTransformerElectricCase(electricCase: boolean) {\r\n    this.selectedTransformer.electricCase = electricCase;\r\n    document.dispatchEvent(new Event('CADBeltChanged'));\r\n  }\r\n  setSelectedProtectedAreaWidth(width: number) {\r\n    if (!isNaN(width) && width > -1) {\r\n      this.selectedProtectedArea.width = parseFloat(width.toString());\r\n      document.dispatchEvent(new Event('CADProtectedAreaChanged'));\r\n    }\r\n  }\r\n  setSelectedProtectedAreaColor(color: string) {\r\n    this.selectedProtectedArea.color = color;\r\n    document.dispatchEvent(new Event('CADProtectedAreaChanged'));\r\n  }\r\n\r\n  /* Methods */\r\n  delBelt(id: string) {\r\n    this.version.delBelt(id);\r\n    this.unSelectBelt();\r\n  }\r\n  addNodeBefore() {\r\n    var node = new Node(),\r\n        index = this.version.getNodeIndex(this.selectedNodes[0].id);\r\n    node.id = UUID.UUID();\r\n    node.lat = this.selectedNodes[0].lat + 0.000025;\r\n    node.lng = this.selectedNodes[0].lng + 0.000025;\r\n\r\n    this.version.addNode(node, this.selectedBranch, index);\r\n\r\n    this.showContextMenu = false;\r\n    this.selectNode(node.id, false);\r\n  }\r\n  addNodeAfter() {\r\n    var node = new Node(),\r\n        index = this.version.getNodeIndex(this.selectedNodes[0].id);\r\n    node.id = UUID.UUID();\r\n    node.lat = this.selectedNodes[0].lat + 0.000025;\r\n    node.lng = this.selectedNodes[0].lng + 0.000025;\r\n\r\n    this.version.addNode(node, this.selectedBranch, index + 1);\r\n\r\n    this.showContextMenu = false;\r\n    this.selectNode(node.id, false);\r\n  }\r\n  delNode() {\r\n    this.version.delNode(this.selectedNodes[0].id);\r\n    this.unSelectNode();\r\n  }\r\n  delNodeAndChildren() {\r\n    this.version.delNodeAndChildren(this.selectedNodes[0].id);\r\n    this.unSelectNode();\r\n  }\r\n  delBranch() {\r\n    this.version.delBranch(this.selectedBranch.id);\r\n    this.unSelectBranch();\r\n  }\r\n  delElectricalOutlet() {\r\n    this.version.delElectricalOutlet(this.selectedElectricalOutlet.id);\r\n    this.unSelectElectricalOutlet();\r\n  }\r\n  addTransformer() {\r\n    var transformer = new Transformer(UUID.UUID())\r\n    this.selectedElectricalOutlet.transformers.push(transformer);\r\n    this.showContextMenu = false;\r\n    document.dispatchEvent(new Event('CADBeltChanged'));\r\n  }\r\n  delTransformer() {\r\n    this.version.delTransformer(this.selectedTransformer.id);\r\n    this.unSelectTransformer();\r\n  }\r\n  addNodeToTransformer() {\r\n    this.version.addNodeToTransformer(this.selectedNodes[0].id, this.selectedTransformer.id);\r\n    document.dispatchEvent(new Event('CADBeltChanged'));\r\n  }\r\n  delNodeFromElectricalBranch() {\r\n    this.version.delNodeFromElectricalBranch(this.selectedNodes[0].id);\r\n    document.dispatchEvent(new Event('CADBeltChanged'));\r\n  }\r\n  delProtectedArea(id: string) {\r\n    this.version.delProtectedArea(id);\r\n    this.unSelectProtectedArea();\r\n  }\r\n  delSelectedProtectedAreaPoint() {\r\n    this.selectedProtectedArea.points.splice(this.selectedProtectedAreaPointIndex, 1);\r\n    this.selectedProtectedAreaPointIndex = null;\r\n    document.dispatchEvent(new Event('CADProtectedAreaChanged')); \r\n  }\r\n  addProtectedAreaPointBefore() {\r\n    // Get current point position\r\n    var selectedPoint = [\r\n      this.selectedProtectedArea.points[this.selectedProtectedAreaPointIndex][0],\r\n      this.selectedProtectedArea.points[this.selectedProtectedAreaPointIndex][1]\r\n    ];\r\n\r\n    var point = [selectedPoint[0] + 0.000025, selectedPoint[1] + 0.000025];\r\n\r\n    this.selectedProtectedArea.points.splice(this.selectedProtectedAreaPointIndex, 0, point);\r\n    this.showContextMenu = false;\r\n    document.dispatchEvent(new Event('CADProtectedAreaChanged')); \r\n  }\r\n  addProtectedAreaPointAfter() {\r\n    // Get current point position\r\n    var selectedPoint = [\r\n      this.selectedProtectedArea.points[this.selectedProtectedAreaPointIndex][0],\r\n      this.selectedProtectedArea.points[this.selectedProtectedAreaPointIndex][1]\r\n    ];\r\n\r\n    var point = [selectedPoint[0] + 0.000025, selectedPoint[1] + 0.000025];\r\n\r\n    this.selectedProtectedArea.points.splice(this.selectedProtectedAreaPointIndex + 1, 0, point);\r\n    this.showContextMenu = false;\r\n    document.dispatchEvent(new Event('CADProtectedAreaChanged')); \r\n  }\r\n\r\n  /* Calculs */\r\n  async save(additionalDistanceSheath) {\r\n    // First refresh calculations\r\n    var calculations = new Calculations(this.version);\r\n    calculations.flowCalculations(additionalDistanceSheath);\r\n    calculations.electricCalculations(additionalDistanceSheath);\r\n    this.version.customPictureRatio = this.project.customPictureRatio;\r\n\r\n    // Then save locally\r\n    localStorage.setItem('version_' + this.version.id, JSON.stringify(this.version));\r\n  }\r\n\r\n  /* Other functions */\r\n  getPosition(lat, lng) {\r\n\r\n    // Case custom picture\r\n    if (this.project.customPicture) {\r\n      var x = (lng - this.project.lng) * Math.cos(lat * Math.PI / 180) * 40075 / 360,\r\n          y = (lat - this.project.lat) * 40008 / 360;\r\n\r\n      // Convert kilometers to px\r\n      x = x * 1000 * this.project.customPictureRatio;\r\n      y = y * 1000 * this.project.customPictureRatio;\r\n\r\n      return { x: x, y: y }\r\n    }\r\n    \r\n    // Case google maps\r\n    else {\r\n      return {\r\n        x: Math.round((lng - this.project.lng) / (360 / Math.pow(2, this.project.zoom + 9))),\r\n        y: Math.round(-(lat - this.project.lat) / (360 / Math.pow(2, this.project.zoom + 9.1) * Math.cos(this.project.lat * Math.PI / 180)))\r\n      }\r\n    }\r\n  }\r\n  getCoordinates(x, y) {\r\n\r\n    // Case custom picture\r\n    if (this.project.customPicture) {\r\n      // Convert px to kilometers\r\n      x = (x / 1000) / this.project.customPictureRatio;\r\n      y = (y / 1000) / this.project.customPictureRatio;\r\n\r\n      var lat = this.project.lat + y * 360 / 40008,\r\n          lng = this.project.lng + x * 360 / (Math.cos(lat * Math.PI / 180) * 40075);\r\n\r\n      return { lat: lat, lng: lng }\r\n    }\r\n    \r\n    // Case google maps\r\n    else {\r\n      return {\r\n        lat: this.project.lat - (360 / Math.pow(2, this.project.zoom + 9.1) * Math.cos(this.project.lat * Math.PI / 180)) * y,\r\n        lng: this.project.lng + (360 / Math.pow(2, this.project.zoom + 9)) * x\r\n      }\r\n    }\r\n\r\n  }\r\n  distance(x1, y1, x2, y2) {\r\n    function sqr(a) { return a * a }  \r\n    return Math.sqrt( sqr(x2 - x1) + sqr(y2 - y1) );\r\n  }\r\n  getDistance(latLng1, latLng2) {\r\n    function rad(x) { return x * Math.PI / 180 }\r\n      \r\n    var R = 6378137, // Earth’s mean radius in meter\r\n        dLat = rad(latLng2.lat - latLng1.lat),\r\n        dLong = rad(latLng2.lng - latLng1.lng);\r\n      \r\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n        Math.cos(rad(latLng1.lat)) * Math.cos(rad(latLng2.lat)) *\r\n        Math.sin(dLong / 2) * Math.sin(dLong / 2);\r\n      \r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n      \r\n    var d = R * c;\r\n      \r\n    return d; // returns the distance in meter\r\n  }\r\n  angleCalculation(i, i1) {\r\n    var c = { x: 0, y: 0 },\r\n        d = 5,\r\n        tgTeta = (i.y - i1.y) / (i.x - i1.x),\r\n        teta = Math.atan((i.y - i1.y) / (i.x - i1.x)),\r\n        yxc = tgTeta * (c.x - i.x) + i.y,\r\n        niAngle = Math.round((yxc < c.y ? Math.sign(teta) * (Math.PI - teta) : teta) * 180 / Math.PI) + 90;\r\n\r\n    niAngle -= niAngle % 5;\r\n\r\n    if (niAngle < 0) return niAngle + 360;\r\n    else return niAngle;\r\n  }\r\n  rotate(cx, cy, x, y, angle) {\r\n    var radian = (Math.PI / 180) * angle,\r\n        cos = Math.cos(radian),\r\n        sin = Math.sin(radian),\r\n        nx = (cos * (x - cx)) + (sin * (y - cy)) + cx,\r\n        ny = (cos * (y - cy)) - (sin * (x - cx)) + cy;\r\n    \r\n    return {x: nx, y: ny};\r\n  }\r\n  splitLine(start, end, segments) {\r\n    var deltaX = (end.x - start.x) / segments,\r\n        deltaY = (end.y - start.y) / segments,\r\n        points = [];\r\n\r\n    points.push(start);\r\n    for(var i = 1; i < segments; i++) {\r\n        points.push({ x: start.x + i * deltaX, y: start.y + i * deltaY });\r\n    }\r\n\r\n    return points;\r\n  }\r\n\r\n\r\n  /*\r\n   * Google Earth Pro\r\n   */\r\n  exportToKML() {\r\n\r\n    // Init file\r\n    var kml = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><kml xmlns=\"http://www.opengis.net/kml/2.2\"><Document>';\r\n\r\n    // Set project name\r\n    kml += '<name>' + this.project.name + '</name>';\r\n    \r\n    // Add belts\r\n    this.version.belts.forEach(belt => {\r\n\r\n      // Set belt name\r\n      kml += '<Folder><name>' + belt.name + '</name>';\r\n\r\n      // Add traps\r\n      var trapNumber = 1;\r\n      belt.branches.forEach(branch => {\r\n        branch.nodes.forEach(node => {\r\n          if (node.nodeType == NodeType.CONTROL) {\r\n            kml += '<Placemark id=\"' + node.id + '\"><name>Régie</name><styleUrl>#biobelt_control</styleUrl><Point><coordinates>' + node.lng + ',' + node.lat + '</coordinates></Point></Placemark>';\r\n          } else if (node.nodeType == NodeType.HEXAGONAL_TRAP || node.nodeType == NodeType.RECTANGULAR_TRAP) {\r\n            kml += '<Placemark id=\"' + node.id + '\"><name>' + trapNumber + '</name><styleUrl>#biobelt_hexa_trap</styleUrl><Point><coordinates>' + node.lng + ',' + node.lat + '</coordinates></Point></Placemark>';\r\n            trapNumber++;\r\n          }\r\n        });\r\n      });\r\n\r\n      // Add branches\r\n      belt.branches.forEach((branch, branchIndex) => {\r\n        kml += '<Placemark id=\"' + branch.id + '\"><name>Branche ' + (branchIndex + 1) + '</name><styleUrl>#biobelt_branch</styleUrl><LineString><tessellate>1</tessellate><coordinates>';\r\n\r\n        // Add nodes\r\n        branch.nodes.forEach((node, nodeIndex) => {\r\n\r\n          // TODO: Add parent node\r\n          if (branchIndex > 0 && nodeIndex == 0) {\r\n            var n = this.version.getNode(branch.parentNode);\r\n            if (n) kml += n.lng + ',' + n.lat + ' ';\r\n          }\r\n\r\n          kml += node.lng + ',' + node.lat + ' ';\r\n\r\n        });\r\n\r\n        kml += '</coordinates></LineString></Placemark>';\r\n      });\r\n\r\n      kml += '</Folder>';\r\n\r\n    });\r\n\r\n    // Add styles\r\n    kml +=  '<Style id=\"biobelt_control\"><IconStyle><Icon><href>http://admin.biobelt.com/assets/img/markers/regie.png</href></Icon><scale>0.75</scale></IconStyle><LabelStyle><scale>0.75</scale></LabelStyle></Style>' +\r\n            '<Style id=\"biobelt_hexa_trap\"><IconStyle><Icon><href>http://admin.biobelt.com/assets/img/markers/trap_hexa_1.png</href></Icon><scale>0.75</scale></IconStyle><LabelStyle><scale>0.75</scale></LabelStyle></Style>' +\r\n            '<Style id=\"biobelt_rect_trap\"><IconStyle><Icon><href>http://admin.biobelt.com/assets/img/markers/trap_rect_1.png</href></Icon><scale>0.75</scale></IconStyle><LabelStyle><scale>0.75</scale></LabelStyle></Style>' +\r\n            '<Style id=\"biobelt_branch\"><LineStyle><color>ff0000ff</color><width>3</width></LineStyle></Style>';\r\n\r\n    // End file\r\n    kml += '</Document></kml>';\r\n\r\n    return kml;\r\n\r\n  }\r\n}\r\n\r\nexport enum Tool {\r\n  DRAW = 'DRAW',\r\n  SELECT_PARENT_NODE = 'SELECT_PARENT_NODE',\r\n  SELECT_PIXELS_RATIO = 'SELECT_PIXELS_RATIO',\r\n}\r\n\r\nexport enum Mode {\r\n  ALL = 'ALL',\r\n  CO2 = 'CO2',\r\n  ELECTRIC = 'ELECTRIC'\r\n}","import { Version } from \"./version\";\r\nimport { Branch } from \"./branch\";\r\nimport { NodeType, Node } from \"./node\";\r\nimport { Belt } from \"./belt\";\r\nimport { ElectricalOutlet } from \"./electricalOutlet\";\r\nimport { Transformer } from \"./transformer\";\r\n\r\nexport class Calculations {\r\n  version: Version;\r\n  \r\n  // Calculations params\r\n  temperature = 20; // T°C\r\n  gramTrapHour = 20; // gr\r\n  initialPressure = 0.64534; // Bar\r\n  blasusFormula = 0.2;\r\n  reynoldsFactor = 90;\r\n  reynoldsThreshold = 3000;\r\n  tubeLengthAdd = 0.5;\r\n  literMinuteTrap = 0.168861871;\r\n  co2MassVol = 1.8714 * 288 / (273.15 + this.temperature); // 1.838523622718745\r\n  co2DynamicViscosity = 0.00000694501 * Math.pow((273.15 + this.temperature) / 273.15, 1.5) * (273.15 + 170) / (273.15 + 170 + this.temperature) * this.co2MassVol; // 0.000013583266313248221\r\n  tolerance = 0.1;\r\n  maxLoop = 100;\r\n\r\n  /// ELECTRIC\r\n  pcu = 0.000000017; // Ohm/m\r\n  cableLengthAdd = 0.5; // m\r\n  cableSection = 2.5; // Cable section en mm²\r\n  voltageBlock = 12; // Volts\r\n  fans = []\r\n\r\n  \r\n  constructor(version: Version) {\r\n    this.version = version;\r\n  }\r\n\r\n  // CO2\r\n  private currentIntensity: number;\r\n  private currentBelt: Belt;\r\n  private mainBranch: Branch;\r\n  private secondaryBranches: Branch[];\r\n  flowCalculations(additionalDistanceSheath: number = 0.5) {\r\n    this.tubeLengthAdd = additionalDistanceSheath;\r\n\r\n    // For each belt\r\n    this.version.belts.forEach(belt => {\r\n      \r\n      if (belt.branches.length > 0 && belt.branches[0].nodes.length > 1) {\r\n\r\n        /// Belt informations\r\n        this.currentBelt = belt;\r\n        belt.resetCalculationValues();\r\n\r\n        /// Main branch informations\r\n        this.mainBranch = belt.branches[0];\r\n        this.mainBranch.trapsNumber = 0;\r\n        this.mainBranch.flowCumulated = 0;\r\n        // Reset nodes data\r\n        for (var nodeIndex = 0; nodeIndex < this.mainBranch.nodes.length; nodeIndex++)\r\n        this.mainBranch.nodes[nodeIndex].resetCalculationValues();\r\n        \r\n        /// Secondary branches informations\r\n        this.secondaryBranches = [];\r\n        for (var branchIndex = 0; branchIndex < belt.branches.length; branchIndex++) {\r\n          if (branchIndex > 0) {\r\n            // Add the secondary branch\r\n            belt.branches[branchIndex].flowCumulated = 0;\r\n            this.secondaryBranches.push(belt.branches[branchIndex]);\r\n          }\r\n        }\r\n        \r\n        // Update belt & mainBranch informations\r\n        belt.trapsNumber = this.getTrapsNumber(this.mainBranch);\r\n        this.mainBranch.trapsNumber = belt.trapsNumber;\r\n        this.mainBranch.nodesNumber = this.getNodesNumber(this.mainBranch);\r\n        \r\n        // Update secondary branches informations\r\n        for (var branchIndex = 0; branchIndex < this.secondaryBranches.length; branchIndex++) {\r\n          this.secondaryBranches[branchIndex].trapsNumber = this.getTrapsNumber(this.secondaryBranches[branchIndex]);\r\n          this.secondaryBranches[branchIndex].nodesNumber = this.getNodesNumber(this.secondaryBranches[branchIndex]);\r\n          this.secondaryBranches[branchIndex].flowCumulated = 0;\r\n\r\n          // Reset nodes data\r\n          for (var nodeIndex = 0; nodeIndex < this.secondaryBranches[branchIndex].nodes.length; nodeIndex++)\r\n          this.secondaryBranches[branchIndex].nodes[nodeIndex].resetCalculationValues();\r\n        }\r\n\r\n        // Loop on 10 intensity values (1 - 10)\r\n        for (var i = 1; i < 11; i++) {\r\n          \r\n          // Initialization\r\n          this.currentIntensity = i;\r\n          this.mainBranch.nodes[0].flowIn = this.getInitialFlow();\r\n          this.mainBranch.nodes[0].pressure = this.initialPressure * i / 10;\r\n\r\n          var loop = 0;\r\n          while (loop < this.maxLoop) {\r\n            var flowCalculated = this.branchFlowRate(this.mainBranch), // Q\r\n                flowReference = this.getInitialFlow(); // Qref\r\n\r\n            // if ||Qref - Q|| < eq\r\n            if (Math.abs(flowReference - flowCalculated) < 1 / 1000) break;\r\n            else this.mainBranch.nodes[0].pressure += (flowReference - flowCalculated) * (2 / this.mainBranch.trapsNumber); // P(0) = P(0) + (Qref - Q * ep)\r\n\r\n            loop++;\r\n          }\r\n\r\n          // Save flow\r\n          switch(i) {\r\n            case 1: belt.pressureInt1 = this.mainBranch.nodes[0].pressure; break;\r\n            case 2: belt.pressureInt2 = this.mainBranch.nodes[0].pressure; break;\r\n            case 3: belt.pressureInt3 = this.mainBranch.nodes[0].pressure; break;\r\n            case 4: belt.pressureInt4 = this.mainBranch.nodes[0].pressure; break;\r\n            case 5: belt.pressureInt5 = this.mainBranch.nodes[0].pressure; break;\r\n            case 6: belt.pressureInt6 = this.mainBranch.nodes[0].pressure; break;\r\n            case 7: belt.pressureInt7 = this.mainBranch.nodes[0].pressure; break;\r\n            case 8: belt.pressureInt8 = this.mainBranch.nodes[0].pressure; break;\r\n            case 9: belt.pressureInt9 = this.mainBranch.nodes[0].pressure; break;\r\n            case 10:\r\n              belt.flowCumulated = this.mainBranch.nodes[0].flowIn;\r\n              belt.flowTheoretical = this.getInitialFlow();\r\n              belt.pressureCalculated = this.mainBranch.nodes[0].pressure;\r\n            break;\r\n          }\r\n          \r\n        }\r\n\r\n\r\n        // Simon Wolkiewiez: flowPercent, lossPressureCumulated & flowCumulated\r\n        belt.branches.forEach(branch => {\r\n          branch.nodes.forEach((node, nodeIndex) => {\r\n            if (node.nodeType == NodeType.HEXAGONAL_TRAP || node.nodeType == NodeType.RECTANGULAR_TRAP) node.flowPercent = this.getFlowPercent(node.flowOut);\r\n            if (branch.nodes[nodeIndex - 1]) {\r\n              node.lossPressureCumulated = branch.nodes[nodeIndex - 1].lossPressureCumulated + (branch.nodes[nodeIndex - 1].pressure - node.pressure);\r\n              node.flowCumulated = branch.nodes[nodeIndex - 1].flowCumulated + node.flowOut;\r\n            }\r\n          })\r\n        });\r\n        // Simon Wolkiewiez\r\n\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n  private branchFlowRate(branch: Branch, parentBranch: Branch = null, parentNode: Node = null) {\r\n\r\n    var calculatedFlowRate = 0, // Qc\r\n        guessedFlowRate = 0, // Qg\r\n        constantPressure = 0;\r\n\r\n    // if Q(NBF(i)) = 0\r\n    if (branch.nodes[0].flowIn == 0 && parentBranch && parentNode) guessedFlowRate = parentNode.flowIn * branch.trapsNumber / this.getTrapsNumber(parentBranch, this.version.getNodeIndex(parentNode.id)); // Qg = Q(i) * NNB(i) / NNMB(i)\r\n    else guessedFlowRate = branch.nodes[0].flowIn; // Qg = Q(NBF(i))\r\n\r\n    // Iteration\r\n    var loop = 0;\r\n    while (loop < this.maxLoop) {\r\n      // Update input flow\r\n      branch.nodes[0].flowIn = guessedFlowRate;\r\n      calculatedFlowRate = 0;\r\n\r\n      for (var j = 0; j < branch.nodes.length; j++) {\r\n        var previousNode = branch.nodes[j - 1],\r\n            currentNode = branch.nodes[j],\r\n            nextNode = branch.nodes[j + 1];\r\n\r\n\r\n        // Get pressure\r\n        if (previousNode) {\r\n          // Check input flow\r\n          if (currentNode.flowIn < 0) {\r\n            currentNode.pressure = previousNode.pressure;\r\n          } else {\r\n            // P(j) = P(NP(j)) - deltaP(j, NP(j)) - ?Pjn(NP(j))\r\n            currentNode.pressure = this.getModulePressure(\r\n              previousNode.pressure,\r\n              this.getDeltaPlaminaire(currentNode.flowIn, currentNode.prevDistance, branch.tubeDiameter),\r\n              this.getJunctionLoss(this.getSpeed(currentNode.flowIn, branch.tubeDiameter), true)\r\n            );\r\n          }\r\n        } else if (parentNode) {\r\n          currentNode.pressure = this.getModulePressure(\r\n            parentNode.pressure,\r\n            this.getDeltaPlaminaire(currentNode.flowIn, currentNode.prevDistance, branch.tubeDiameter),\r\n            this.getJunctionLoss(this.getSpeed(currentNode.flowIn, branch.tubeDiameter), true)\r\n          );\r\n        }\r\n\r\n\r\n        // Simon Wolkiewiez: Check if control\r\n        if (currentNode.nodeType == NodeType.CONTROL) {\r\n          if (nextNode) nextNode.flowIn = currentNode.flowIn;\r\n        }\r\n        // Check if intermediate node without child branch\r\n        else if (currentNode.nodeType == NodeType.INTERMEDIATE && this.version.getNodeNumberOfChild(currentNode.id) < 2) {\r\n          if (nextNode) nextNode.flowIn = currentNode.flowIn;\r\n        }\r\n        // Simon Wolkiewiez\r\n\r\n\r\n        // if Type of node j = ST\r\n        else if (\r\n          (currentNode.nodeType == NodeType.HEXAGONAL_TRAP || currentNode.nodeType == NodeType.RECTANGULAR_TRAP) &&\r\n          this.version.getNodeNumberOfChild(currentNode.id) < 2\r\n        ) {\r\n          currentNode.flowOut = this.getOutModuleFlow(currentNode.pressure, currentNode.flowIn, branch.tubeDiameter); // q(j) = (a * P(j)² + b * P(j) - tetaPjt(j)) * Tc/T\r\n          if (nextNode) nextNode.flowIn = currentNode.flowIn - currentNode.flowOut;                                   // Q(NX(j)) = Q(j) - q(j)\r\n          calculatedFlowRate += currentNode.flowOut;                                                                  // Qc = Qc + q(j)\r\n        }\r\n\r\n\r\n        // else if Type of node j = SB\r\n        else if (\r\n          currentNode.nodeType == NodeType.INTERMEDIATE &&\r\n          this.version.getNodeNumberOfChild(currentNode.id) == 2\r\n        ) {\r\n          var childBranch = this.version.getNodeChildBranch(currentNode.id);\r\n          childBranch.nodes[0].flowIn = this.branchFlowRate(childBranch, branch, currentNode); // Q(NBF(j)) = branchFlowRate(NBF(j))\r\n          if (nextNode) nextNode.flowIn = currentNode.flowIn - childBranch.nodes[0].flowIn; // Q(NX(j)) = Q(j) - Q(NBF(j))\r\n          calculatedFlowRate += childBranch.nodes[0].flowIn; // Qc = Qc + Q(NBF(j))\r\n        }\r\n\r\n\r\n        // else if Type of node j = SBT\r\n        else if (\r\n          (currentNode.nodeType == NodeType.HEXAGONAL_TRAP || currentNode.nodeType == NodeType.RECTANGULAR_TRAP) &&\r\n          this.version.getNodeNumberOfChild(currentNode.id) == 2\r\n        ) {\r\n          currentNode.flowOut = this.getOutModuleFlow(currentNode.pressure, currentNode.flowIn, branch.tubeDiameter); // q(j) = (a * P(j)² + b * P(j) - tetaPjt(j)) * Tc/T\r\n          \r\n          var childBranch = this.version.getNodeChildBranch(currentNode.id);\r\n          childBranch.nodes[0].flowIn = this.branchFlowRate(childBranch, branch, currentNode); // Q(NBF(j)) = branchFlowRate(NBF(j))\r\n          \r\n          if (nextNode) nextNode.flowIn = currentNode.flowIn - childBranch.nodes[0].flowIn - currentNode.flowOut; // Q(NX(j)) = Q(j) - Q(NBF(j)) - q(j)\r\n          calculatedFlowRate += childBranch.nodes[0].flowIn + currentNode.flowOut; // Qc = Qc + Q(NBF(j)) + q(j)\r\n        }\r\n\r\n\r\n        if (currentNode.pressure <= 0) {\r\n          // Update the cumulative flow of the branch\r\n          if (previousNode) calculatedFlowRate = previousNode.flowCumulated;\r\n          else if (parentNode) calculatedFlowRate = parentNode.flowCumulated;\r\n        }\r\n\r\n      }\r\n\r\n      // if |Qc - Qg| > eq\r\n      if (Math.abs(calculatedFlowRate - guessedFlowRate) > 1 / 1000)\r\n        guessedFlowRate = (calculatedFlowRate + guessedFlowRate) / 2; // Qg = (Qc + Qg) / 2\r\n      else break;\r\n\r\n      loop++;\r\n    }\r\n\r\n    return calculatedFlowRate;\r\n\r\n  }\r\n\r\n  // ELECTRIC\r\n  private currentElectricalOutlet: ElectricalOutlet;\r\n  private currentTransformer: Transformer;\r\n  electricCalculations(additionalDistanceSheath: number = 0.5) {\r\n    this.cableLengthAdd = additionalDistanceSheath;\r\n\r\n    // For each belt\r\n    this.version.belts.forEach(belt => {\r\n      if (belt.electricalOutlets.length > 0) {\r\n        // Belt informations\r\n        belt.electricalOutlets.forEach(electricalOutlet => {\r\n          // Electrical outlet informations\r\n          this.currentElectricalOutlet = electricalOutlet;\r\n          \r\n          electricalOutlet.transformers.forEach(transformer => {\r\n            if (transformer.electricalBranches.length > 0) {\r\n              // Transformer informations\r\n              this.currentTransformer = transformer;\r\n              this.initElectricalBranches(this.version);\r\n              this.getCableVoltageCalculation(0, 0, this.version);\r\n            \r\n              // Voltages calculation\r\n              var average = this.getAverageDifferenceU(this.version), p = 0;\r\n\r\n              while ((Math.abs(average) > 0.0001) && (p < 100)) {\r\n                this.updateU2(this.version);\r\n                \r\n                this.getCableVoltageCalculation(0, 0, this.version);\r\n                \r\n                transformer.electricalBranches.forEach((electricalBranch, branchIndex) => {\r\n                  electricalBranch.electricalNodes.forEach((electricalNode, nodeIndex) => {\r\n                    // Get node\r\n                    var node = this.version.getNode(electricalNode.nodeId);\r\n                    \r\n                    // Check node position\r\n                    if (branchIndex == 0 && nodeIndex == 0) {\r\n                      // First node\r\n                      node.U2 = this.voltageBlock - 2 * node.R * node.I;\r\n                    } else if (branchIndex > 0 && nodeIndex == 0) {\r\n                      // First node of a new branch\r\n                      var parentNode = this.version.getNode(electricalBranch.parentElectricalNode);\r\n                      node.U2 = parentNode.U - 2 * node.R * node.I;\r\n                    } else {\r\n                      // Others nodes\r\n                      var previousNode = this.version.getNode(electricalBranch.electricalNodes[nodeIndex - 1].nodeId);\r\n                      node.U2 = previousNode.U - 2 * node.R * node.I;\r\n                    }\r\n                    \r\n                    // Update intensity in this fan\r\n                    node.i = this.getIntensity(node.U2);\r\n                  })\r\n                });\r\n                \r\n                average = this.getAverageDifferenceU(this.version);\r\n                \r\n                p++;\r\n              }\r\n            }\r\n            \r\n            // Save Data\r\n            transformer.powerConsumed = 0;\r\n            transformer.electricalBranches.forEach(electricalBranch => {\r\n              electricalBranch.electricalNodes.forEach(electricalNode => {\r\n                // Get node & loss\r\n                var node = this.version.getNode(electricalNode.nodeId);\r\n                \r\n                // Update data\r\n                node.powerLoss = 1 - Math.pow(node.i * node.U2 / 3.36, 1 / 3);\r\n                node.voltage = node.U2;\r\n                transformer.powerConsumed += node.i * node.voltage;\r\n              })\r\n            })\r\n          })\r\n        })\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  // Electric Methods\r\n  private getResistance(distance: number): number {\r\n    if (distance == null) return 0;\r\n    else return this.pcu * distance / (this.cableSection * Math.pow(10, -6));\r\n  }\r\n  private getIntensity(voltage: number): number {\r\n    if (voltage == null) return 0;\r\n    else return 0.028 * voltage - 0.056;\r\n  }\r\n  private getAverageDifferenceU(version: Version): number {\r\n    var difference = 0, nbFans = 0;\r\n    \r\n    for(var i = 0; i < this.currentTransformer.electricalBranches.length; i++) {\r\n      for(var j = 0; j < this.currentTransformer.electricalBranches[i].electricalNodes.length; j++) {\r\n        // Get node\r\n        var node: Node = version.getNode(this.currentTransformer.electricalBranches[i].electricalNodes[j].nodeId);\r\n        \r\n        // Check if trap\r\n        if (node.nodeType == NodeType.RECTANGULAR_TRAP || node.nodeType == NodeType.HEXAGONAL_TRAP) {\r\n          difference += Math.abs(node.U - node.U2);\r\n          nbFans++;\r\n        }\r\n      }\r\n    }\r\n      \r\n    return difference / nbFans;\r\n  }\r\n  private getCableVoltageCalculation(branchIndex: number, nodeIndex: number, version: Version): number {\r\n    // Get node\r\n    var node: Node = version.getNode(this.currentTransformer.electricalBranches[branchIndex].electricalNodes[nodeIndex].nodeId);\r\n    \r\n    // Fan intensity\r\n    if (node.nodeType == NodeType.RECTANGULAR_TRAP || node.nodeType == NodeType.HEXAGONAL_TRAP) node.I = this.getIntensity(node.U); // Type = trap (fan)\r\n    else node.I = 0; // Type = control or intermediate node\r\n    \r\n    // Check if next node exists\r\n    if (nodeIndex < this.currentTransformer.electricalBranches[branchIndex].electricalNodes.length - 1)\r\n      node.I += this.getCableVoltageCalculation(branchIndex, nodeIndex + 1, version);\r\n    \r\n    // Check if child node exists\r\n    for(var i = 0; i < this.currentTransformer.electricalBranches.length; i++)\r\n      if (this.currentTransformer.electricalBranches[i].parentElectricalNode === node.id)\r\n        node.I += this.getCableVoltageCalculation(i, 0, version);\r\n      \r\n    return node.I;\r\n  }\r\n  private initElectricalBranches(version: Version): void {\r\n    for(var i = 0; i < this.currentTransformer.electricalBranches.length; i++) {\r\n      for(var j = 0; j < this.currentTransformer.electricalBranches[i].electricalNodes.length; j++) {\r\n        // Get node\r\n        var node: Node = version.getNode(this.currentTransformer.electricalBranches[i].electricalNodes[j].nodeId);\r\n        \r\n        // Check if first node of the branch\r\n        if (i == 0 && j == 0) {\r\n          // First node\r\n          // Calcul distance beetween this node & the electrical output\r\n          node.prevDistance = this.version.getDistance({ lat: node.lat, lng: node.lng }, { lat: this.currentElectricalOutlet.lat, lng: this.currentElectricalOutlet.lng });\r\n        } else if (i > 0 && j == 0) {\r\n          // Get parent node\r\n          var parentNode = version.getNode(this.currentTransformer.electricalBranches[i].parentElectricalNode);\r\n          node.prevDistance = this.version.getDistance({ lat: node.lat, lng: node.lng }, { lat: parentNode.lat, lng: parentNode.lng });\r\n        } else {\r\n          // Get previous node\r\n          var previousNode = version.getNode(this.currentTransformer.electricalBranches[i].electricalNodes[j - 1].nodeId);\r\n          node.prevDistance = this.version.getDistance({ lat: node.lat, lng: node.lng }, { lat: previousNode.lat, lng: previousNode.lng });\r\n        }\r\n        \r\n        node.prevDistance += this.cableLengthAdd;\r\n        node.U = this.voltageBlock;\r\n        node.U2 = 0;\r\n        node.i = this.getIntensity(node.U);\r\n        node.R = this.getResistance(node.prevDistance);\r\n        node.I = 0;\r\n      }\r\n    }\r\n  }\r\n  private updateU2(version: Version): void {\r\n    var difference = 0, u = 0, u2 = 0;\r\n    \r\n    for(var i = 0; i < this.currentTransformer.electricalBranches.length; i++) {\r\n      for(var j = 0; j < this.currentTransformer.electricalBranches[i].electricalNodes.length; j++) {\r\n        // Get node\r\n        var node: Node = version.getNode(this.currentTransformer.electricalBranches[i].electricalNodes[j].nodeId);\r\n        node.U = node.U2;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // Methods\r\n  private getTubeSection(tubeDiameter: number): number {\r\n    return tubeDiameter * tubeDiameter * Math.PI / (4 * 1000000);\r\n  }\r\n  private getSpeed(flow: number, tubeDiameter: number): number {\r\n    return flow / (60 * 1000 * this.getTubeSection(tubeDiameter));\r\n  }\r\n  private getTrapsNumber(branch: Branch, index: number = -1): number {\r\n    var number = 0;\r\n    \r\n    // Count all traps of the branch\r\n    if (index != -1) number += branch.nodes.filter((node, nodeIndex) => nodeIndex > index && (node.nodeType == NodeType.RECTANGULAR_TRAP || node.nodeType == NodeType.HEXAGONAL_TRAP)).length;\r\n    else number += branch.nodes.filter(node => node.nodeType == NodeType.RECTANGULAR_TRAP || node.nodeType == NodeType.HEXAGONAL_TRAP).length;\r\n    \r\n    // Count all traps of child branches\r\n    for (var i = 0; i < this.currentBelt.branches.length; i++)\r\n      if (this.currentBelt.branches[i].parentBranch == branch.id)\r\n        number += this.getTrapsNumber(this.currentBelt.branches[i]);\r\n    \r\n    return number;\r\n  }\r\n  private getNodesNumber(branch: Branch): number {\r\n    var number = 0;\r\n    \r\n    // Count all traps of the branch\r\n    number += branch.nodes.length;\r\n    \r\n    // Count all traps of child branches\r\n    for (var i = 0; i < this.currentBelt.branches.length; i++)\r\n      if (this.currentBelt.branches[i].parentBranch == branch.id)\r\n        number += this.getNodesNumber(this.currentBelt.branches[i]);\r\n    \r\n    return number;\r\n  }\r\n  private getOutModuleFlow(pressure: number, flow: number, tubeDiameter: number): number {\r\n    var a = 0.110728364691098,\r\n        b = 0.25715450;\r\n\r\n    return (\r\n      (\r\n        a * Math.pow(\r\n          (pressure - this.getJunctionLoss(this.getSpeed(flow, tubeDiameter), false)), 2\r\n        ) + b * (pressure - this.getJunctionLoss(this.getSpeed(flow, tubeDiameter), false))\r\n      )\r\n    );\r\n  }\r\n  private getInitialFlow(): number {\r\n    return this.currentBelt.trapsNumber * (this.gramTrapHour / (60 * 1.974)) * this.currentIntensity / 10;\r\n  }\r\n  private getReynoldsNumber(flow: number, tubeDiameter: number): number {\r\n    return this.co2MassVol * (tubeDiameter / 1000) * this.getSpeed(flow, tubeDiameter) / this.co2DynamicViscosity;\r\n  }\r\n  private getDeltaPlaminaire(flow: number, tubeLength: number, tubeDiameter: number): number {\r\n    var reynoldsNumber = this.getReynoldsNumber(flow, tubeDiameter), speed = this.getSpeed(flow, tubeDiameter);\r\n    \r\n    if (reynoldsNumber == 0) return 0;\r\n\r\n    else if (reynoldsNumber < this.reynoldsThreshold)\r\n      return ((this.reynoldsFactor / reynoldsNumber) * this.co2MassVol * speed * speed * (tubeLength + this.tubeLengthAdd) / (2 * (tubeDiameter / 1000)) / 100) / 1000;\r\n    \r\n    else\r\n      return (this.blasusFormula * Math.pow(reynoldsNumber, -0.25) * this.co2MassVol * speed * speed * (tubeLength + this.tubeLengthAdd) / (2 * (tubeDiameter / 1000)) / 100) / 1000;\r\n  }\r\n  private getModulePressure(prevModulePressure: number, deltaPLaminaire: number, junctionLoss: number): number {\r\n    return prevModulePressure - deltaPLaminaire - junctionLoss;\r\n  }\r\n  private getJunctionLoss(speed: number, jn: boolean): number {\r\n    var k = (jn ? 0.5 : 1.3);\r\n    return k * this.co2MassVol * speed * speed / 200000;\r\n  }\r\n  private getFlowPercent(flow: number): number {\r\n    return ((flow - this.literMinuteTrap) / this.literMinuteTrap * 100);\r\n  }\r\n}","import { ElectricalNode } from \"./electricalNode\";\r\n\r\nexport class ElectricalBranch {\r\n  id:                     string = '';\r\n\tparentElectricalBranch: string;\r\n  parentElectricalNode:   string;\r\n\r\n  electricalNodes: ElectricalNode[] = [];\r\n  \r\n  static loadFromJSON(json): ElectricalBranch {\r\n    var electricalBranch = Object.assign(new ElectricalBranch, json);\r\n\r\n    if (json.electricalNodes) {\r\n      electricalBranch.electricalNodes = [];\r\n      json.electricalNodes.forEach(jsonElectricalNode => { electricalBranch.electricalNodes.push(ElectricalNode.loadFromJSON(jsonElectricalNode)) })\r\n    }\r\n\r\n    return electricalBranch;\r\n  }\r\n}","export class ElectricalNode {\r\n    id:     string = '';\r\n    nodeId: string = '';\r\n    \r\n    static loadFromJSON(json): ElectricalNode {\r\n          return Object.assign(new ElectricalNode, json);\r\n    }\r\n  }","import { Transformer } from \"./transformer\";\r\n\r\nexport class ElectricalOutlet {\r\n  id:   string = '';\r\n  lat:  number = 0;\r\n  lng:  number = 0;\r\n  \r\n  transformers: Transformer[] = [];\r\n\r\n  constructor(id: string = '', lat: number = 0, lng: number = 0) {\r\n    this.id = id;\r\n    this.lat = lat;\r\n    this.lng = lng;\r\n  }\r\n\r\n  static loadFromJSON(json): ElectricalOutlet {\r\n\t\tvar electricalOutlet = Object.assign(new ElectricalOutlet, json);\r\n\t\t\r\n\t\tif (json.transformers) {\r\n      electricalOutlet.transformers = [];\r\n      json.transformers.forEach(jsonTransformer => { electricalOutlet.transformers.push(Transformer.loadFromJSON(jsonTransformer)) });\r\n    }\r\n\t\t\r\n    return electricalOutlet;\r\n  }\r\n}","export class Node {\r\n    id: string = '';\r\n      nodeType = NodeType.HEXAGONAL_TRAP;\r\n      \r\n      textAngle: number = 0;\r\n      textDistance: number = 5;\r\n      prevLinkBuried: boolean = false;\r\n      prevDistance: number = 0;\r\n      lat: number = 0;\r\n    lng: number = 0;\r\n    \r\n    flowIn: number = 0;\r\n      flowOut: number = 0;\r\n      flowCumulated: number = 0;\r\n      flowPercent: number = 0;\r\n      pressure: number = 0;\r\n      lossPressureCumulated: number = 0;\r\n  \r\n      voltage: number = 0;\r\n      powerLoss: number = 0;\r\n  \r\n      // Calculations only\r\n      speedInputModule: number = 0;\r\n      reynoldsNumber: number = 0;\r\n      deltaPLaminaire: number = 0;\r\n      junctionLoss: number = 0;\r\n      differenceFlowAverage: number = 0;\r\n      flowTotalReference: number = 0;\r\n      I: number = 0;\r\n      i: number = 0;\r\n      R: number = 0;\r\n      U: number = 0;\r\n      U2: number = 0;\r\n    \r\n    static loadFromJSON(json): Node {\r\n          return Object.assign(new Node, json)\r\n      }\r\n      \r\n      resetCalculationValues() {\r\n          this.flowIn = 0;\r\n          this.flowOut = 0;\r\n          this.flowCumulated = 0;\r\n          this.flowPercent = 0;\r\n          this.pressure = 0;\r\n          this.lossPressureCumulated = 0;\r\n          this.speedInputModule = 0;\r\n          this.reynoldsNumber = 0;\r\n          this.deltaPLaminaire = 0;\r\n          this.junctionLoss = 0;\r\n          this.differenceFlowAverage = 0;\r\n          this.flowTotalReference = 0;\r\n      }\r\n  }\r\n  \r\n  export enum NodeType {\r\n    CONTROL           = 'CONTROL',\r\n    RECTANGULAR_TRAP  = 'RECTANGULAR_TRAP',\r\n    HEXAGONAL_TRAP    = 'HEXAGONAL_TRAP',\r\n    INTERMEDIATE      = 'INTERMEDIATE'\r\n  }","export class Project {\r\n    id: string = '';\r\n      name: string = '';\r\n      client: string = '';\r\n      address: string = '';\r\n    lat: number = 0;\r\n      lng: number = 0;\r\n      zoom: number = 0;\r\n      hbmDistance: number = 0;\r\n      additionalDistanceSheath: number = 0.5;\r\n      \r\n      customPicture: boolean = false;\r\n      customPictureFilename: string = \"\";\r\n      customPictureRatio: number = 0;\r\n  \r\n    static loadFromJSON(json): Project {\r\n          return Object.assign(new Project, json)\r\n    }\r\n  }","export class ProtectedArea {\r\n    id:     string  = '';\r\n    width:  number  = 100;\r\n    color:  string  = '#0A4A14';\r\n    points: any[]   = [];\r\n  \r\n    constructor(id: string = '') {\r\n      this.id = id;\r\n    }\r\n  \r\n    static loadFromJSON(json): ProtectedArea {\r\n      var protectedArea = Object.assign(new ProtectedArea, json);\r\n      \r\n      if (json.points) try { protectedArea.points = JSON.parse(json.points) } catch { protectedArea.points = json.points }\r\n      \r\n      return protectedArea;\r\n    }\r\n  }","import { ElectricalBranch } from \"./electricalBranch\";\r\n\r\nexport class Transformer {\r\n\tid:           string = '';\r\n\tangle:        number = 0;\r\n\telectricCase: boolean = false;\r\n\t\r\n  powerConsumed: number = 0;\r\n  \r\n  electricalBranches: ElectricalBranch[] = [];\r\n\r\n  constructor(id: string = '', angle: number = 0, electricCase: boolean = false, powerConsumed: number = 0) {\r\n    this.id = id;\r\n    this.angle = angle;\r\n    this.electricCase = electricCase;\r\n    this.powerConsumed = powerConsumed;\r\n  }\r\n\r\n  static loadFromJSON(json): Transformer {\r\n    var transformer = Object.assign(new Transformer, json);\r\n\r\n    if (json.electricalBranches) {\r\n      transformer.electricalBranches = [];\r\n      json.electricalBranches.forEach(jsonElectricalBranch => { transformer.electricalBranches.push(ElectricalBranch.loadFromJSON(jsonElectricalBranch)) });\r\n    }\r\n\r\n    return transformer;\r\n  }\r\n}","import { UUID } from 'angular2-uuid';\r\nimport { LocalDateTime } from \"../../model/upcv3/LocalDateTime\";\r\nimport { Belt } from \"./belt\";\r\nimport { Node, NodeType } from \"./node\";\r\nimport { Branch } from \"./branch\";\r\nimport { ElectricalOutlet } from \"./electricalOutlet\";\r\nimport { Transformer } from \"./transformer\";\r\nimport { ElectricalBranch } from \"./electricalBranch\";\r\nimport { ElectricalNode } from \"./electricalNode\";\r\nimport { ProtectedArea } from './protectedArea';\r\n\r\nexport class Version {\r\n  id:           string = '';\r\n\tversionType:  VersionType = VersionType.PRE_ESTIMATE;\r\n\tnumberOrder:  number = 1;\r\n\r\n\ticonsSize:    number = 15;\r\n\trotation:     number = 0;\r\n\tzoom:         number = 1;\r\n\tpixelsScale:  number = 5;\r\n\tmapType:      string = 'satellite';\r\n\tmapOpacity:   number = 50;\r\n\r\n\tmaterialPrice:      number = 0;\r\n\tinstallationPrice:  number = 0;\r\n  maintenancePrice:   number = 0;\r\n  \r\n  renewalPeriod: number = 30;\r\n\r\n\tjanuaryDiff:    number[] = [0, 0, 0, 0, 5];\r\n\tfebruaryDiff:   number[] = [0, 0, 0, 0, 5];\r\n\tmarchDiff:      number[] = [0, 0, 0, 0, 5];\r\n\taprilDiff:      number[] = [0, 0, 2, 2, 5];\r\n  mayDiff:        number[] = [4, 4, 4, 4, 5];\r\n\tjuneDiff:       number[] = [4, 6, 6, 6, 5];\r\n\tjulyDiff:       number[] = [10, 10, 10, 10, 5];\r\n  augustDiff:     number[] = [10, 10, 10, 10, 5];\r\n  septemberDiff:  number[] = [6, 6, 6, 4, 5];\r\n  octoberDiff:    number[] = [4, 4, 4, 4, 5];\r\n\tnovemberDiff:   number[] = [2, 2, 0, 0, 5];\r\n\tdecemberDiff:   number[] = [0, 0, 0, 0, 5];\r\n\r\n\tcreationDate:     LocalDateTime;\r\n  lastEditionDate:  LocalDateTime;\r\n\r\n  projectId: string = '';\r\n\r\n  belts: Belt[] = [];\r\n\r\n  customPictureRatio;\r\n  \r\n  get versionTypeToString(): string {\r\n    switch(this.versionType) {\r\n      case VersionType.PRE_ESTIMATE: return 'Pré-devis';\r\n      case VersionType.ESTIMATE: return 'Devis';\r\n      case VersionType.ACCEPTED_ESTIMATE: return 'Devis accepté';\r\n      case VersionType.INSTALLATION: return 'Installation';\r\n    }\r\n  }\r\n\r\n  static loadFromJSON(json): Version {\r\n    var version = Object.assign(new Version, json);\r\n\r\n    if (json.januaryDiff) try { version.januaryDiff = JSON.parse(json.januaryDiff) } catch { version.januaryDiff = json.januaryDiff }\r\n    else version.januaryDiff = [0, 0, 0, 0, 5];\r\n\r\n    if (json.februaryDiff) try { version.februaryDiff = JSON.parse(json.februaryDiff) } catch { version.februaryDiff = json.februaryDiff }\r\n    else version.februaryDiff = [0, 0, 0, 0, 5];\r\n\r\n    if (json.marchDiff) try { version.marchDiff = JSON.parse(json.marchDiff) } catch { version.marchDiff = json.marchDiff }\r\n    else version.marchDiff = [0, 0, 0, 0, 5];\r\n\r\n    if (json.aprilDiff) try { version.aprilDiff = JSON.parse(json.aprilDiff) } catch { version.aprilDiff = json.aprilDiff }\r\n    else version.aprilDiff = [0, 0, 2, 2, 5];\r\n\r\n    if (json.mayDiff) try { version.mayDiff = JSON.parse(json.mayDiff) } catch { version.mayDiff = json.mayDiff }\r\n    else version.mayDiff = [4, 4, 4, 4, 5];\r\n\r\n    if (json.juneDiff) try { version.juneDiff = JSON.parse(json.juneDiff) } catch { version.juneDiff = json.juneDiff }\r\n    else version.juneDiff = [4, 6, 6, 6, 5];\r\n\r\n    if (json.julyDiff) try { version.julyDiff = JSON.parse(json.julyDiff) } catch { version.julyDiff = json.julyDiff }\r\n    else version.julyDiff = [10, 10, 10, 10, 5];\r\n\r\n    if (json.augustDiff) try { version.augustDiff = JSON.parse(json.augustDiff) } catch { version.augustDiff = json.augustDiff }\r\n    else version.augustDiff = [10, 10, 10, 10, 5];\r\n\r\n    if (json.septemberDiff) try { version.septemberDiff = JSON.parse(json.septemberDiff) } catch { version.septemberDiff = json.septemberDiff }\r\n    else version.septemberDiff = [6, 6, 6, 4, 5];\r\n\r\n    if (json.octoberDiff) try { version.octoberDiff = JSON.parse(json.octoberDiff) } catch { version.octoberDiff = json.octoberDiff }\r\n    else version.octoberDiff = [4, 4, 4, 4, 5];\r\n\r\n    if (json.novemberDiff) try { version.novemberDiff = JSON.parse(json.novemberDiff) } catch { version.novemberDiff = json.novemberDiff }\r\n    else version.novemberDiff = [2, 2, 0, 0, 5];\r\n\r\n    if (json.decemberDiff) try { version.decemberDiff = JSON.parse(json.decemberDiff) } catch { version.decemberDiff = json.decemberDiff }\r\n    else version.decemberDiff = [0, 0, 0, 0, 5];\r\n\r\n    if (json.creationDate)    version.creationDate    = LocalDateTime.loadFromJSON(json.creationDate);\r\n    if (json.lastEditionDate) version.lastEditionDate = LocalDateTime.loadFromJSON(json.lastEditionDate);\r\n\r\n    if (json.belts) {\r\n      version.belts = [];\r\n      json.belts.forEach(jsonBelt => { version.belts.push(Belt.loadFromJSON(jsonBelt)) });\r\n    }\r\n\r\n    return version;\r\n  }\r\n\r\n  // Nodes\r\n  getNode(id: string): Node {\r\n    for(var i = 0; i < this.belts.length; i++)\r\n      for(var j = 0; j < this.belts[i].branches.length; j++)\r\n        for(var k = 0; k < this.belts[i].branches[j].nodes.length; k++)\r\n          if (this.belts[i].branches[j].nodes[k].id === id)\r\n            return this.belts[i].branches[j].nodes[k];\r\n    return null;\r\n  }\r\n  getPreviousNode(id: string): Node {\r\n    // Get branch, branchIndex & nodeIndex\r\n    var branch = this.getBranchFromNode(id),\r\n        branchIndex = this.getBranchIndex(branch.id),\r\n        nodeIndex = this.getNodeIndex(id),\r\n        previousNode = null;\r\n    \r\n    if (branchIndex > 0 && nodeIndex == 0) previousNode = this.getNode(branch.parentNode);\r\n    else previousNode = branch.nodes[nodeIndex - 1];\r\n    \r\n    return previousNode;\r\n  }\r\n  getNextNodes(id: string): any {\r\n    // Get branch, branchIndex & nodeIndex\r\n    var branch = this.getBranchFromNode(id),\r\n        nodeIndex = this.getNodeIndex(id),\r\n        nextNodes = { nextNodeInBranch: null, nextNodeInChildBranch: null };\r\n    \r\n    // Get next node in the node's branch\r\n    if (nodeIndex < branch.nodes.length - 1) nextNodes.nextNodeInBranch = branch.nodes[nodeIndex + 1];\r\n    \r\n    // Get next node from a child branch\r\n    this.belts.forEach(belt => {\r\n      belt.branches.forEach(branch => {\r\n        if (branch.parentNode === id && branch.nodes.length > 0) nextNodes.nextNodeInChildBranch = branch.nodes[0];\r\n      });\r\n    });\r\n    \r\n    return nextNodes;\r\n  }\r\n  getNodeIndex(id: string): number {\r\n    for(var i = 0; i < this.belts.length; i++)\r\n      for(var j = 0; j < this.belts[i].branches.length; j++)\r\n        for(var k = 0; k < this.belts[i].branches[j].nodes.length; k++)\r\n          if (this.belts[i].branches[j].nodes[k].id === id)\r\n            return k;\r\n    return -1;\r\n  }\r\n  getNodeNumberOfChild(id: string) {\r\n    // Get branch & node\r\n    var number = 0,\r\n        branch = this.getBranchFromNode(id),\r\n        node = this.getNode(id),\r\n        nodeIndex = this.getNodeIndex(id);\r\n\r\n    // Check error\r\n    if (branch == undefined) return number;\r\n\r\n    // Node not last of his branch\r\n    if (nodeIndex < branch.nodes.length - 1) number++;\r\n\r\n    // Branch has this node has parent\r\n    if (this.getNodeChildBranch(id) != null) number++;\r\n\r\n    // Check if control\r\n    if (node.nodeType == NodeType.CONTROL) number++;\r\n\r\n    return number;\r\n  }\r\n  getSuppliedNodesNumberFromNode(id: string): number {\r\n    // Get Transformer, ElectricalBranch & nodeIndex\r\n    var result = 0,\r\n        transformer = this.getTransformerFromNode(id),\r\n        electricalBranch = this.getElectricalBranchFromNode(id),\r\n        nodeIndex = this.getElectricalNodeIndex(id);\r\n    \r\n    console.log (nodeIndex);\r\n\r\n    // Check if node his the last of his branch\r\n    if (nodeIndex < electricalBranch.electricalNodes.length - 1) result++;\r\n    \r\n    // Check if node is a parent node\r\n    transformer.electricalBranches.forEach(electricalBranch => {\r\n      if (electricalBranch.parentElectricalNode === id) result++;\r\n    });\r\n    \r\n    return result;\r\n  }\r\n\r\n  // Branches\r\n  getBranch(id: string): Branch {\r\n    for(var i = 0; i < this.belts.length; i++)\r\n      for(var j = 0; j < this.belts[i].branches.length; j++)\r\n        if (this.belts[i].branches[j].id === id)\r\n          return this.belts[i].branches[j];\r\n    return null;\r\n  }\r\n  getBranchIndex(id: string): number {\r\n    for(var i = 0; i < this.belts.length; i++)\r\n      for(var j = 0; j < this.belts[i].branches.length; j++)\r\n        if (this.belts[i].branches[j].id === id)\r\n          return j;\r\n    return -1;\r\n  }\r\n  getBranchFromNode(id: string): Branch {\r\n    for(var i = 0; i < this.belts.length; i++)\r\n      for(var j = 0; j < this.belts[i].branches.length; j++)\r\n        for(var k = 0; k < this.belts[i].branches[j].nodes.length; k++)\r\n          if (this.belts[i].branches[j].nodes[k].id === id)\r\n            return this.belts[i].branches[j];\r\n    return null;\r\n  }\r\n  getNodeChildBranch(id: string): Branch {\r\n    for(var i = 0; i < this.belts.length; i++)\r\n      for(var j = 0; j < this.belts[i].branches.length; j++)\r\n        if (this.belts[i].branches[j].parentNode === id)\r\n          return this.belts[i].branches[j];\r\n    return null;\r\n  }\r\n\r\n  // Belts\r\n  getBelt(id: string): Belt {\r\n    for(var i = 0; i < this.belts.length; i++)\r\n      if (this.belts[i].id === id)\r\n        return this.belts[i];\r\n    return null;\r\n  }\r\n  getBeltIndex(id): number {\r\n    for(var i = 0; i < this.belts.length; i++)\r\n      if (this.belts[i].id === id)\r\n        return i;\r\n    return -1;\r\n  }\r\n  getBeltFromBranch(id: string): Belt {\r\n    for(var i = 0; i < this.belts.length; i++)\r\n      for(var j = 0; j < this.belts[i].branches.length; j++)\r\n        if (this.belts[i].branches[j].id === id)\r\n          return this.belts[i];\r\n    return null;\r\n  }\r\n  getBeltFromElectricalOutlet(id: string): Belt {\r\n    for (var i = 0; i < this.belts.length; i++) {\r\n      for (var j = 0; j < this.belts[i].electricalOutlets.length; j++) {\r\n        if (this.belts[i].electricalOutlets[j].id === id) return this.belts[i];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  getBeltFromProtectedArea(id: string): Belt {\r\n    for(var i = 0; i < this.belts.length; i++)\r\n      for(var j = 0; j < this.belts[i].protectedAreas.length; j++)\r\n        if (this.belts[i].protectedAreas[j].id === id)\r\n          return this.belts[i];\r\n    return null;\r\n  }\r\n  getMaxFlowPercentFromBelt(id: string): any {\r\n    var result = { nodeId: '', value: 0 },\r\n        belt = this.getBelt(id);\r\n\r\n    belt.branches.forEach(branch => {\r\n      branch.nodes.forEach(node => {\r\n        if (node.flowPercent > result.value)\r\n          result = { nodeId: node.id, value: node.flowPercent };\r\n      })\r\n    });\r\n    \r\n    return result;\r\n  }\r\n  getMinFlowPercentFromBelt(id: string): any {\r\n    var result = { nodeId: '', value: 10000 },\r\n        belt = this.getBelt(id);\r\n\r\n    belt.branches.forEach(branch => {\r\n      branch.nodes.forEach(node => {\r\n        if (node.flowPercent < result.value)\r\n          result = { nodeId: node.id, value: node.flowPercent };\r\n      })\r\n    });\r\n    \r\n    return result.value == 10000 ? { nodeId: '', value: 0 } : result;\r\n  }\r\n\r\n  // Electric\r\n  getElectricalOutlet(id: string): ElectricalOutlet {\r\n    for (var i = 0; i < this.belts.length; i++) {\r\n      for (var j = 0; j < this.belts[i].electricalOutlets.length; j++) {\r\n        if (this.belts[i].electricalOutlets[j].id === id) return this.belts[i].electricalOutlets[j];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  getElectricalOutletFromTransformer(id: string): ElectricalOutlet {\r\n    for (var i = 0; i < this.belts.length; i++) {\r\n      for (var j = 0; j < this.belts[i].electricalOutlets.length; j++) {\r\n        for (var k = 0; k < this.belts[i].electricalOutlets[j].transformers.length; k++) {\r\n          if (this.belts[i].electricalOutlets[j].transformers[k].id === id) return this.belts[i].electricalOutlets[j];\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  getElectricalOutletIndex(id: string): number {\r\n    for (var i = 0; i < this.belts.length; i++) {\r\n      for (var j = 0; j < this.belts[i].electricalOutlets.length; j++) {\r\n        if (this.belts[i].electricalOutlets[j].id === id) j;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n  getTransformer(id: string): Transformer {\r\n    for (var i = 0; i < this.belts.length; i++) {\r\n      for (var j = 0; j < this.belts[i].electricalOutlets.length; j++) {\r\n        for (var k = 0; k < this.belts[i].electricalOutlets[j].transformers.length; k++) {\r\n          if (this.belts[i].electricalOutlets[j].transformers[k].id === id) return this.belts[i].electricalOutlets[j].transformers[k];\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  getTransformerFromNode(id: string): Transformer {\r\n    for (var i = 0; i < this.belts.length; i++) {\r\n      for (var j = 0; j < this.belts[i].electricalOutlets.length; j++) {\r\n        for (var k = 0; k < this.belts[i].electricalOutlets[j].transformers.length; k++) {\r\n          for (var l = 0; l < this.belts[i].electricalOutlets[j].transformers[k].electricalBranches.length; l++) {\r\n            for (var m = 0; m < this.belts[i].electricalOutlets[j].transformers[k].electricalBranches[l].electricalNodes.length; m++) {\r\n              if (this.belts[i].electricalOutlets[j].transformers[k].electricalBranches[l].electricalNodes[m].nodeId === id) return this.belts[i].electricalOutlets[j].transformers[k];\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  getTransformerFromElectricalBranch(id: string): Transformer {\r\n    for (var i = 0; i < this.belts.length; i++) {\r\n      for (var j = 0; j < this.belts[i].electricalOutlets.length; j++) {\r\n        for (var k = 0; k < this.belts[i].electricalOutlets[j].transformers.length; k++) {\r\n          for (var l = 0; l < this.belts[i].electricalOutlets[j].transformers[k].electricalBranches.length; l++) {\r\n            if (this.belts[i].electricalOutlets[j].transformers[k].electricalBranches[l].id === id) return this.belts[i].electricalOutlets[j].transformers[k];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  getTransformerIndex(id: string): number {\r\n    for (var i = 0; i < this.belts.length; i++) {\r\n      for (var j = 0; j < this.belts[i].electricalOutlets.length; j++) {\r\n        for (var k = 0; k < this.belts[i].electricalOutlets[j].transformers.length; k++) {\r\n          if (this.belts[i].electricalOutlets[j].transformers[k].id === id) return k;\r\n        }\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n  getElectricalBranch(id: string): ElectricalBranch {\r\n    for (var i = 0; i < this.belts.length; i++) {\r\n      for (var j = 0; j < this.belts[i].electricalOutlets.length; j++) {\r\n        for (var k = 0; k < this.belts[i].electricalOutlets[j].transformers.length; k++) {\r\n          for (var l = 0; l < this.belts[i].electricalOutlets[j].transformers[k].electricalBranches.length; l++) {\r\n            if (this.belts[i].electricalOutlets[j].transformers[k].electricalBranches[l].id === id) return this.belts[i].electricalOutlets[j].transformers[k].electricalBranches[l];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  getElectricalBranchFromNode(id: string): ElectricalBranch {\r\n    for (var i = 0; i < this.belts.length; i++) {\r\n      for (var j = 0; j < this.belts[i].electricalOutlets.length; j++) {\r\n        for (var k = 0; k < this.belts[i].electricalOutlets[j].transformers.length; k++) {\r\n          for (var l = 0; l < this.belts[i].electricalOutlets[j].transformers[k].electricalBranches.length; l++) {\r\n            for (var m = 0; m < this.belts[i].electricalOutlets[j].transformers[k].electricalBranches[l].electricalNodes.length; m++) {\r\n              if (this.belts[i].electricalOutlets[j].transformers[k].electricalBranches[l].electricalNodes[m].nodeId === id) return this.belts[i].electricalOutlets[j].transformers[k].electricalBranches[l];\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  getElectricalBranchIndex(id: string): number {\r\n    for (var i = 0; i < this.belts.length; i++) {\r\n      for (var j = 0; j < this.belts[i].electricalOutlets.length; j++) {\r\n        for (var k = 0; k < this.belts[i].electricalOutlets[j].transformers.length; k++) {\r\n          for (var l = 0; l < this.belts[i].electricalOutlets[j].transformers[k].electricalBranches.length; l++) {\r\n            if (this.belts[i].electricalOutlets[j].transformers[k].electricalBranches[l].id === id) return l;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n  getElectricalNodeIndex(id: string): number {\r\n    for (var i = 0; i < this.belts.length; i++) {\r\n      for (var j = 0; j < this.belts[i].electricalOutlets.length; j++) {\r\n        for (var k = 0; k < this.belts[i].electricalOutlets[j].transformers.length; k++) {\r\n          for (var l = 0; l < this.belts[i].electricalOutlets[j].transformers[k].electricalBranches.length; l++) {\r\n            for (var m = 0; m < this.belts[i].electricalOutlets[j].transformers[k].electricalBranches[l].electricalNodes.length; m++) {\r\n              if (this.belts[i].electricalOutlets[j].transformers[k].electricalBranches[l].electricalNodes[m].nodeId === id) return m;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  // ProtectedAreas\r\n  getProtectedArea(id: string): ProtectedArea {\r\n    for(var i = 0; i < this.belts.length; i++)\r\n      for(var j = 0; j < this.belts[i].protectedAreas.length; j++)\r\n        if (this.belts[i].protectedAreas[j].id === id)\r\n          return this.belts[i].protectedAreas[j];\r\n    return null;\r\n  }\r\n  getProtectedAreaIndex(id: string): number {\r\n    for(var i = 0; i < this.belts.length; i++)\r\n      for(var j = 0; j < this.belts[i].protectedAreas.length; j++)\r\n        if (this.belts[i].protectedAreas[j].id === id)\r\n          return j;\r\n    return -1;\r\n  }\r\n\r\n  // Methods\r\n  setNodePosition(id: string, lat: number, lng: number) {\r\n    // Get node, nodeIndex, branch\r\n    var node = this.getNode(id),\r\n        nodeIndex = this.getNodeIndex(id),\r\n        branch = this.getBranchFromNode(id),\r\n        childBranch = this.getNodeChildBranch(id);\r\n\r\n    // Edit node\r\n    node.lat = lat;\r\n    node.lng = lng;\r\n\r\n    // Update child node distance\r\n    if (nodeIndex < branch.nodes.length - 1) {\r\n      // Get child node\r\n      var childNode = branch.nodes[nodeIndex + 1];\r\n      \r\n      // Calculate new distance\r\n      childNode.prevDistance = this.getDistance({ lat: childNode.lat, lng: childNode.lng }, { lat: node.lat, lng: node.lng });\r\n    }\r\n  \r\n    // Check if parent node of an other branch\r\n    if (childBranch) {\r\n      // Get child Node\r\n      var childNode = childBranch.nodes[0];\r\n      \r\n      // Calculate new distance\r\n      childNode.prevDistance = this.getDistance({ lat: childNode.lat, lng: childNode.lng }, { lat: node.lat, lng: node.lng });\r\n    }\r\n  }\r\n  setElectricalOutletPosition(id: string, lat: number, lng: number) {\r\n    // Get electricalOutlet\r\n    var electricalOutlet = this.getElectricalOutlet(id);\r\n        \r\n    // Edition\r\n    electricalOutlet.lat = lat;\r\n    electricalOutlet.lng = lng;\r\n  }\r\n  delNode(id) {\r\n    // Get branch, childBranch & nodeIndex\r\n    var branch = this.getBranchFromNode(id),\r\n        childBranch = this.getNodeChildBranch(id),\r\n        nodeIndex = this.getNodeIndex(id);\r\n    \r\n    // Check child branch\r\n    if (childBranch != null) this.delBranch(childBranch.id);\r\n    \r\n    // Delete electrical node reference\r\n    this.delElectricalNode(id);\r\n    \r\n    // Delete\r\n    branch.nodes.splice(nodeIndex, 1);\r\n\r\n    // Check branch\r\n    if (branch.nodes.length == 0) this.delBranch(branch.id);\r\n  }\r\n  delNodeAndChildren(id) {\r\n    // Get branch & nodeIndex\r\n    var branch = this.getBranchFromNode(id),\r\n        nodeIndex = this.getNodeIndex(id);\r\n\r\n    // Del nodes\r\n    var nodesIds = [];\r\n    branch.nodes.forEach((node, index) => {\r\n      if (index >= nodeIndex)\r\n        nodesIds.push(node.id)\r\n    });\r\n    nodesIds.forEach(nodeId => {\r\n      this.delNode(nodeId)\r\n    });\r\n  }\r\n  delBranch(id: string) {\r\n    // Get belt, branch & branchIndex\r\n    var belt = this.getBeltFromBranch(id),\r\n        branch = this.getBranch(id),\r\n        branchIndex = this.getBranchIndex(id);\r\n    \r\n    // Del all electrical nodes references\r\n    branch.nodes.forEach(node => {\r\n      this.delElectricalNode(node.id);\r\n    });\r\n    \r\n    // Find child branches\r\n    belt.branches.filter(b => b.parentBranch === id).forEach(b => {\r\n      this.delBranch(b.id);\r\n    });\r\n    \r\n    // Delete\r\n    belt.branches.splice(branchIndex, 1);\r\n  }\r\n  delBelt(id: string) {\r\n    this.belts.splice(this.getBeltIndex(id), 1);\r\n  }\r\n  addNode(node: Node, branch: Branch, index: number) {\r\n    // Add node\r\n    branch.nodes.splice(index, 0, node);\r\n\r\n    // Check electrical Part\r\n    var previousNode = this.getPreviousNode(node.id),\r\n        nextNodeInBranch = this.getNextNodes(node.id).nextNodeInBranch;\r\n    if (previousNode != null && nextNodeInBranch != null) {\r\n      var previousNodeElectricalBranch = this.getElectricalBranchFromNode(previousNode.id),\r\n          nextNodeInBranchElectricalBranch = this.getElectricalBranchFromNode(nextNodeInBranch.id);\r\n      \r\n      // Check if same electricalBranch\r\n      if (previousNodeElectricalBranch && nextNodeInBranchElectricalBranch && previousNodeElectricalBranch.id == nextNodeInBranchElectricalBranch.id) {\r\n        var previousElectricalNodeIndex = this.getElectricalNodeIndex(previousNode.id);\r\n\r\n        if (previousElectricalNodeIndex != -1) {\r\n          var electricalNode = new ElectricalNode();\r\n          electricalNode.id = UUID.UUID();\r\n          electricalNode.nodeId = node.id;\r\n          previousNodeElectricalBranch.electricalNodes.splice(previousElectricalNodeIndex + 1, 0, electricalNode);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  delElectricalOutlet(id: string) {\r\n    // Get belt & electricalOutletIndex\r\n    var belt = this.getBeltFromElectricalOutlet(id),\r\n    electricalOutletIndex = this.getElectricalOutletIndex(id);\r\n\r\n    // Delete\r\n    belt.electricalOutlets.splice(electricalOutletIndex, 1);\r\n  }\r\n  delTransformer(id: string) {\r\n    // Get electricalOutlet & transformerIndex\r\n    var electricalOutlet = this.getElectricalOutletFromTransformer(id),\r\n        transformerIndex = this.getTransformerIndex(id);\r\n\r\n    // Delete\r\n    electricalOutlet.transformers.splice(transformerIndex, 1);\r\n  }\r\n  isNodeInElectricalBranch(id: string): boolean {\r\n    for (var i = 0; i < this.belts.length; i++) {\r\n      for (var j = 0; j < this.belts[i].electricalOutlets.length; j++) {\r\n        for (var k = 0; k < this.belts[i].electricalOutlets[j].transformers.length; k++) {\r\n          for (var l = 0; l < this.belts[i].electricalOutlets[j].transformers[k].electricalBranches.length; l++) {\r\n            for (var m = 0; m < this.belts[i].electricalOutlets[j].transformers[k].electricalBranches[l].electricalNodes.length; m++) {\r\n              if (this.belts[i].electricalOutlets[j].transformers[k].electricalBranches[l].electricalNodes[m].nodeId === id) return true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  addElectricalBranch(transformerId: string): string {\r\n    // Get transformer & new id\r\n    var transformer = this.getTransformer(transformerId),\r\n        id = UUID.UUID();\r\n    \r\n    // Create\r\n    var electricalBranch = new ElectricalBranch();\r\n    electricalBranch.id = id;\r\n    transformer.electricalBranches.push(electricalBranch);\r\n    \r\n    return id;\r\n  }\r\n  editElectricalBranch(id: string, parentElectricalBranch: string, parentElectricalNode: string) {\r\n    // Get electricalBranch\r\n    var electricalBranch = this.getElectricalBranch(id);\r\n    \r\n    // Edit\r\n    electricalBranch.parentElectricalBranch = parentElectricalBranch;\r\n    electricalBranch.parentElectricalNode = parentElectricalNode;\r\n  }\r\n  delElectricalBranch(id: string) {\r\n    // Get transformer & electricalBranchIndex\r\n    var transformer = this.getTransformerFromElectricalBranch(id),\r\n        electricalBranchIndex = this.getElectricalBranchIndex(id);\r\n    \r\n    // Delete\r\n    transformer.electricalBranches.splice(electricalBranchIndex, 1);\r\n  }\r\n  addElectricalNode(electricalBranchId: string, nodeId: string): string {\r\n    // Get electricalBranch & new Id\r\n    var electricalBranch = this.getElectricalBranch(electricalBranchId),\r\n        id = UUID.UUID();\r\n    \r\n    // Add\r\n    var electricalNode = new ElectricalNode();\r\n    electricalNode.id = id;\r\n    electricalNode.nodeId = nodeId;\r\n    electricalBranch.electricalNodes.push(electricalNode);\r\n\r\n    return id;\r\n  }\r\n  addNodeToTransformer(nodeId: string, transformerId: string, startNodeId: string = null) {\r\n    // Get node, nodeIndex & transformer\r\n    var node = this.getNode(nodeId),\r\n        nodeIndex = this.getNodeIndex(nodeId),\r\n        transformer = this.getTransformer(transformerId);\r\n\r\n    if (startNodeId == null) startNodeId = nodeId;\r\n    \r\n    // The transformer has no electrical branches\r\n    if (transformer.electricalBranches.length == 0) {\r\n      // Création de la branche principale\r\n      var electricalBranchId = this.addElectricalBranch(transformerId);\r\n      \r\n      // Ajout du noeud selectionné à la branche\r\n      this.addElectricalNode(electricalBranchId, nodeId);\r\n      return true;\r\n    }\r\n    \r\n    // The transformer has electrical branches\r\n    else {\r\n      /// Find the node supplied by the selected transformer\r\n      // 1. Going up\r\n      // Get the previous node\r\n      var previousNode = this.getPreviousNode(nodeId);\r\n    \r\n      // The previous node exists\r\n      if (previousNode != null && startNodeId != previousNode.id) {\r\n        // The previous node is supplied\r\n        var previousNodeTransformer = this.getTransformerFromNode(previousNode.id);\r\n        if (previousNodeTransformer != null) {\r\n          \r\n          // The previous node's transformer is the one selected\r\n          if (previousNodeTransformer.id === transformerId) {\r\n            // Get the previous node's electrical branch\r\n            var electricalBranch = this.getElectricalBranchFromNode(previousNode.id);\r\n            \r\n            // Get the previous node's electrical nodes number\r\n            if (this.getSuppliedNodesNumberFromNode(previousNode.id) == 0) {\r\n              // Add the node to the previous node's electrical branch\r\n              this.addElectricalNode(electricalBranch.id, nodeId);\r\n              return true;\r\n            } else {\r\n              // Create a new electrical branch\r\n              var newElectricalBranchId = this.addElectricalBranch(previousNodeTransformer.id);\r\n              this.editElectricalBranch(newElectricalBranchId, electricalBranch.id, previousNode.id);\r\n              \r\n              // Add the node to the created electrical branch\r\n              this.addElectricalNode(newElectricalBranchId, nodeId);\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n        \r\n        // The previous node isn't supplied\r\n        else {\r\n          // Continue the search on previous nodes\r\n          if (this.addNodeToTransformer(previousNode.id, transformerId, nodeId)) {\r\n            // Get the electrical branch\r\n            var electricalBranch = this.getElectricalBranchFromNode(previousNode.id);\r\n            \r\n            // Add the node to this branch\r\n            this.addElectricalNode(electricalBranch.id, nodeId);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      \r\n      // 1. Going down\r\n      // Get the next node\r\n      var nextNodes = this.getNextNodes(nodeId);\r\n      \r\n      // 1.1 First we look into the child branch\r\n      if (nextNodes.nextNodeInChildBranch != null && startNodeId != nextNodes.nextNodeInChildBranch.id) {\r\n        // The next node is supplied\r\n        var nextNodeTransformer = this.getTransformerFromNode(nextNodes.nextNodeInChildBranch.id);\r\n        if (nextNodeTransformer != null) {\r\n          \r\n          // The next node's transformer is the one selected\r\n          if (nextNodeTransformer.id === transformerId) {\r\n            // Get the next node's electrical branch\r\n            var electricalBranch = this.getElectricalBranchFromNode(nextNodes.nextNodeInChildBranch.id);\r\n            \r\n            // Get the next node's electrical nodes number\r\n            if (this.getSuppliedNodesNumberFromNode(nextNodes.nextNodeInChildBranch.id) == 0) {\r\n              // Add the node to the next node's electrical branch\r\n              this.addElectricalNode(electricalBranch.id, node.id);\r\n              return true;\r\n            } else {\r\n              // Create a new electrical branch\r\n              var newElectricalBranchId = this.addElectricalBranch(nextNodeTransformer.id);\r\n              this.editElectricalBranch(newElectricalBranchId, electricalBranch.id, nextNodes.nextNodeInChildBranch.id);\r\n              \r\n              // Add the node to the created electrical branch\r\n              this.addElectricalNode(newElectricalBranchId, nodeId);\r\n              return true;\r\n            }\r\n          }\r\n        \r\n        }\r\n        \r\n        // The previous node isn't supplied\r\n        else {\r\n          // Continue the search on next nodes\r\n          if (this.addNodeToTransformer(nextNodes.nextNodeInChildBranch.id, transformerId, nodeId)) {\r\n            // Get the electrical branch\r\n            var electricalBranch = this.getElectricalBranchFromNode(nextNodes.nextNodeInChildBranch.id);\r\n            \r\n            // Add the node to this branch\r\n            this.addElectricalNode(electricalBranch.id, nodeId);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      \r\n      // 1.1 Then we look into the next node's branch\r\n      if (nextNodes.nextNodeInBranch != null && startNodeId != nextNodes.nextNodeInBranch.id) {\r\n        // The next node is supplied\r\n        var nextNodeTransformer = this.getTransformerFromNode(nextNodes.nextNodeInBranch.id);\r\n        if (nextNodeTransformer != null) {\r\n          \r\n          // The next node's transformer is the one selected\r\n          if (nextNodeTransformer.id === transformerId) {\r\n            // Get the next node's electrical branch\r\n            var electricalBranch = this.getElectricalBranchFromNode(nextNodes.nextNodeInBranch.id);\r\n            \r\n            // Get the next node's electrical nodes number\r\n            if (this.getSuppliedNodesNumberFromNode(nextNodes.nextNodeInBranch.id) == 0) {\r\n              // Ajout du noeud à la branche électrique\r\n              this.addElectricalNode(electricalBranch.id, nodeId);\r\n              return true;\r\n            } else {\r\n              // Création d'une nouvelle branche électrique\r\n              var newElectricalBranchId = this.addElectricalBranch(nextNodeTransformer.id);\r\n              this.editElectricalBranch(newElectricalBranchId, electricalBranch.id, nextNodes.nextNodeInBranch.id);\r\n              \r\n              // Ajout du noeud à la nouvelle branche électrique\r\n              this.addElectricalNode(newElectricalBranchId, nodeId);\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n        \r\n        // Le noeud suivant n'est pas alimenté\r\n        else {\r\n          // On continue la recherche sur les noeud suivants\r\n          if (this.addNodeToTransformer(nextNodes.nextNodeInBranch.id, transformerId, nodeId)) {\r\n            // Récupération de la branche électrique\r\n            var electricalBranch = this.getElectricalBranchFromNode(nextNodes.nextNodeInBranch.id);\r\n            \r\n            // Ajout du noeud à la branche électrique\r\n            this.addElectricalNode(electricalBranch.id, nodeId);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  delNodeFromElectricalBranch(id: string) {\r\n    this.belts.forEach(belt => {\r\n      belt.electricalOutlets.forEach(electricalOutlet => {\r\n        electricalOutlet.transformers.forEach(transformer => {\r\n          transformer.electricalBranches.forEach(electricalBranch => {\r\n            electricalBranch.electricalNodes.forEach((electricalNode, nodeIndex) => {\r\n              if (electricalNode.nodeId === id) {\r\n                // Only node of his branch\r\n                if (electricalBranch.electricalNodes.length == 1) {\r\n                  // Delete branch\r\n                  this.delElectricalBranch(electricalBranch.id);\r\n                }\r\n                \r\n                // Last node of his branch\r\n                else if (nodeIndex == electricalBranch.electricalNodes.length - 1) {\r\n                  this.delElectricalNode(id);\r\n                } else {\r\n                  // Delete all nodes of the branch\r\n                  electricalBranch.electricalNodes.forEach((electricalNode2, nodeIndex2) => {\r\n                    if (nodeIndex2 > nodeIndex) {\r\n                      this.delNodeFromElectricalBranch(electricalNode2.nodeId);\r\n                      this.delElectricalNode(id);\r\n                    }\r\n                  })\r\n                }\r\n                \r\n                // Delete child branches\r\n                transformer.electricalBranches.filter(eb => eb.parentElectricalNode == id).forEach(eb => {\r\n                  this.delElectricalBranch(eb.id);\r\n                })\r\n              }\r\n            \r\n            })\r\n          })\r\n        })\r\n      })\r\n    })\r\n  }\r\n  delElectricalNode(id: string) {\r\n    // Get electricalBranch & nodeIndex\r\n    var electricalBranch = this.getElectricalBranchFromNode(id),\r\n        nodeIndex = this.getElectricalNodeIndex(id);\r\n    \r\n    // Check if node is supplied\r\n    if (electricalBranch != null) {\r\n        // Delete\r\n        electricalBranch.electricalNodes.splice(nodeIndex, 1);\r\n\r\n        // Check electricalBranch's node array size\r\n        if (electricalBranch.electricalNodes.length == 0) this.delElectricalBranch(electricalBranch.id); // Remove electricalBranch\r\n    }\r\n  }\r\n  delProtectedArea(id: string) {\r\n    // Get belt & protectedAreaIndex\r\n    var belt = this.getBeltFromProtectedArea(id),\r\n        protectedAreaIndex = this.getProtectedAreaIndex(id);\r\n\r\n    if (belt != null && protectedAreaIndex != -1)\r\n      belt.protectedAreas.splice(protectedAreaIndex, 1);\r\n  }\r\n\r\n  getDistance(latLng1, latLng2) {\r\n\t\tfunction rad(x) {\r\n\t\t\treturn x * Math.PI / 180;\r\n\t\t}\r\n\t\t\r\n\t\tvar R = 6378137, // Earth’s mean radius in meter\r\n\t\t\t\tdLat = rad(latLng2.lat - latLng1.lat),\r\n\t\t\t\tdLong = rad(latLng2.lng - latLng1.lng);\r\n\t\t\r\n\t\tvar a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n\t\t\t\tMath.cos(rad(latLng1.lat)) * Math.cos(rad(latLng2.lat)) *\r\n\t\t\t\tMath.sin(dLong / 2) * Math.sin(dLong / 2);\r\n\t\t\r\n\t\tvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\t\t\r\n\t\tvar d = R * c;\r\n\t\t\r\n\t\treturn d; // returns the distance in meter\r\n  }\r\n  \r\n\r\n  getMinMaxDailyConsumption(belt: Belt, max: boolean = true): number {\r\n    var kgConsumed = max ? 0 : 10000;\r\n\r\n    if (belt.branches[0] && belt.branches[0].nodes[0]) {\r\n      // January\r\n      for (var i = 0; i < 4; i++) {\r\n        var consumption = 20 * belt.trapsNumber * this.januaryDiff[i] * (this.januaryDiff[4] / 10) / 1000;\r\n        if (max && consumption > kgConsumed) kgConsumed = consumption;\r\n        else if (!max && consumption > 0 && consumption < kgConsumed) kgConsumed = consumption;\r\n      }\r\n\r\n      // February\r\n      for (var i = 0; i < 4; i++) {\r\n        var consumption = 20 * belt.trapsNumber * this.februaryDiff[i] * (this.februaryDiff[4] / 10) / 1000;\r\n        if (max && consumption > kgConsumed) kgConsumed = consumption;\r\n        else if (!max && consumption > 0 && consumption < kgConsumed) kgConsumed = consumption;\r\n      }\r\n\r\n      // March\r\n      for (var i = 0; i < 4; i++) {\r\n        var consumption = 20 * belt.trapsNumber * this.marchDiff[i] * (this.marchDiff[4] / 10) / 1000;\r\n        if (max && consumption > kgConsumed) kgConsumed = consumption;\r\n        else if (!max && consumption > 0 && consumption < kgConsumed) kgConsumed = consumption;\r\n      }\r\n\r\n      // April\r\n      for (var i = 0; i < 4; i++) {\r\n        var consumption = 20 * belt.trapsNumber * this.aprilDiff[i] * (this.aprilDiff[4] / 10) / 1000;\r\n        if (max && consumption > kgConsumed) kgConsumed = consumption;\r\n        else if (!max && consumption > 0 && consumption < kgConsumed) kgConsumed = consumption;\r\n      }\r\n\r\n      // May\r\n      for (var i = 0; i < 4; i++) {\r\n        var consumption = 20 * belt.trapsNumber * this.mayDiff[i] * (this.mayDiff[4] / 10) / 1000;\r\n        if (max && consumption > kgConsumed) kgConsumed = consumption;\r\n        else if (!max && consumption > 0 && consumption < kgConsumed) kgConsumed = consumption;\r\n      }\r\n\r\n      // June\r\n      for (var i = 0; i < 4; i++) {\r\n        var consumption = 20 * belt.trapsNumber * this.juneDiff[i] * (this.juneDiff[4] / 10) / 1000;\r\n        if (max && consumption > kgConsumed) kgConsumed = consumption;\r\n        else if (!max && consumption > 0 && consumption < kgConsumed) kgConsumed = consumption;\r\n      }\r\n\r\n      // July\r\n      for (var i = 0; i < 4; i++) {\r\n        var consumption = 20 * belt.trapsNumber * this.julyDiff[i] * (this.julyDiff[4] / 10) / 1000;\r\n        if (max && consumption > kgConsumed) kgConsumed = consumption;\r\n        else if (!max && consumption > 0 && consumption < kgConsumed) kgConsumed = consumption;\r\n      }\r\n\r\n      // August\r\n      for (var i = 0; i < 4; i++) {\r\n        var consumption = 20 * belt.trapsNumber * this.augustDiff[i] * (this.augustDiff[4] / 10) / 1000;\r\n        if (max && consumption > kgConsumed) kgConsumed = consumption;\r\n        else if (!max && consumption > 0 && consumption < kgConsumed) kgConsumed = consumption;\r\n      }\r\n\r\n      // September\r\n      for (var i = 0; i < 4; i++) {\r\n        var consumption = 20 * belt.trapsNumber * this.septemberDiff[i] * (this.septemberDiff[4] / 10) / 1000;\r\n        if (max && consumption > kgConsumed) kgConsumed = consumption;\r\n        else if (!max && consumption > 0 && consumption < kgConsumed) kgConsumed = consumption;\r\n      }\r\n\r\n      // October\r\n      for (var i = 0; i < 4; i++) {\r\n        var consumption = 20 * belt.trapsNumber * this.octoberDiff[i] * (this.octoberDiff[4] / 10) / 1000;\r\n        if (max && consumption > kgConsumed) kgConsumed = consumption;\r\n        else if (!max && consumption > 0 && consumption < kgConsumed) kgConsumed = consumption;\r\n      }\r\n\r\n      // November\r\n      for (var i = 0; i < 4; i++) {\r\n        var consumption = 20 * belt.trapsNumber * this.novemberDiff[i] * (this.novemberDiff[4] / 10) / 1000;\r\n        if (max && consumption > kgConsumed) kgConsumed = consumption;\r\n        else if (!max && consumption > 0 && consumption < kgConsumed) kgConsumed = consumption;\r\n      }\r\n\r\n      // December\r\n      for (var i = 0; i < 4; i++) {\r\n        var consumption = 20 * belt.trapsNumber * this.decemberDiff[i] * (this.decemberDiff[4] / 10) / 1000;\r\n        if (max && consumption > kgConsumed) kgConsumed = consumption;\r\n        else if (!max && consumption > 0 && consumption < kgConsumed) kgConsumed = consumption;\r\n      }\r\n    }\r\n\r\n    if (kgConsumed == 10000) return 0;\r\n    else return kgConsumed;\r\n\r\n  }\r\n\r\n  getMinMaxMonthlyConsumption(belt: Belt, max: boolean = true): number {\r\n    var kgConsumed = max ? 0 : 10000;\r\n\r\n    if (belt.branches[0] && belt.branches[0].nodes[0]) {\r\n      // January\r\n      var januaryConsumption = 0;\r\n      for (var i = 0; i < 4; i++) januaryConsumption += 20 * belt.trapsNumber * this.januaryDiff[i] * 7 * (this.januaryDiff[4] / 10) / 1000;\r\n      if (max && januaryConsumption > kgConsumed) kgConsumed = januaryConsumption;\r\n      else if (!max && januaryConsumption > 0 && januaryConsumption < kgConsumed) kgConsumed = januaryConsumption;\r\n\r\n      // February\r\n      var februaryConsumption = 0;\r\n      for (var i = 0; i < 4; i++) februaryConsumption += 20 * belt.trapsNumber * this.februaryDiff[i] * 7 * (this.februaryDiff[4] / 10) / 1000;\r\n      if (max && februaryConsumption > kgConsumed) kgConsumed = februaryConsumption;\r\n      else if (!max && februaryConsumption > 0 && februaryConsumption < kgConsumed) kgConsumed = februaryConsumption;\r\n\r\n      // March\r\n      var marchConsumption = 0;\r\n      for (var i = 0; i < 4; i++) marchConsumption += 20 * belt.trapsNumber * this.marchDiff[i] * 7 * (this.marchDiff[4] / 10) / 1000;\r\n      if (max && marchConsumption > kgConsumed) kgConsumed = marchConsumption;\r\n      else if (!max && marchConsumption > 0 && marchConsumption < kgConsumed) kgConsumed = marchConsumption;\r\n\r\n      // April\r\n      var aprilConsumption = 0;\r\n      for (var i = 0; i < 4; i++) aprilConsumption += 20 * belt.trapsNumber * this.aprilDiff[i] * 7 * (this.aprilDiff[4] / 10) / 1000;\r\n      if (max && aprilConsumption > kgConsumed) kgConsumed = aprilConsumption;\r\n      else if (!max && aprilConsumption > 0 && aprilConsumption < kgConsumed) kgConsumed = aprilConsumption;\r\n\r\n      // May\r\n      var mayConsumption = 0;\r\n      for (var i = 0; i < 4; i++) mayConsumption += 20 * belt.trapsNumber * this.mayDiff[i] * 7 * (this.mayDiff[4] / 10) / 1000;\r\n      if (max && mayConsumption > kgConsumed) kgConsumed = mayConsumption;\r\n      else if (!max && mayConsumption > 0 && mayConsumption < kgConsumed) kgConsumed = mayConsumption;\r\n\r\n      // June\r\n      var juneConsumption = 0;\r\n      for (var i = 0; i < 4; i++) juneConsumption += 20 * belt.trapsNumber * this.juneDiff[i] * 7 * (this.juneDiff[4] / 10) / 1000;\r\n      if (max && juneConsumption > kgConsumed) kgConsumed = juneConsumption;\r\n      else if (!max && juneConsumption > 0 && juneConsumption < kgConsumed) kgConsumed = juneConsumption;\r\n\r\n      // July\r\n      var julyConsumption = 0;\r\n      for (var i = 0; i < 4; i++) julyConsumption += 20 * belt.trapsNumber * this.julyDiff[i] * 7 * (this.julyDiff[4] / 10) / 1000;\r\n      if (max && julyConsumption > kgConsumed) kgConsumed = julyConsumption;\r\n      else if (!max && julyConsumption > 0 && julyConsumption < kgConsumed) kgConsumed = julyConsumption;\r\n\r\n      // August\r\n      var augustConsumption = 0;\r\n      for (var i = 0; i < 4; i++) augustConsumption += 20 * belt.trapsNumber * this.augustDiff[i] * 7 * (this.augustDiff[4] / 10) / 1000;\r\n      if (max && augustConsumption > kgConsumed) kgConsumed = augustConsumption;\r\n      else if (!max && augustConsumption > 0 && augustConsumption < kgConsumed) kgConsumed = augustConsumption;\r\n\r\n      // September\r\n      var septemberConsumption = 0;\r\n      for (var i = 0; i < 4; i++) septemberConsumption += 20 * belt.trapsNumber * this.septemberDiff[i] * 7 * (this.septemberDiff[4] / 10) / 1000;\r\n      if (max && septemberConsumption > kgConsumed) kgConsumed = septemberConsumption;\r\n      else if (!max && septemberConsumption > 0 && septemberConsumption < kgConsumed) kgConsumed = septemberConsumption;\r\n\r\n      // October\r\n      var octoberConsumption = 0;\r\n      for (var i = 0; i < 4; i++) octoberConsumption += 20 * belt.trapsNumber * this.octoberDiff[i] * 7 * (this.octoberDiff[4] / 10) / 1000;\r\n      if (max && octoberConsumption > kgConsumed) kgConsumed = octoberConsumption;\r\n      else if (!max && octoberConsumption > 0 && octoberConsumption < kgConsumed) kgConsumed = octoberConsumption;\r\n\r\n      // November\r\n      var novemberConsumption = 0;\r\n      for (var i = 0; i < 4; i++) novemberConsumption += 20 * belt.trapsNumber * this.novemberDiff[i] * 7 * (this.novemberDiff[4] / 10) / 1000;\r\n      if (max && novemberConsumption > kgConsumed) kgConsumed = novemberConsumption;\r\n      else if (!max && novemberConsumption > 0 && novemberConsumption < kgConsumed) kgConsumed = novemberConsumption;\r\n\r\n      // December\r\n      var decemberConsumption = 0;\r\n      for (var i = 0; i < 4; i++) decemberConsumption += 20 * belt.trapsNumber * this.decemberDiff[i] * 7 * (this.decemberDiff[4] / 10) / 1000;\r\n      if (max && decemberConsumption > kgConsumed) kgConsumed = decemberConsumption;\r\n      else if (!max && decemberConsumption > 0 && decemberConsumption < kgConsumed) kgConsumed = decemberConsumption;\r\n    }\r\n\r\n    if (kgConsumed == 10000) return 0;\r\n    else return kgConsumed;\r\n\r\n  }\r\n\r\n  getSeasonalConsumption(belt: Belt): number {\r\n    var kgConsumed = 0;\r\n\r\n    if (belt.branches[0] && belt.branches[0].nodes[0]) {\r\n      var beltRefConsumption = belt.branches[0].nodes[0].flowIn;\r\n\r\n      // January\r\n      for (var i = 0; i < 4; i++) kgConsumed += 20 * belt.trapsNumber * this.januaryDiff[i] * 7 * (this.januaryDiff[4] / 10) / 1000;\r\n\r\n      // February\r\n      for (var i = 0; i < 4; i++) kgConsumed += 20 * belt.trapsNumber * this.februaryDiff[i] * 7 * (this.februaryDiff[4] / 10) / 1000;\r\n\r\n      // March\r\n      for (var i = 0; i < 4; i++) kgConsumed += 20 * belt.trapsNumber * this.marchDiff[i] * 7 * (this.marchDiff[4] / 10) / 1000;\r\n\r\n      // April\r\n      for (var i = 0; i < 4; i++) kgConsumed += 20 * belt.trapsNumber * this.aprilDiff[i] * 7 * (this.aprilDiff[4] / 10) / 1000;\r\n\r\n      // May\r\n      for (var i = 0; i < 4; i++) kgConsumed += 20 * belt.trapsNumber * this.mayDiff[i] * 7 * (this.mayDiff[4] / 10) / 1000;\r\n\r\n      // June\r\n      for (var i = 0; i < 4; i++) kgConsumed += 20 * belt.trapsNumber * this.juneDiff[i] * 7 * (this.juneDiff[4] / 10) / 1000;\r\n\r\n      // July\r\n      for (var i = 0; i < 4; i++) kgConsumed += 20 * belt.trapsNumber * this.julyDiff[i] * 7 * (this.julyDiff[4] / 10) / 1000;\r\n\r\n      // August\r\n      for (var i = 0; i < 4; i++) kgConsumed += 20 * belt.trapsNumber * this.augustDiff[i] * 7 * (this.augustDiff[4] / 10) / 1000;\r\n\r\n      // September\r\n      for (var i = 0; i < 4; i++) kgConsumed += 20 * belt.trapsNumber * this.septemberDiff[i] * 7 * (this.septemberDiff[4] / 10) / 1000;\r\n\r\n      // October\r\n      for (var i = 0; i < 4; i++) kgConsumed += 20 * belt.trapsNumber * this.octoberDiff[i] * 7 * (this.octoberDiff[4] / 10) / 1000;\r\n\r\n      // November\r\n      for (var i = 0; i < 4; i++) kgConsumed += 20 * belt.trapsNumber * this.novemberDiff[i] * 7 * (this.novemberDiff[4] / 10) / 1000;\r\n\r\n      // December\r\n      for (var i = 0; i < 4; i++) kgConsumed += 20 * belt.trapsNumber * this.decemberDiff[i] * 7 * (this.decemberDiff[4] / 10) / 1000;\r\n    }\r\n\r\n    return kgConsumed;\r\n  }\r\n}\r\n\r\nexport enum VersionType {\r\n  PRE_ESTIMATE      = 'PRE_ESTIMATE',\r\n  ESTIMATE          = 'ESTIMATE',\r\n  ACCEPTED_ESTIMATE = 'ACCEPTED_ESTIMATE',\r\n  INSTALLATION      = 'INSTALLATION'\r\n}"],"sourceRoot":""}